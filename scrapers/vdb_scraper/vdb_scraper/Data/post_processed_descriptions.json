{"Konsumpsychologie": {"name": "Konsumpsychologie", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/103/detail", "id": "103", "description": {"de": "Beschreibung: In dieser Veranstaltung werden Grundlagen der Konsumentenpsychologie behandelt. Dabei werden Theorien und Befunde zu den Bereichen Lernen, Gedächtnis, Emotion, Einstellungen und Entscheidungsverhalten auf das Themengebiet der Konsumentenpsychologie übertragen.\r\nFragen, die hier behandelt werden, sind beispielsweise:\r\n\r\nWie laufen Kaufentscheidungen ab und welche Kaufentscheidungstypen gibt es?\r\nWie sind Produktinformationen im Gedächtnis gespeichert?\r\nWie kann man die Einstellung zu einem Produkt verändern?\r\nKönnen KonsumentInnen subliminal beeinflusst werden?\r\nWas bewirkt der Zusatznutzen/Erlebniswert eines Produkts?\r\nWelche psychologischen Mechanismen erklären die Wirkung von Marken?\r\n\r\nWeiterhin werden verschiedene Methoden der Marktforschung behandelt sowie die Wirkung und Gestaltung von Werbung diskutiert. Lernziele: Mit dieser Veranstaltung werden die Studierenden in die Lage versetzt, Grundlagenwissen im Bereich der Konsumentenpsychologie zu erwerben, so dass sie Theorien, Konzepte und Methoden anführen, erklären, anwenden und beurteilen können. Hierdurch werden Kompetenzen ausgebildet, um auf Fragen aus der Praxis wissenschaftlich fundierte Antworten geben zu können und deren Umsetzung zu begleiten. Literatur: \r\nFelser, G. (2015). Werbe- und Konsumentenpsychologie (4. Aufl.). Berlin: Springer.\r\nFlorack, A., Scarabis, M. &amp; Primosch, E. (Hrsg.) (2007). Psychologie der Markenführung. München: Vahlen.\r\nKroeber-Riel, W. &amp; Gröppel-Klein, A. (2013). Konsumentenverhalten (10. Aufl.). München: Vahlen.\r\n Vorleistung:  Infolink:  Bemerkung: alter Titel: KonsumentInnenpsychologie", "en": "Description:  Learning Targets:  Literature: \r\nFelser, G. (2015). Werbe- und Konsumentenpsychologie (4. Aufl.). Berlin: Springer.\r\nFlorack, A., Scarabis, M. &amp; Primosch, E. (Hrsg.) (2007). Psychologie der Markenführung. München: Vahlen.\r\nKroeber-Riel, W. &amp; Gröppel-Klein, A. (2013). Konsumentenverhalten (10. Aufl.). München: Vahlen.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Master-Arbeit (einschließlich Kolloquium)": {"name": "Master-Arbeit (einschließlich Kolloquium)", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/208/detail", "id": "208", "description": {"de": "Beschreibung: Die Master-Arbeit ist eine Prüfungsarbeit, in der die oder der Studierende zum Abschluss des Studiums zeigen soll, dass er innerhalb einer vorgegebenen Frist von 6 Monaten ein Problem selbstständig unter Anleitung nach wissenschaftlichen Methoden bearbeiten kann. Die Arbeit soll wie ein Projekt in der Praxis unter Beachtung von Methoden des Projektmanagements betreut und durchgeführt werden. Dokumentation und Präsentation (Kolloquium, deutsch oder englisch) sollen zeigen, dass die oder der Studierende in der Lage ist, Zusammenhänge und Ergebnisse verständlich und präzise darzustellen. Lernziele: Die Master-Abschlussarbeit stellt eine Prüfungsleistung dar. Neben der fachlichen Vertiefung an einem Beispiel dient sie auch dem Erwerb und der Vertiefung folgender Soft-Skills: - Selbstlernfähigkeit, - Teamfähigkeit (Zusammenarbeit mit den Betreuern), - Anwendung von Methoden des Projektmanagements, - Kommunikationsfähigkeit: technische Dokumentation und Präsentation, im Fall englischer Präsentation auch Übung von Sprachkenntnissen. Literatur: Spezifisch für das gewählte Thema Vorleistung: je nach Studiengang eine bestimmte Mindestzahl an ECTS-Credits.  Infolink:  Bemerkung: ", "en": "Description: The master-thesis is an examination paper, in which the student should show that he can solve a problem self-contained under guidance by using scientific methods, within 6 months at the end of his studies. This thesis is supervised and conducted like a project in practice considering methods of project management. Documentation and presentation (colloquium, German or English) should show that the student is able to illustrate relations and results in a coherent and precise way. Learning Targets: The master-thesis represents an examination. Besides the professional engrossing by using an example the acquisition of soft skills are also gained: - self-learning ability - capacity of teamwork (working together with the supervisor) - application of methods of project management - communications skills: technical documentation and presentation, in case of an English presentation also practice of language skills Literature: Spezifisch für das gewählte Thema Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Cognitive and Media Science (Social Media and Professional Communication), PO19 - M-KM(SMPK)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/479/detail", "id": "479", "type": "StudyCourse"}}, "Test- und Fragebogenkonstruktion 1": {"name": "Test- und Fragebogenkonstruktion 1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/1059/detail", "id": "1059", "description": {"de": "Beschreibung: Behandelt werden die in der Psychologie gebräuchlichen Messmethoden (Fragebogen, Tests etc.), Gütekriterien, Itemkennwerte, Normierung, Standardisierung sowie die Klassische Testtheorie. Auch werden die Methoden der Itemkonstruktion behandelt. Anschließend werden die statistischen Methoden der Prüfung von Tests und Fragebögen behandelt, wobei insbesondere auf die Prüfung der Dimensionalität von Messinstrumenten mittels exploratorischer und konfirmatorischer Methoden eingegangen wird. Auch werden Methoden zur Prüfung der Reliabilität und Validität von Messinstrumenten besprochen und angewendet, wobei auch komplexere Datenauswertungsmethoden (z.B. Strukturgleichungsmodelle) vorgestellt und angewendet werden.\r\nIn der Veranstaltung Test- und Fragebogenkonstruktion I wird über die Vermittlung des theoretischen Wissens hinausgehend ein Test bzw. Fragebogen entwickelt. Die Vorstellung des entwickelten Messinstruments stellt den Abschluss dieser Veranstaltung dar. In der Veranstaltung Test- und Fragebogenkonstruktion II werden die mittels des entwickelten Messinstruments gewonnenen Daten verwendet, um die Messgüte des Verfahrens zu prüfen. Lernziele: Die Absolventinnen und Absolventen dieser Veranstaltung wissen nach welchen Kriterien die Qualität von Messinstrumenten beurteilt wird, welche Faktoren ihre Qualität beeinträchtigen und wie man die Qualität erhöhen kann. Sie wissen, wie Messinstrumente normiert und standardisiert werden. Sie kennen die Messmodelle der Klassischen Testtheorie. Die Studierenden können Gütekriterien anhand empirischer Daten berechnen und optimieren. Sie sind in der Lage, die Gütekriterien zu beurteilen und konkrete Untersuchungen zu planen, mit denen eine Gütebeurteilung möglich ist. Die Studierenden sind vertraut mit Methoden der Itemkonstruktion und der Gestaltung von Antwortformaten und können deren Einsatzmöglichkeiten beurteilen. Sie verstehen, dass die Konstruktion von Items ein theoriegeleiteter Prozess ist. Die Studierenden sollen über Fertigkeiten im Umgang mit Statistiksoftware verfügen, um die statistische Prüfung der Gütekriterien auf empirische Daten anwenden und den Ergebnisoutput interpretieren zu können. Die Studierenden sollen in der Lage sein, psychologische Messinstrumente auf der Basis der klassischen Testtheorie zu konstruieren, ihre Messeigenschaften zu untersuchen und ein Instrument zu optimieren, damit es die angestrebte Messgüte besitzt. Ferner sind die Studierenden in der Lage die für den Studiengang speziell wichtigen Soft Skills anzuwenden, wobei insbesondere die Fähigkeit Sachverhalte und Methoden zu präsentieren angewendet werden können. Literatur: Literatur wird in der Veranstaltung bekannt gegeben. Vorleistung: Test- und Fragebogenkonstruktion I ist Voraussetzung für die Teilnahme an Test- und Fragebogenkonstruktion II Infolink:  Bemerkung: ", "en": "Description: Key issues are the commonly used measurement methods (questionnaires, tests etc.), quality criteria, statistical item characteristics, normalization, standardization and the Classical Test Theory.\r\nAlso, methodologies of item construction and statistical evaluation of tests and questionnaires will be relevant. For the statistical evaluation, the assessment of dimensionality of measurement instruments through exploratory and confirmatory methods are especially relevant. Methodologies for assessing reliability and validity of measurement instruments will be discussed and applied and also more complex methods for data evaluation will be presented and applied (e.g. structural equation models).\r\nBesides theoretical knowledge about the construction of measurement instruments, a test or questionnaire will be developed in the course Test Theory and Questionnaire Construction I. Presenting the developed measurement instrument marks the completion of this course. In the following course Test Theory and Questionnaire Construction II, quality criteria of the test or questionnaire will be assessed through data collection and analysis with the help of the developed measurement instrument. Learning Targets: The graduates of this course know about criteria that are relevant when assessing the quality of measurement instruments, they know which factors can compromise the quality and how the quality can be increased. They know about models of Classical Test Theory and how to standardize measurement instruments. The students can calculate, evaluate and optimize statistic quality criteria of measurement instruments with the help of empirical data. They are capable of planning specific studies that allow for the assessment of quality. Students are familiar with methodologies regarding item construction, the design of appropriate answer formats and can evaluate their fields of application. They understand, that item construction is a theory-based process. Students possess abilities regarding statistics software in order to statistically examine the quality criteria and to interpret the output of statistic software. Students are capable of creating a psychological measurement instrument on the basis of Classical Test Theory, of investigating its quality criteria and of optimizing the instrument in order for it to reach pursued quality. Also, students are able to apply specific soft skills that are especially important for this study program when presenting complex issues and methodologies. Literature: Literatur wird in der Veranstaltung bekannt gegeben. Pre-Qualifications: Test Design and Questionnaire Construction I is a prerequisite for attending Test Design and Questionnaire Construction II Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Cognitive and Media Science (Psychology), PO19 - M-KM(PS)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/475/detail", "id": "475", "type": "StudyCourse"}}, "Test- und Fragebogenkonstruktion 2": {"name": "Test- und Fragebogenkonstruktion 2", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/1061/detail", "id": "1061", "description": {"de": "Beschreibung: Behandelt werden die in der Psychologie gebräuchlichen Messmethoden (Fragebogen, Tests etc.), Gütekriterien, Itemkennwerte, Normierung, Standardisierung sowie die Klassische Testtheorie. Auch werden die Methoden der Itemkonstruktion behandelt. Anschließend werden die statistischen Methoden der Prüfung von Tests und Fragebögen behandelt, wobei insbesondere auf die Prüfung der Dimensionalität von Messinstrumenten mittels exploratorischer und konfirmatorischer Methoden eingegangen wird. Auch werden Methoden zur Prüfung der Reliabilität und Validität von Messinstrumenten besprochen und angewendet, wobei auch komplexere Datenauswertungsmethoden (z.B. Strukturgleichungsmodelle) vorgestellt und angewendet werden.\r\nIn der Veranstaltung Test- und Fragebogenkonstruktion I wird über die Vermittlung des theoretischen Wissens hinausgehend ein Test bzw. Fragebogen entwickelt. Die Vorstellung des entwickelten Messinstruments stellt den Abschluss dieser Veranstaltung dar. In der Veranstaltung Test- und Fragebogenkonstruktion II werden die mittels des entwickelten Messinstruments gewonnenen Daten verwendet, um die Messgüte des Verfahrens zu prüfen. Lernziele: Die Absolventinnen und Absolventen dieser Veranstaltung wissen nach welchen Kriterien die Qualität von Messinstrumenten beurteilt wird, welche Faktoren ihre Qualität beeinträchtigen und wie man die Qualität erhöhen kann. Sie wissen, wie Messinstrumente normiert und standardisiert werden. Sie kennen die Messmodelle der Klassischen Testtheorie. Die Studierenden können Gütekriterien anhand empirischer Daten berechnen und optimieren. Sie sind in der Lage, die Gütekriterien zu beurteilen und konkrete Untersuchungen zu planen, mit denen eine Gütebeurteilung möglich ist. Die Studierenden sind vertraut mit Methoden der Itemkonstruktion und der Gestaltung von Antwortformaten und können deren Einsatzmöglichkeiten beurteilen. Sie verstehen, dass die Konstruktion von Items ein theoriegeleiteter Prozess ist. Die Studierenden sollen über Fertigkeiten im Umgang mit Statistiksoftware verfügen, um die statistische Prüfung der Gütekriterien auf empirische Daten anwenden und den Ergebnisoutput interpretieren zu können. Die Studierenden sollen in der Lage sein, psychologische Messinstrumente auf der Basis der klassischen Testtheorie zu konstruieren, ihre Messeigenschaften zu untersuchen und ein Instrument zu optimieren, damit es die angestrebte Messgüte besitzt. Ferner sind die Studierenden in der Lage die für den Studiengang speziell wichtigen Soft Skills anzuwenden, wobei insbesondere die Fähigkeit Sachverhalte und Methoden zu präsentieren angewendet werden können. Literatur: Literatur wird in der Veranstaltung bekannt gegeben. Vorleistung: Test- und Fragebogenkonstruktion I ist Voraussetzung für die Teilnahme an Test- und Fragebogenkonstruktion II Infolink:  Bemerkung: ", "en": "Description: Key issues are the commonly used measurement methods (questionnaires, tests etc.), quality criteria, statistical item characteristics, normalization, standardization and the Classical Test Theory.\r\nAlso, methodologies of item construction and statistical evaluation of tests and questionnaires will be relevant. For the statistical evaluation, the assessment of dimensionality of measurement instruments through exploratory and confirmatory methods are especially relevant. Methodologies for assessing reliability and validity of measurement instruments will be discussed and applied and also more complex methods for data evaluation will be presented and applied (e.g. structural equation models).\r\nBesides theoretical knowledge about the construction of measurement instruments, a test or questionnaire will be developed in the course Test Theory and Questionnaire Construction I. Presenting the developed measurement instrument marks the completion of this course. In the following course Test Theory and Questionnaire Construction II, quality criteria of the test or questionnaire will be assessed through data collection and analysis with the help of the developed measurement instrument. Learning Targets: The graduates of this course know about criteria that are relevant when assessing the quality of measurement instruments, they know which factors can compromise the quality and how the quality can be increased. They know about models of Classical Test Theory and how to standardize measurement instruments. The students can calculate, evaluate and optimize statistic quality criteria of measurement instruments with the help of empirical data. They are capable of planning specific studies that allow for the assessment of quality. Students are familiar with methodologies regarding item construction, the design of appropriate answer formats and can evaluate their fields of application. They understand, that item construction is a theory-based process. Students possess abilities regarding statistics software in order to statistically examine the quality criteria and to interpret the output of statistic software. Students are capable of creating a psychological measurement instrument on the basis of Classical Test Theory, of investigating its quality criteria and of optimizing the instrument in order for it to reach pursued quality. Also, students are able to apply specific soft skills that are especially important for this study program when presenting complex issues and methodologies. Literature: Literatur wird in der Veranstaltung bekannt gegeben. Pre-Qualifications: Test Design and Questionnaire Construction I is a prerequisite for attending Test Design and Questionnaire Construction II Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Cognitive and Media Science (Psychology), PO19 - M-KM(PS)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/475/detail", "id": "475", "type": "StudyCourse"}}, "Masterseminar Informatik": {"name": "Masterseminar Informatik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/967/detail", "id": "967", "description": {"de": "Beschreibung: Die Studierenden arbeiten sich in ein begrenztes Thema eines Forschungsgebietes ein, bereiten einen Vortrag dazu vor, führen diesen durch und beantworten dabei zugehörige Fragen. Hinzu kommt weiterhin eine schriftliche Ausarbeitung, die innerhalb einer vorgegebenen zeitlichen Frist zu erstellen ist. Das Seminarthema soll aus dem gewählten Anwendungsbereich stammen. Lernziele: Durch die erfolgreiche Teilnahme an einem Seminar zeigen die Studierenden, dass sie ein begrenztes Thema eines Forschungsgebietes verstehen, aufarbeiten, einen Vortrag dazu vorbereiten, durchführen und Fragen beantworten, sowie eine Ausarbeitung dazu erstellen können, und zwar innerhalb einer vorgegebenen zeitlichen Frist. Im Gegensatz zum Seminar im Bachelor-Studiengang, werden im Seminar des Master-Studiengangs üblicherweise anspruchsvollere Themen höherer Aktualität behandelt, und eine höhere Selbständigkeit in der Bearbeitung durch die Studierenden erwartet. Damit trägt das Master-Seminar, zusammen mit dem Master-Projekt und der Master-Arbeit zur Befähigung zur selbständigem wissenschaftlichen Arbeiten bei. Literatur: Wird individuell mitgeteilt Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell mitgeteilt Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Computer Science (Intelligent Systems and Scientific Calculation), PO12 - M-AI(ITSWR)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/51/detail", "id": "51", "type": "StudyCourse"}}, "Kolloquium zur Bachelorarbeit": {"name": "Kolloquium zur Bachelorarbeit", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/122/detail", "id": "122", "description": {"de": "Beschreibung: Im Rahmen des begleitenden Kolloquiums stellen die Studierenden Zwischen- und Endergebnisse ihrer Bachelor-Arbeit vor, und beteiligen sich ebenfalls an Diskussionen über andere vorgestellte Bachelor-Arbeiten. Lernziele: Im Rahmen des Kolloquiums lernen die Studierenden, Zwischen- und Endergebnisse innerhalb festgesetzter Zeitdauer verständlich zu präsentieren. Literatur: Wird individuell bekannt gegeben Vorleistung: Zur Bachelor-Arbeit kann nur zugelassen werden, wer die für die Anmeldung vorgeschriebenen Credits in Höhe von insgesamt 124 erworben hat, die sich wie folgt zusammensetzen: - 84 Credits aus den Pflichtveranstaltungen „Informatik“, wobei darin die 8 Credits des „Software-zentrierten Praxisprojektes“ enthalten sein müssen - 18 Credits aus den Pflichtveranstaltungen „Mathematik“ sowie 5 Credits aus einer Wahlpflichtveranstaltung „Mathematik“ - 3 der 4 Wahlpflichtveranstaltungen aus dem Vertiefungskatalog „Informatik“ mit insgesamt 15 Credits. Über Ausnahmen entscheidet der Prüfungsausschuss. Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Bachelorarbeit": {"name": "Bachelorarbeit", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/85/detail", "id": "85", "description": {"de": "Beschreibung: Die Bachelor-Arbeit schließt die wissenschaftliche Ausbildung im Bachelor-Studiengang Angewandte Informatik ab. Über einen Zeitraum von etwa 13 Wochen wird selbständig unter wissenschaftlicher Betreuung ein Thema bearbeitet, welches an die Grundlagen und neuen Forschungsergebnisse des jeweiligen Fachgebiets angelehnt ist. Im Rahmen des begleitenden Kolloquiums stellen die Studierenden Zwischen- und Endergebnisse ihrer Bachelor-Arbeit vor, und beteiligen sich ebenfalls an Diskussionen über andere vorgestellte Bachelor-Arbeiten. Themen für Bachelor-Arbeiten stammen im Allgemeinen aus dem Schwerpunkt Ingenieurinformatik, oder Medieninformatik, bzw. werden an der Schnittstelle von beiden formuliert. Sie werden angelehnt an die Forschungsschwerpunkte der Informatik-Professuren. Lernziele: Mit der Bachelor-Arbeit zeigen die Studierenden, dass sie in der Lage sind, innerhalb einer vorgegebenen Frist ein Problem der Angewandten Informatik selbständig auf der Grundlage der bis dahin im Bachelor-Studiengang erzielten Qualifikationen zu bearbeiten. Die Ausrichtung der Arbeit hat eher praktischen Charakter, sodass im Allgemeinen ein Programm oder kleines Softwaresystem zu realisieren ist, zusammen mit einer Dokumentation und Ausarbeitung. Die Betreuungsbeziehung ist hierbei ziemlich eng, wobei jedoch genügend Freiräume eingeräumt werden. Im Rahmen des Kolloquiums lernen die Studierenden, Zwischen- und Endergebnisse innerhalb festgesetzter Zeitdauer verständlich zu präsentieren. Literatur: Wird individuell bekannt gegeben Vorleistung: Zur Bachelor-Arbeit kann nur zugelassen werden, wer die für die Anmeldung vorgeschriebenen Credits in Höhe von insgesamt 124 erworben hat, die sich wie folgt zusammensetzen: - 84 Credits aus den Pflichtveranstaltungen „Informatik“, wobei darin die 8 Credits des „Software-zentrierten Praxisprojektes“ enthalten sein müssen - 18 Credits aus den Pflichtveranstaltungen „Mathematik“ sowie 5 Credits aus einer Wahlpflichtveranstaltung „Mathematik“ - 3 der 4 Wahlpflichtveranstaltungen aus dem Vertiefungskatalog „Informatik“ mit insgesamt 15 Credits. Über Ausnahmen entscheidet der Prüfungsausschuss. Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Bachelorseminar Informatik": {"name": "Bachelorseminar Informatik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/86/detail", "id": "86", "description": {"de": "Beschreibung: Die Studierenden arbeiten sich unter enger wissenschaftlicher Betreuung in ein eng fokussiertes grundlegendes Thema eines Forschungsgebietes ein, bereiten das Thema zu einem Vortrag auf, und erstellen hierzu eine Ausarbeitung. Zusätzlich zum eigenen Vortrag beteiligen sich die Studierenden an den Diskussionen im Kontext von allen Vorträgen des Seminars. Lernziele: Durch die erfolgreiche Teilnahme am Bachelor-Seminar zeigen die Studierenden, dass sie ein eng fokussiertes grundlegendes Thema eines Forschungsgebietes verstehen und aufarbeiten können. Sie üben, einen Vortrag vorzubereiten, durchführen und Fragen zu beantworten. Außerdem lernen sie eine Ausarbeitung dazu zu erstellen und zwar innerhalb einer vorgegebenen zeitlichen Frist. Mit integriert ist ebenso die aktive Beteiligung an der Diskussion bei allen Vorträgen, so dass die Studierenden im Rahmen des Proseminars ebenfalls ihre Vortrags- und Diskussionstechnik entwickeln und verbessern werden. Literatur: Wird individuell bekannt gegeben Vorleistung: Alle Veranstaltungen gemäß dem Bachelor-Studienplan bis zum Beginn des Seminars. Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Praxisprojekt": {"name": "Praxisprojekt", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/77/detail", "id": "77", "description": {"de": "Beschreibung: Das BA-Projekt ist eine Einheit bestehend aus einem praktischen Teil und einem theoretischen Teil. Im praktischen Teil wird ein Software-System bzw. ein Hardware-Software-System realisiert, der begleitende theoretische Teil hat die Form einer Spezialvorlesung oder eines Seminar oder eines Kolloquiums. Die Studierenden erstellen in einer Gruppe von bis zu 12 Mitgliedern ein Software-System, angelehnt an das Forschungsgebiet des jeweils gewählten Lehrstuhls (wechselnde Themenstellungen). Dabei werden über den Zeitraum eines Semesters wichtige Inhalte aus den Grundlagen und Anwendungsfächern der Informatik, sowie der Mathematik exemplarisch an einem konkreten Szenario angewendet. Es werden grundlegende innovative Systemkonzepte aus den jeweiligen Forschungsgebieten der Lehrstühle prototypisch realisiert. Dabei werden alle Phasen eines typischen Softwareprojektes durchlaufen.  Lernziele: Im Laufe des BA-Projektes lernen die Studierenden, typische Methoden und Werkzeuge aus den verschiedenen Phasen eines Softwareprojektes zu beherrschen, wobei insbesondere kollaborative Werkzeuge im Vordergrund stehen. Ferner sollen die Studierenden außerfachliche Methoden der Gruppenarbeit beherrschen lernen, wie die Arbeitsorganisation, die Diskussion der weiteren Vorgehensweise, das Treffen von Absprachen und die Präsentation von Ergebnissen. Durch gemeinsames Arbeiten an einer komplexen Aufgabenstellung, durch die Zuweisung und Lösung von Teilaufgaben durch Untergruppen und anschließender Fusion der Ergebnisse wird auf die in der späteren Berufspraxis maßgebliche arbeitsteilige Vorgehensweise vorbereitet. Literatur: Wird individuell bekannt gegeben Vorleistung: Courses from previous semesters according to the study regulations Infolink:  Bemerkung: ", "en": "Description: The BA project is a unity consisting of a practical part and a theoretical part. In the practical part a software system or a hardware software system is realised, the accompanying theoretical part has the form of a special lecture or a seminar or a colloquium. The students develop in a group of up to 12 members a software system, leant to the field of research of the chair elective in each case (varying formulations of the topic). Besides, important contents from the basics and application fields of informatics, as well as mathematics, will be applied exemplarily in a concrete scenario for the period of a semester. Basic innovative system concepts from the respective fields of research of the chairs are realised prototypically. Besides, all phases of a typical software project will run through. Learning Targets: In the course of the BA project the students learn to use typical methods and tools from the different phases of a software project, in particular, collaborative tools are in the foreground. Further the students should learn and apply soft skills, like the working organisation, the discussion of next steps, the arrangement of meetings and the presentation of results. Literature: Wird individuell bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Betriebssysteme": {"name": "Betriebssysteme", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/74/detail", "id": "74", "description": {"de": "Beschreibung: Im Rahmen dieser Veranstaltung werden die wesentlichen Grundlagen von Betriebssystemen vermittelt und an Beispielbetriebssystemen der Microsoft Windows Familie sowie an UNIX/Linux Derivaten deren Umsetzung studiert. \r\nInhalt im Einzelnen: - Einführung (Allg. Anforderungen an Betriebssysteme, Schichtung in Betriebssystemen, Rechnerarchitekturen)- Prozesse (Prozesszustände, Threads, Scheduling , Einprozessor- und Mehrprozessorsysteme, parallele Prozesse)- Prozesssynchronisation (Semaphore, Monitore, Anwendungen wie etwa Erzeuger-Verbraucher-Problem, Deadlocks, Prozesskommunikation)- Speicherverwaltung (direkte Speicherverwaltung, Speicherzuteilungsverfahren, Virtuelle Speicherverwaltung, Adressierung, Seitenersetzungsverfahren, Implementierungen des Pagings, segmentierte Speicher, Cache Speicher)- Dateisysteme (Namenskonventionen, Attribute und Sicherheit, Dateifunktionen, strukturierte Dateien, gemeinsam genutzte Dateien, Dateisysteme und deren Implementierung)- Ein- und Ausgabe (Aufgaben und Schichtung, Gerätemodelle, Geräteschnittstellen, Optimierungsstrategien)- Multiprozessorsysteme (Betriebssysteme für Multiprozessorsysteme und Multicomputer)- Einführung zur Sicherheit in Betriebssystemen (Ziele und Bedrohungen, Benutzerauthentifikation, Angriffe von innerhalb des Systems wie Trojaner, Pufferüberläufe, Angriffe von außerhalb des Systems wie Viren und Würmer, Sicherheitsstufen und Klassifikation von Betriebssystemen) Lernziele: Die Studierenden kennen Theorien und Konzepte des Betriebssystemdesigns und die Konzepte und verstehen die Modelle zur Prozess- und Speicherverwaltung in modernen Betriebssystemen. Ferner können sie die Eignung und den Einsatz verschiedener Dateisysteme und Peripheriegeräte beurteilen, sowie die für die Sicherheit eines Betriebssystems notwendigen Mechanismen und Verfahren abschätzen. Literatur: -  Andrew S. Tanenbaum, Herbert Bos: Moderne Betriebssysteme, 4. aktualisierte Auflage, Pearson Studium 2016, ISBN 978-3868942705.- Andrew S. Tanenbaum, Herbert Bos: Modern Operating Systems, 4th edition, Pearson Education 2014, ISBN 978-1292061429.- W. Stallings: Betriebssysteme – Prinzipien und Umsetzung, 4. Auflage, Pearson Studium 2003 - W. Stallings: Operating Systems - Internals and Design Principles, 9. Edition, Pearson 2017, ISBN 978-1292214290 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The lecture presents the essential fundamentals of Operating Systems and studies the realization in the Microsoft Windows familiy and UNIX/Linux. The lecture covers: - Introduction (requirements, layers, computer architectures) - Processes (process states, thrads, scheduling, single-/multiprcessor systems, parallel processes) - Processsynchronsation (semaphores, monitors, applications as prducer/consumer, deadlocks, process-communication) - Memory management (direct memory management, memory allocation, virtual memory management, addressing, page replacement, paging, segmentation, cache) - File systems (name conventions, attributes and security, file functions, structured files, shared files, implementations) - Input/Output (I/O devices, device controllers, optimization) - multiprocessor systems (OS for multiprocessor systems and multicomputer) - Introduction to OS security (authentication, attacks from inside and outside, buffer overflow, classification of OS) Learning Targets: The students know the theory and concepts of modern operating system designs and understand the models of process and memory management. Furthermore, the students are able to judge the suitability of different filesystems and I/O devices and to estimate the mechanisms and algorithms for OS security. Literature: -  Andrew S. Tanenbaum, Herbert Bos: Moderne Betriebssysteme, 4. aktualisierte Auflage, Pearson Studium 2016, ISBN 978-3868942705.- Andrew S. Tanenbaum, Herbert Bos: Modern Operating Systems, 4th edition, Pearson Education 2014, ISBN 978-1292061429.- W. Stallings: Betriebssysteme – Prinzipien und Umsetzung, 4. Auflage, Pearson Studium 2003 - W. Stallings: Operating Systems - Internals and Design Principles, 9. Edition, Pearson 2017, ISBN 978-1292214290 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Datenbanken Praktikum": {"name": "Datenbanken Praktikum", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/76/detail", "id": "76", "description": {"de": "Beschreibung: Im Rahmen des Praktikums sollen die Studierenden den praktischen Umgang mit heutigen relationalen Datenbank-Managementsystemen lernen. Hierzu sollen sie folgende Aufgaben durchführen: \r\n\r\nDefinition von Datenbank-Schemas \r\nDefinition von Zugriffsrechten, Integritätsbedingungen und Datenbank-Triggern \r\nErstellen von komplexen SQL-Anfragen \r\nEntwicklung von Datenbank-Anwendungsprogrammen \r\nEntwicklung von Web-basierten Datenbank-Anwendungen\r\n Lernziele: Die Studierenden lernen das Durchführen folgender Standard-Aufgaben der Datenbank-Administration \r\n\r\nDefinition von Datenbank-Schemas \r\nDefinition von Zugriffsrechten, Integritätsbedingungen und Datenbank-Triggern \r\nErstellen von komplexen SQL-Anfragen \r\nEntwicklung von Datenbank-Anwendungsprogrammen \r\nEntwicklung von Web-basierten Datenbank-Anwendungen\r\n Literatur: - Ramiz Elmasri, Shamkant B. Navathe: Grundlagen von Datenbanksystemen. Bachelorausgabe. Pearson, 2009 \r\n- Alfons Kemper, Andre Eicker: Datenbanksysteme. Eine Einführung. Oldenbourg, 2011. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In this lab, students will learn the practical handling of relational database management systems. For that, they will have to work on the following tasks: \r\n\r\nDefinition of database schemas \r\nDefinition of access rights, integrity constraints and triggers \r\nFormulation of complex SQL queries \r\nDevelopment of database application programs \r\nDevelopment of Web-based database applications \r\n Learning Targets: Students will learn to perform the following standard tasks of database administration \r\n\r\nDefinition of database schemas \r\nDefinition of access rights, integrity constraints and triggers \r\nFormulation of complex SQL queries \r\nDevelopment of database application programs \r\nDevelopment of Web-based database applications\r\n Literature: - Ramiz Elmasri, Shamkant B. Navathe: Grundlagen von Datenbanksystemen. Bachelorausgabe. Pearson, 2009 \r\n- Alfons Kemper, Andre Eicker: Datenbanksysteme. Eine Einführung. Oldenbourg, 2011. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Master-Arbeit und Kolloquium (AI)": {"name": "Master-Arbeit und Kolloquium (AI)", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/969/detail", "id": "969", "description": {"de": "Beschreibung: Die Master-Arbeit schließt die wissenschaftliche Ausbildung im Master-Studiengang Angewandte Informatik ab. Über einen Zeitraum von etwa 26 Wochen wird selbständig unter wissenschaftlicher Betreuung ein Thema bearbeitet, welches an die neuesten Forschungsergebnisse des jeweiligen Fachgebiets angelehnt ist. Im Rahmen des begleitenden Kolloquiums stellt der Studierende Zwischen- und Endergebnisse Master-Arbeit vor, und beteiligt sich ebenfalls an Diskussionen über andere vorgestellte Master-Arbeiten. Themen für Master-Arbeiten stammen aus den vier Anwendungsbereichen: - Verteilte Verlässliche Systeme - Intelligente Systeme und Wissenschaftliches Rechnen - Interaktive und Kooperative Systeme - Information Engineering Lernziele: Mit der Master-Arbeit zeigen die Studierenden, dass sie in der Lage sind, innerhalb einer vorgegebenen Frist ein Problem der Angewandten Informatik selbständig auf der Grundlage der bis dahin im Master-Studiengang erzielten Qualifikationen zu bearbeiten. Im Gegensatz zur Bachelor-Arbeit wird hier ein anspruchsvolleres Thema auf einem wissenschaftlich höheren Niveau über einen längeren Zeitraum bearbeitet. Durch die zusätzlich erwartete höhere Selbständigkeit belegen die Absolventen ihre Fähigkeit zu wissenschaftlichen Arbeiten und unterstützen damit die wissenschaftliche Weiterentwicklung des Fachgebiets. Im Rahmen des begleitenden Kolloquiums stellen die Studierenden ihre Fähigkeit unter Beweis, schwierige umfangreiche Sachverhalte in festgesetzter, kurzer Zeitdauer vor Fachpublikum verständlich präsentieren zu können. Literatur: Wird individuell ausgewählt. Vorleistung: Zur Master-Arbeit kann nur zugelassen werden, wer Credits in Höhe von insgesamt 57 aus den Modulen der Kataloge „Vertiefung der Informatik“ „Informatik für den Anwendungsbereich“ und „Grundlagen und Vertiefung im Anwendungsbereich“ erworben hat und zusätzlich das Master-Projekt und das Master-Seminar (15 + 4 ECTS) erfolgreich absolviert hat. Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell ausgewählt. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Computer Science (Intelligent Systems and Scientific Calculation), PO12 - M-AI(ITSWR)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/51/detail", "id": "51", "type": "StudyCourse"}}, "Masterarbeit (KOMEDIA)": {"name": "Masterarbeit (KOMEDIA)", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/989/detail", "id": "989", "description": {"de": "Beschreibung: Die Masterarbeit schließt die wissenschaftliche Ausbildung im Master-Studiengang Kognitions- und Medienwissenschaft ab. Über einen Zeitraum von 26 Wochen wird selbständig unter wissenschaftlicher Betreuung ein Thema bearbeitet, welches an die neuen Forschungsergebnisse des jeweiligen Fachgebiets aus der Informatik bzw. Psychologie angelehnt ist.\r\nDie Ausrichtung der Arbeit kann dabei theoretisch oder empirisch sein. Bei der inhaltlichen Ausgestaltung werden der Kandidatin/dem Kandidaten genügend Freiräume eingeräumt. Lernziele: Mit der Masterarbeit zeigen die Studierenden, dass sie in der Lage sind, innerhalb einer vorgegebenen Frist ein Problem der Angewandten Kognitions- und Medienwissenschaft selbständig auf der Grundlage der bis dahin im Master-Studiengang erzielten Qualifikationen zu bearbeiten. Im Rahmen des Kolloquiums lernen die Studierenden, Zwischen- und Endergebnisse innerhalb festgesetzter Zeitdauer verständlich zu präsentieren. Sie wenden mit der Anfertigung der Masterarbeit ihre wissenschaftliche Reflexionskompetenz an. Literatur: Individuell, abhängig von der jeweiligen Themenstellung Vorleistung: Laut PO:80 erworbene Credits Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Individuell, abhängig von der jeweiligen Themenstellung Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Cognitive and Media Science (Social Media and Professional Communications), PO14 - M-KM(SMPK)-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/61/detail", "id": "61", "type": "StudyCourse"}}, "Datenbanken": {"name": "Datenbanken", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/75/detail", "id": "75", "description": {"de": "Beschreibung: Datenbanksysteme sind ein unentbehrliches Werkzeug bei der Verwaltung großer Informationsmengen. Im Rahmen dieser Veranstaltung werden die wesentlichen Grundlagen von Datenbanksystemen vermittelt sowie grundlegende Fertigkeiten im Umgang mit solchen Systemen eingeübt. In der Übung werden die theoretischen Konzepte anhand von Beispielen vertieft und kleine praktische Aufgaben am Rechner durchgeführt. Im Praktikum wird eine vollständige DB-Entwicklung von der konzeptionellen Phase bis hin zur Programmierung einer Anwendung durchgeführt. Inhalte im Einzelnen: \r\n\r\nEinführung in Datenbanken \r\nDatenbankentwurf \r\nDas relationale Modell \r\nRelationale Anfragesprachen \r\nDatenintegrität \r\nRelationale Entwurfstheorie \r\nTransaktionsverwaltung \r\nMehrbenutzersynchronisation \r\nSicherheitsaspekte  \r\nAnfragebearbeitung\r\n Lernziele: Die Studierenden sollen Theorie und Konzepte relationaler Datenbanken, Grundkonzepte relationaler Anfragesprachen und Grundlagen des Datenbankentwurfs kennen lernen und SQL ebenso wie Methoden des Datenbankschemaentwurfs anwenden können. Ferner sollen sie die Konzepte Sichten, Zugriffsrechte und Transaktionen verstehen, die Eignung und Grenzen des relationalen Datenmodells beurteilen können, die Folgen von Datenbankschema- Änderungen abschätzen können und die Risiken von schlecht entworfenen DB-Schemas kennen. Literatur: \r\nRamiz Elmasri, Shamkant B. Navathe: Grundlagen von Datenbanksystemen. Bachelorausgabe. Pearson, 2009 \r\nAlfons Kemper, Andre Eicker: Datenbanksysteme. Eine Einführung. Oldenbourg, 2011.\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Data bases are an essential tool for handling large volumes of data. This course teaches the basics of database systems and students will learn the how to work with these systems. In the exercises, examples will help in understanding the theoretical concepts, and small practical tasks will be carried out with a running database system. Contents: \r\n\r\nIntroduction to databases \r\nDatabase design \r\nThe relational model \r\nRelational query languages \r\nData integrity \r\nRelational schema design \r\nTransaction management \r\nSynchronization \r\nSecurity \r\nExtensible and object-relational databases\r\n Learning Targets: Students will learn theory and conćepts of relational databases, relational query languages and the basics of database design. They will learn how to apply SQL and standard methods of relational schema design. They will understand the concepts of views, acess rights and transactions, be able to judge about the suitability and limitations of relational databases, assess the consequences of schema changes as well as the risks of bad schema designs. Literature: \r\nRamiz Elmasri, Shamkant B. Navathe: Grundlagen von Datenbanksystemen. Bachelorausgabe. Pearson, 2009 \r\nAlfons Kemper, Andre Eicker: Datenbanksysteme. Eine Einführung. Oldenbourg, 2011.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Sicherheit in Kommunikationsnetzen": {"name": "Sicherheit in Kommunikationsnetzen", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/65/detail", "id": "65", "description": {"de": "Beschreibung: Die Veranstaltung behandelt grundlegende Technologien, Protokolle, Architekturen, Subsysteme für die Sicherheit in Kommunikationsnetzen. Inhalte im Einzelnen: - Grundlagen der Kryptographie - Symmetrische und asymmetrische Verfahren - Hashfunktionen - Digitale Signaturen - Authentifikations- und Schlüsselaustauschprotokolle - Zero-Knowledge Proofs - Sicherheitsmanagement Schlüsselverwaltung - Zugangs- und Zugriffskontrollen - Sicherheitsarchitekturen, Kerberos etc. - Softwareanomalien und Manipulationen Schutzmaßnahmen - Sicherheit in offenen Systemen, LAN und WAN, Internet IPSec Lernziele: Die Studierenden kennen die verschiedenen Facetten des Begriffs Sicherheit. Ausgehend von Verfahren zur Generierung von Schlüsseln und Signaturen beherrschen sie den Ablauf von Kommunikationsprotokollen und sind mit den Begriffsbildungen zum Zero Knowledge Proof vertraut. Sie identifizieren die erlernten Begrifflichkeiten in umfangreichen Sicherheitsarchitekturen, beherrschen grundlegende Sicherheitsaspekte beim Zugang zu Rechenanlagen und sind mit wichtigen Softwareanomalien und notwendigen Schutzmaßnahmen vertraut. Schließlich analysieren sie Erweiterungen von Netzwerkprotokollen um Sicherheits- und Vertraulichkeitseigenschaften. Literatur: - Bruce Schneier: Angewandte Kryptographie, Pearson Studium, 2005, ISBN: 978-3-8273-7228-4 - G. Schäfer: Netzsicherheit. Netzsicherheit. dpunkt.verlag, 2003, ISBN 978-3-8986-4212-5 - G. Schäfer: Security in Fixed and Wireless Networks, Wiley, 2003, ISBN 978-0-4708-6372-5 - Klaus Schmeh: Kryptografie, 6. akt. Auflage, dpunkt.verlag 2016, ISBN: 978-3-8649-0356-4.- William Stallings: Cryptography and Network Security, Principles and Practice, 6th Ed. Prentice Hall 2013, ISBN 978-0-2737-9335-9- Lehrsoftware CrypTool 2.0 (https://www.cryptool.org/de) - Aktuelle Internetliteratur  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The lecture introduces the fundamentals of technologies, protocols, architectures, subsystems for security in the communication networks. Content in particular: - Fundamentals of cryptography - Symmetric and asymmetric methods - Hash functions - Digital signature - Authentication and key exchange protocols - Zero Knowledge Proofs - Safety management key administration - Entrance and access control - Safety architectures, Kerberos etc. - Software anomalies and manipulations of protective measures - Security in open systems, LAN and WAN, Internet IPSec Learning Targets: The students know different facets of the term security. On the basis of methods for generating keys and signatures they control the expiration/sequence of communication protocols and familiarize with the concept formations of the zero Knowledge Proof. They identify the learned conceptual in extensive safety architectures, control fundamental safety aspects by the access to computers and familiarize with important anomalies of software and necessary protective measures. Finally they analyze the extensions of network protocols into safety. Literature: - Bruce Schneier: Angewandte Kryptographie, Pearson Studium, 2005, ISBN: 978-3-8273-7228-4 - G. Schäfer: Netzsicherheit. Netzsicherheit. dpunkt.verlag, 2003, ISBN 978-3-8986-4212-5 - G. Schäfer: Security in Fixed and Wireless Networks, Wiley, 2003, ISBN 978-0-4708-6372-5 - Klaus Schmeh: Kryptografie, 6. akt. Auflage, dpunkt.verlag 2016, ISBN: 978-3-8649-0356-4.- William Stallings: Cryptography and Network Security, Principles and Practice, 6th Ed. Prentice Hall 2013, ISBN 978-0-2737-9335-9- Lehrsoftware CrypTool 2.0 (https://www.cryptool.org/de) - Aktuelle Internetliteratur  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Bachelor-Arbeit Kolloquium": {"name": "Bachelor-Arbeit Kolloquium", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/278/detail", "id": "278", "description": {"de": "Beschreibung: Präsentation und Diskussion der Bachelorarbeit. Lernziele: Die Studierenden zeigen, dass sie die Themenstellung der Bachelorarbeit selbständig erfasst und bearbeitet haben. Sie präsentieren und diskutieren diese Themenstellung auf wissenschaftlichem Niveau vor bzw. mit dem Auditorium inkl. des/der Themenstellers/in. Literatur:  Vorleistung: Fertige und mindestens ausreichend bewertete Bachelorarbeit (finished and at least ‚passed’ graded bachelor thesis). Infolink:  Bemerkung: ", "en": "Description: Presentation and defence of the bachelor thesis. Learning Targets: Students prove that they independently understood and elaborated the topic of the bachelor thesis. They present and discuss the topic in front of or with the audience (including the supervisor) on a scientific adequate level. Literature:  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO19 - B-KM-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/283/detail", "id": "283", "type": "StudyCourse"}}, "Bachelor-Arbeit": {"name": "Bachelor-Arbeit", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/277/detail", "id": "277", "description": {"de": "Beschreibung: Die Bachelorarbeit stellt die wissenschaftliche Abschlussarbeit des Studienprogramms dar. Lernziele: Mit der Bachelor-Arbeit zeigen die Studierenden, dass sie in der Lage sind, innerhalb einer vorgegebenen Frist ein Problem selbständig auf der Grundlage der bis dahin im Bachelor-Studiengang erzielten Qualifikationen zu bearbeiten. Literatur: Abhängig von der Themenstellung (depending on the topic of the thesis). Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The bachelor thesis is the scientific graduation thesis of the study program. Learning Targets: With the bachelor thesis the students prove their ability to produce independently a scientific thesis on the bachelor level. Literature: Abhängig von der Themenstellung (depending on the topic of the thesis). Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO19 - B-KM-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/283/detail", "id": "283", "type": "StudyCourse"}}, "Praxisprojekt Computer Engineering": {"name": "Praxisprojekt Computer Engineering", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/228/detail", "id": "228", "description": {"de": "Beschreibung: In diesem Projekt erhält eine Gruppe von Studierenden eine definierte fachliche Aufgabe im Bereich der Technischen Informatik. Die Lösung dieser Aufgabe erfolgt im Team unter Anleitung und ist wie ein Projekt abzuwickeln, einschließlich Spezifikation, Konzeption, Schnittstellenabsprachen, Terminplanung, Literaturrecherchen, Präsentation der Ergebnisse (vorzugsweise in englischer Sprache). Das Projekt ist als Vorbereitung für die Master-Arbeit zu sehen. Ein wichtiger Aspekt des Projekts besteht darin, dass auch \"Soft Skills\" gestärkt werden. Hierzu gehören Aspekte wie das Management des Projekts, dessen Teilaufgaben inhaltlich und zeitlich strukturiert werden müssen, die Arbeit in einer Arbeitsgruppe sowie die Präsentation von Arbeitsergebnissen. Lernziele: Die Studierenden können systematisch eine kleinere Aufgabe gliedern, Meilensteine und Schnittstellen definieren. Sie können die Aufgabe im Team lösen. Sie beherrschen Präsentation (wahlweise in Englisch) und Literaturrecherche. Literatur: spezifisch von der jeweiligen Aufgabenstellung abhängig Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In this project a group of students is given a selected professional task in the field of computer engineering. The solution of this task is carried out in a team under supervision and is to be handled like a project, including specification, conception, interface arrangements, scheduling, literature research, presentation of the results (preferably in English).\r\nThe project is to be seen as a preparation for the Master thesis.\r\nAn important aspect of the project is that \"soft skills\" are also strengthened. This includes aspects such as the management of the project, whose subtasks must be structured in terms of content and time, work in a working group and the presentation of work results. Learning Targets: The students can systematically structure a smaller task, define milestones and interfaces. You can solve the task in a team. You are proficient in presentation (optionally in English) and literature research. Literature: spezifisch von der jeweiligen Aufgabenstellung abhängig Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Robust Control": {"name": "Robust Control", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/652/detail", "id": "652", "description": {"de": "Beschreibung: Robuste Regelung ist ein Forschungs- und Entwicklungsgebiet, dem in den letzten 20 Jahren große Aufmerksamkeit ununterbrochen gewidmet wurde. Ziel der Vorlesung ist es, Grundkenntnisse der robusten Regelung zu vermitteln und neue Ansätze zum Entwurf robuster Regler vorzustellen. Die Vorlesung besteht aus vier Teilen. Es werden dabei die Systemstrukturen, Parametrisierungen von Reglern und Beobachtern sowie Standard-entwurfsverfahren für Systeme mit Störgrößen oder Modellunsicherheit behandelt. Ferner werden Faktorisierungstechnik sowie LMI- (linear matrix inequality) Technik vorgestellt. Lernziele: Die Studierenden sollen in der Lage sein, Systeme mit Störgrößen und Modellunsicherheit beschreiben und analysieren zu können. Ferner sollen sie einfache robuste Regler. Literatur: [1] S. X. Ding, Vorlesungsskript \"Robust control\" (wird jährlich aktualisiert, per Download verfügbar, will be updated and available for download) [2] K. Zhou, Essentials of robust control, Prentice Hall, 1998 [3] S. X. Ding, Data-driven design of fault diagnosis and fault-tolerant control systems, Springer-Verlag, 2014 Vorleistung:  Infolink:  Bemerkung: Robuste Regelung", "en": "Description: Due to its importance in practice, robust control technique is one of the research and development fields in control engineering, which continuously received the most attention during the last two decades. The focus of this course is the introduction to the essentials of the robust control theory, to the computational tools and some design methods. The course consists of four parts. In Part 1, Introduction, the system configurations and internal stability of feedback loops are addressed. Part II, Control system configurations, parameterizations, and tools, is dedicated to parameterizations of stabilization controllers as well as observers and their configurations. The major mathematical tool is the factorization technique. In Part III, System analysis, controller design and design tools, standard robust control schemes, the so-called H_2 and H_inf control schemes as well as the associated mathematical knowledge are introduced. Moreover, the LMI (linear matrix inequality) technique for the system analysis and design is presented. Part IV, Robust controller design for uncertain systems, deals with systems with model uncertainties. Some basic schemes are introduced. Learning Targets: The students will be able to model and analyze uncertain control systems and to design different robust controllers. Literature: [1] S. X. Ding, Vorlesungsskript \"Robust control\" (wird jährlich aktualisiert, per Download verfügbar, will be updated and available for download) [2] K. Zhou, Essentials of robust control, Prentice Hall, 1998 [3] S. X. Ding, Data-driven design of fault diagnosis and fault-tolerant control systems, Springer-Verlag, 2014 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Muster- und komponentenbasierte Software-Entwicklung": {"name": "Muster- und komponentenbasierte Software-Entwicklung", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/227/detail", "id": "227", "description": {"de": "Beschreibung: Die Veranstaltung behandelt musterbasierte und komponentenbasierte Softwareentwicklung. Diese beiden Ansätze legen Wert auf die Wiederverwendung bereits vorhandenen Wissens bzw. bereits vorhandener Software. Inhalt im Einzelnen: - Definition von Mustern - Verwendung von Mustern im Softwareentwicklungsprozess - Muster für die verschiedenen Phasen (Analyse: Problem Frames, Analysemuster; Entwurf: Architekturmuster, Entwurfsmuster; Implementierung: Idiome; Test: Testmuster) - Komponentenbegriff - Verschiedene Komponentenmodelle (z.B. Enterpise Java Beans, Corba Component Model, OSGi) - Spezifikation von Komponentenschnittstellen - Nachweis der Interoperabilität von Komponenten - Komponentenbasierter Entwicklungsprozess - Kombination von Mustern und Komponenten in einem integrierten Entwicklungsprozess Lernziele: - Grundideen von Mustern und Softwarekomponenten erläutern können - Vorteile muster- und komponentenbasierter Softwareentwicklungsansätze gegenüber traditionellen Ansätzen beschreiben können - Den verschiedenen Phasen des Softwarelebenszyklus Muster zuordnen können - Für die besprochenen Musterarten Beispiele aufzählen und erläutern können - Die verschiedenen Arten von Mustern anwenden können. - Grundidee der komponentenbasierten Softwareentwicklung erläutern können - Existierende Komponentenmodelle erläutern und beurteilen können. - Komponenten spezifizieren können. - Komponentenbasierte Software entwerfen können. - Zusammenhänge zwischen Mustern und Komponenten erläutern können Literatur: - M. Jackson: Problem Frames. Analyzing and structuring software development problems, Addison-Wesley, 2001. - Martin Fowler: Analysis Patterns: Reusable Object Models, Addison Wesley, 1997.  - F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad und M. Stal: Pattern-Oriented Software Architecture: A System of Patterns, John Wiley &amp; Sons, 1996 - E. Gamma, R. Helm, R. Johnson und J. Vlissides: Design Patterns - Elements of Reusable Object-Oriented Software, Addison Wesley, 1995. - Binder, R. V. (1999). Testing object-oriented systems: models, patterns, and tools. Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA. - C. Szyperski: Component Software - Beyond object oriented programming, Addison Wesley, 2. Aufl. 2002. - J. Cheesman und J. Daniels: UML Components - A Simple Process for Specifying Component-Based Software, Addison-Wesley, 2001. - George T. Heineman and William T. Councill: Component-Based Software Engineering. Addison Wesley, 2001  Vorleistung: Kenntnisse der Softwaretechnik Infolink:  Bemerkung: ", "en": "Description: The course treats pattern- and component-based software development. Both approaches stress the reuse of existing knowledge or existing software. Content in detail: - Definition of Patterns - Usage of patterns in the software development process - Patterns for different phases (analysis phase: problem frames, analysis patterns; design phase: architectural patterns, design patterns; implementation phase: idioms; test phase: test patterns) - Notion of component - Different component models (e.g., Enterpise Java Beans, Corba Component Model, OSGi) - Specification of component interfaces - Demonstration of component interoperability - Component-based development process - Combination of patterns and components in an integrated development process Learning Targets: - Be able to explain the basic ideas of patterns and software components - Be able to describe advantages of pattern and component based software development approaches as compared to traditional approaches - Be able to assign patterns to the different phases of the software development life-cycle - Be able to give examples for the discussed pattern types and explain them - Be able to apply the different kinds of patterns - Be able to explain the basic ideas of component based software development - Be able to explain and assess existing component models - Be able to specify a component - Be able to design component-based software - Be able to explain the interrelationship between components and patterns Literature: - M. Jackson: Problem Frames. Analyzing and structuring software development problems, Addison-Wesley, 2001. - Martin Fowler: Analysis Patterns: Reusable Object Models, Addison Wesley, 1997.  - F. Buschmann, R. Meunier, H. Rohnert, P. Sommerlad und M. Stal: Pattern-Oriented Software Architecture: A System of Patterns, John Wiley &amp; Sons, 1996 - E. Gamma, R. Helm, R. Johnson und J. Vlissides: Design Patterns - Elements of Reusable Object-Oriented Software, Addison Wesley, 1995. - Binder, R. V. (1999). Testing object-oriented systems: models, patterns, and tools. Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA. - C. Szyperski: Component Software - Beyond object oriented programming, Addison Wesley, 2. Aufl. 2002. - J. Cheesman und J. Daniels: UML Components - A Simple Process for Specifying Component-Based Software, Addison-Wesley, 2001. - George T. Heineman and William T. Councill: Component-Based Software Engineering. Addison Wesley, 2001  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Test und Zuverlässigkeit digitaler Systeme": {"name": "Test und Zuverlässigkeit digitaler Systeme", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/222/detail", "id": "222", "description": {"de": "Beschreibung: In dieser Veranstaltung werden die Eigenschaften technischer Systeme bei Fehlverhalten hinsichtlich ihres Gefährdungspotentials analysiert und bemessen. Zudem werden Maßnahmen vorgestellt, mit denen die Qualität technischer Systeme im Sinne einer erhöhten Lebensdauer oder eines sicheren Verhaltens auch im Fehlerfalle erreicht werden kann. Studierende sollen nach Absolvieren der Veranstaltung die theoretischen Grundlagen zur Beschreibung technischer Systeme im Fehlerfalle beherrschen und in der Lage sein, unter den verschiedenen praktisch eingesetzten Methoden diejenige auszuwählen, die für eine gegebene Aufgabestellung die am besten begründeten Ergebnisse unter wirtschaftlich vertretbarem Aufwand liefert. Zu unterscheidende Methoden sind hier die traditionelle Lebensdauerberechnung, der Einsatz von Redundanz zur Erhöhung der Lebensdauer, Markov-Ketten und Werkzeuge aus der Praxis, wie FMEA und FMECA. Sie sollen zudem in der Lage sein, das Fehlerverhalten technischer Systeme auf unterschiedlichen Ebenen beschreiben und bearbeiten zu können. Betrachtet werden komplexe mechatronische Systeme, etwa Kraftfahrzeuge und Flugzeuge mit ihren verschiedenen Betriebszuständen ebenso wie Schaltungen und Systeme der Elektrotechnik. Im Bereich des Tests werden digitale Schaltungen und Systeme bis hin zu Rechnersystemen und der auf ihnen laufenden Software behandelt. Zu unterscheidende Methoden sind hier die Wahl eines problembezogenen Fehlermodells, Simulation, Testgenerierung und der prüffreundliche Entwurf. Lernziele: Die Studierenden sind in der Lage, Sicherheit und Zuverlässigkeit digitaler Systeme (Hardware und Software) qualitativ und quantitativ zu ermitteln und zu beurteilen. Sie sind weiterhin in der Lage, die Zusammenhänge zwischen Fehlerentstehung, Test, Simulation, prüffreundlichem Entwurf und Zuverlässigkeit zu beurteilen und diese Methoden in praktischen Anwendungen begründet auszuwählen. Literatur: 1. M. Lazzaroni et al. (2012) Reliability Engineering - Basic Concepts and Applications in ICT, Springer. 2. A. Birolini (2010) Reliability Engineering - Theory and Practice, Springer. 3. A. Miczo (2003) - Digital Logic Testing and Simulation, Wiley. 4. A. Meyna and B. Pauli (2003) - Taschenbuch der Zuverlässigkeits- und Sicherheitstechnik, Hanser. 5. H.-D. Kochs (1994) - Zuverlässigkeit großer und komplexer Systeme, Institut für Informatik, Duisburg. 6. H. Wojtkowiak (1988) - Test und Testbarkeit digitaler Schaltungen, Teubner. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Within this lecture, the characteristics of technical systems are analyzed and measured concerning their hazard potential. Furthermore, measures are presented, with which the quality of technical systems in the sense of an increased life span or a safe behavior can be achieved also in the case of an error. After completion of the lecture, students are familiar with the fundamentals for the description of erroneous technical systems and they are able to select an appropriate method, which promises the best results under economically justifiable expenditure for a given task. Besides that, the students are able to describe the error behavior of technical systems on different levels. They can distinguish between best use of the traditional methods to determine lift time, the use of redundancy to increase lifetime, Markov-chains and practical tools like FMEA and FMECA. They shall also be able to describe and handle the faulty behavior of technical systems on different levels. Systems discussed are complex mechatronic systems like cars and airplanes as well as electrical circuits and systems. In the area of testing, the test of digital circuits and systems is considered as well as computer systems and the software running on them. In this context, they can distinguish between different fault models, appropriate for different systems, simulation and test generation as well as Design for Testability. Learning Targets: The students are able to qualitatively and quantitatively evaluate and rate the reliability of digital systems (hardware, software, and network). In addition, they are able to assess the relations between physical errors, test, simulation and design for testability and to select best approach for a given application with good reasons.  Literature: 1. M. Lazzaroni et al. (2012) Reliability Engineering - Basic Concepts and Applications in ICT, Springer. 2. A. Birolini (2010) Reliability Engineering - Theory and Practice, Springer. 3. A. Miczo (2003) - Digital Logic Testing and Simulation, Wiley. 4. A. Meyna and B. Pauli (2003) - Taschenbuch der Zuverlässigkeits- und Sicherheitstechnik, Hanser. 5. H.-D. Kochs (1994) - Zuverlässigkeit großer und komplexer Systeme, Institut für Informatik, Duisburg. 6. H. Wojtkowiak (1988) - Test und Testbarkeit digitaler Schaltungen, Teubner. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Global Engineering Lab": {"name": "Global Engineering Lab", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/225/detail", "id": "225", "description": {"de": "Beschreibung: Das Praktikum ist als Projektpraktikum aufgebaut. Die Studierenden lernen einerseits verschiedene synchrone und asynchrone Groupware Applikationen kennen. Darüber hinaus planen sie den Einsatz von Groupware in einem virtuellen Unternehmen unter verschiedenen Randbedingungen wie Unternehmensstruktur, Prozessabläufe, Kosten, Ressourcen etc. Lernziele: Das Praktikum befähigt die Studierenden ihr eigenes Fachwissen in ein Team einzubringen, Werkzeuge und deren spezielle Unterstützungsfunktionen zu analysieren und deren Einsatz unter speziellen Randbedingungen sinnvoll zu planen. Literatur: 1. Borghoff, U.M.; Schlichter, J.H.: Computer Supported Cooperative Work; Springer Verlag 2000 [43 TZR 1822] 2. Andriessen, J.H.E. : Working with Groupware; Springer Verlag 2003 [D05 TZT1864] 3. Williams, Bill: Engineering Practice in a global context: understanding the technical and the social; CRC Press, Boca Ratton 2014 [D45 WAS 2327] 4. Duarte, Tennant Snyder: Mastering Virtual teams, Wiley &amp; Sons, 2006 [D01 TZT1872] 5. Schwabe, Gerhard [Hrsg.] : CSCW-Kompendium. Springer Verlag 2001. ISBN: 3-540-67552-3 [43-TZR 1898] 6. Werner, „Synchrone Groupware für die Software Engineering Ausbildung“, dissertation.de-Verlag, Berlin 2003 [01 TWQ 4831], [also electronically available at UDE library]  Vorleistung:  Infolink:  Bemerkung: alter Titel: CSCW and Software-Engineering Lab", "en": "Description: In the lab the students are acquainted with different synchronous and asynchronous Groupware-Systems and how to use these systems within the software engineering process, especially in distributed teams.  Learning Targets: The lab enables the students to contribute to a team in order to analyze tools and their special support functions and to plan their employment under special aspects. Literature: 1. Borghoff, U.M.; Schlichter, J.H.: Computer Supported Cooperative Work; Springer Verlag 2000 [43 TZR 1822] 2. Andriessen, J.H.E. : Working with Groupware; Springer Verlag 2003 [D05 TZT1864] 3. Williams, Bill: Engineering Practice in a global context: understanding the technical and the social; CRC Press, Boca Ratton 2014 [D45 WAS 2327] 4. Duarte, Tennant Snyder: Mastering Virtual teams, Wiley &amp; Sons, 2006 [D01 TZT1872] 5. Schwabe, Gerhard [Hrsg.] : CSCW-Kompendium. Springer Verlag 2001. ISBN: 3-540-67552-3 [43-TZR 1898] 6. Werner, „Synchrone Groupware für die Software Engineering Ausbildung“, dissertation.de-Verlag, Berlin 2003 [01 TWQ 4831], [also electronically available at UDE library]  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Global Engineering": {"name": "Global Engineering", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/224/detail", "id": "224", "description": {"de": "Beschreibung: Der „Globale“ Ingenieur arbeitet in einem weltweit agierenden Unternehmen und ist in der Regel Teil eines multikulturell, zusammengesetzten Teams. Dabei bedient er sich moderner Informations- und Kommunikationstechnologie und spezieller Werkzeuge zur Unterstützung der Gruppenarbeit. Diese Vorlesung startet mit einer Einleitung in der zunächst die „Grundzüge des „Global Engineering“ vorgestellt werden. Darüber hinaus wird „Global Engineering unter verschiedenen Gesichtspunkten betrachtet: Part1: Aspekte des Arbeitens in globalen Teams werden vor dem Hintergrund des Einsatzes in einem virtuellen, multikulturellen Team diskutiert. Darüber hinaus werden verschiedene Teamstrukturen und Maßnahmen zur Projektplanung verteilter Projekte vorgestellt. Ein Schwerpunkt liegt dabei auf der Kommunikation innerhalb virtueller Teams. Part 2: CSCW; In diesem Teil der Vorlesung werden Werkzeuge und Systeme zur Unterstützung des globalen Ingenieurs vorgestellt. Groupware-Architekturen und –Benutzerschnittstellen werden ebenso besprochen wie Methoden zur Nebenläufigkeitskontrolle verteilter Systeme. Part 3: Ausgewählte Themen in “Global Engineering” behandelt aktuelle Entwicklungen in der Forschung und Entwicklung sowie im speziellen Anwendungskontext; wie z.B. Industrie 4.0, das Internet der Dinge, Cloud Computing oder Telemedizin als Anwendungsgebiet. Lernziele: Die Studierenden verstehen die besonderen Anforderungen an einen „globalen Ingenieur“ und das Arbeiten in multikulturellen Teams. Sie kennen die Grundkonzepte der rechnergestützten Gruppenarbeit und sind sie in der Lage den Einsatz von Groupware im Zusammenhang mit nicht technischen Aspekten wie den der interkulturellen Kommunikation kritisch zu hinterfragen und ihr Wissen in die Konzeption einer technischen Umgebung einzubringen. Literatur: 1. Borghoff, U.M.; Schlichter, J.H.: Computer Supported Cooperative Work; Springer Verlag 2000 [43 TZR 1822] 2. Andriessen, J.H.E. : Working with Groupware; Springer Verlag 2003 [D05 TZT1864] 3. Williams, Bill: Engineering Practice in a global context: understanding the technical and the social; CRC Press, Boca Ratton 2014 [D45 WAS 2327] 4. Duarte, Tennant Snyder: Mastering Virtual teams, Wiley &amp; Sons, 2006 [D01 TZT1872] 5. Schwabe, Gerhard [Hrsg.] : CSCW-Kompendium. Springer Verlag 2001. ISBN: 3-540-67552-3 [43-TZR 1898] 6. Werner, „Synchrone Groupware für die Software Engineering Ausbildung“, dissertation.de-Verlag, Berlin 2003 [01 TWQ 4831], [also electronically available at UDE library]   Vorleistung:  Infolink:  Bemerkung: alter Titel: CSCW and Software-Engineering", "en": "Description: The global engineer is working in a global acting company as part of a multicultural team. In doing so, he uses modern information and communication technology and special tools to support group work. This lecture starts with an introduction to global engineering as well as a discussion of the requirements for a global engineer. Apart from this introduction the lecture discusses global engineering under different aspects: Part1: Aspects of working in global teams; looks at the global engineer as a member in a virtual, multicultural team. Apart from the introduction of different team structures and considerations on project planning for distributed developments, special focus is set on virtual team communication. Part 2: CSCW; looks at tools and systems to support the global engineer. Groupware architectures, and user interfaces will be introduced as well as methods for consistency and concurrency control. Part 3: Actual topics in global engineering introduces technologies, actual research topics or fields of applications which are in the focus of global engineering; like the industry 4.0 and the internet of things, cloud computing or telemedicine. Learning Targets: The students will understand the special requirements for a global engineer and working in multicultural teams. They know about the basic principles of CSCW and groupware and their potentials to support global acting, distributed teams. The students should be able to meaningfully plan the employment of appropriate tools. Literature: 1. Borghoff, U.M.; Schlichter, J.H.: Computer Supported Cooperative Work; Springer Verlag 2000 [43 TZR 1822] 2. Andriessen, J.H.E. : Working with Groupware; Springer Verlag 2003 [D05 TZT1864] 3. Williams, Bill: Engineering Practice in a global context: understanding the technical and the social; CRC Press, Boca Ratton 2014 [D45 WAS 2327] 4. Duarte, Tennant Snyder: Mastering Virtual teams, Wiley &amp; Sons, 2006 [D01 TZT1872] 5. Schwabe, Gerhard [Hrsg.] : CSCW-Kompendium. Springer Verlag 2001. ISBN: 3-540-67552-3 [43-TZR 1898] 6. Werner, „Synchrone Groupware für die Software Engineering Ausbildung“, dissertation.de-Verlag, Berlin 2003 [01 TWQ 4831], [also electronically available at UDE library]   Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Distributed Systems": {"name": "Distributed Systems", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/226/detail", "id": "226", "description": {"de": "Beschreibung: Die Vorlesung befasst sich mit den grundlegenden Konzepten und Protokollen für verteilte Systeme. Die Vorlesung beginnt mit Grundlagen zur verteilten Kommunikation: - Serialisierung (ASN.1, CORBA XDR, SOAP) - Remote Procedure Calls - Verteilte Objekte und widmet sich dann wichtigen Basisalgorithmen - Physikalische Uhren - Logische Uhren - Transaktionen - Synchronisation - Replikation und Konsistenz - Globaler Zustand Lernziele: Die Studierenden kennen die wesentlichen Grundlagen, Protokolle, Algorithmen und Architekturen Verteilter Systeme und können diese anwenden. Literatur: ·1 Coulouris/Dollimore/Kindberg: Distributed Systems - Concepts and Design, Addison-Wesley 2001 (3rd edition). ·2 Tannenbaum/van Steen: Distributed Systems - Principles and Paradigms, Prentice Hall 2002. ·3 Borghoff/Schlichter: Rechnergestützte Gruppenarbeit (in German), Springer 1998. Vorleistung:  Infolink:  Bemerkung: Verteilte Systeme", "en": "Description: The lecture presents important concepts and protocols for distributed systems. The lecture starts with principles of distributed communication: - Data serialization (ASN.1, CORBA XDR, SOAP) - Remote procedure calls - Distributed objects The sencond part of the lecture presents important and often used distributed algorithms: - Physical clocks - Logical clocks - Transactions - Synchronisation - Replication and consistency - Global state Learning Targets: The students know the principles, protocols, algorithms and architecture of distributed systems are able to apply these to real word problems. Literature: ·1 Coulouris/Dollimore/Kindberg: Distributed Systems - Concepts and Design, Addison-Wesley 2001 (3rd edition). ·2 Tannenbaum/van Steen: Distributed Systems - Principles and Paradigms, Prentice Hall 2002. ·3 Borghoff/Schlichter: Rechnergestützte Gruppenarbeit (in German), Springer 1998. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Digitale Schaltungstechnik": {"name": "Digitale Schaltungstechnik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/221/detail", "id": "221", "description": {"de": "Beschreibung: Die Vorlesung und Übung bietet eine Einführung in die Thematik der digitalen Integrierten Schaltungen (IC‘s). Es werden Informationen zur Herstellung von CMOS Schaltungen vermittelt und einfache CMOS Gatterschaltungen wie z. B. Inverter behandelt. Ferner werden wichtige Eigenschaften von digitalen Schaltungen wie Verzögerungszeiten, Störabstand oder Leistungsaufnahme erläutert. Es werden statische und dynamische Gatter, sowie diverse Schaltungsrealisierungen in sequentieller oder kombinatorischer Logik, unter besonderer Berücksichtigung des Timing-Verhaltens, besprochen. Diese neu zu erwerbenden Kenntnisse bilden dann die Grundlage für das Verständnis von komplexeren Arithmetik- und Speicher-Bauelementen. Ein abschließendes Kapitel widmet sich den FPGAs. Ihre Architektur wird vorgestellt und die Vorgehensweise bei der Schaltungsimplementierung anhand von einigen Beispielen vermittelt. Lernziele: Der Student hat umfassende Kenntnisse in der digitalen Schaltungstechnik erlangt. Er kennt Standardzellen und deren Designprozess durch Stickdiagramme. Er ist nun in der Lage digitale Schaltungen auf Chipebene zu entwerfen und diese hinsichtlich ihrer Eigenschaften zu analysieren. Der Student kennt die Architektur von FPGA Bausteinen und weiß wie logische Schaltungen in diesem implementiert werden. Literatur: - J. Rabaey, A. Chandrakasan, B. Nikolic: \"Digital Integrated Circuits\", Prentice Hall - N. Weste, K. Eshnagian: \"Principles of VLSI design\", Addison Wiley - N. H. E. Weste, D. Harris: \"CMOS VLSI Design\", 3. Auflage, Pearson Addison Wesley Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This lecture and the appendant exercise will give an introduction to the topic of digital Integrated Circuits (IC). Manufacturing processes of CMOS devices and simple circuits using CMOS gates (e.g. Inverter) will be discussed. Additionally, important characteristics of digital circuits (e.g. delays, noise margin and power consumption) will be explained. In consideration of timing characteristics, static and dynamic gates as well as various circuits in sequential and combinational logic will be illustrated. This knowledge will be needed to understand more complex circuits which are used to develop memories or arithmetic operations. The last chapter will introduce to FPGA’s by explaining its architecture and presenting several examples of circuit implementation. Learning Targets: The student will have extended knowledge in the topic of digital circuits. He knows standard cells and their design processes using stick diagrams. He is able to develop digital circuits on chip level and to analyse its characteristics. The student knows the architecture of FPGA devices and is able to implement logic circuits into it. Literature: - J. Rabaey, A. Chandrakasan, B. Nikolic: \"Digital Integrated Circuits\", Prentice Hall - N. Weste, K. Eshnagian: \"Principles of VLSI design\", Addison Wiley - N. H. E. Weste, D. Harris: \"CMOS VLSI Design\", 3. Auflage, Pearson Addison Wesley Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Kommunikationsnetze": {"name": "Kommunikationsnetze", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/215/detail", "id": "215", "description": {"de": "Beschreibung: In der Vorlesung \"Kommunikationsnetze\" werden Grundlagen digitaler Kommunikationsnetze vermittelt. Dazu werden folgende Themen behandelt: - Grundbegriffe - Hierarchische Strukturen von Netzfunktionen (OSI-Schichtenmodell) - Verfahren zur Datenübertragung von Punkt zu Punkt - Vielfachzugriffsprotokolle - Verfahren zur zuverlässigen Datenübertragung - Routing und Flusskontrolle - Warteraumtheorie Die Inhalte werden in Übungen und Seminaren selbständig vertieft. Lernziele: 1. Verständnis der hierarchischen Struktur von Kommunikationsnetzen, ausgehend vom OSI-Schichtenmodell 2. Verständnis der wesentlichen Funktionen der drei unteren OSI-Schichten 3. Verständnis der Grundlagen der Warteraumtheorie Literatur: ·1 M. Bossert, M. Breitbach: Digitale Netze. Stuttgart: Teubner, 1999. ·2 W. Stehle: Digitale Netze. Weil der Stadt: Schlembach, 2001. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In the lecture \"Kommunikationsnetze\" an overview over the basics of digital communication is given. For this the following themes are treated: - Basic terms - Hierarchical structures of network functions (OSI-layered model) - Methods for point-to-point communication - Multiple access protocols - Methods for reliable data transmission - Routing and flow control - Queuing theory The contents are self-absorbed in exercises and seminars. Learning Targets: 1) Understand hierarchical structure of communication networks, using the OSI model. 2) Understand the main functionality of the three lower layers of the OSI model. 3) Understand the basics of queuing theory. Literature: ·1 M. Bossert, M. Breitbach: Digitale Netze. Stuttgart: Teubner, 1999. ·2 W. Stehle: Digitale Netze. Weil der Stadt: Schlembach, 2001. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Electrical Engineering and Information Technology (Computer Engineering), PO12 - M-EIT(TI)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/75/detail", "id": "75", "type": "StudyCourse"}}, "Planung und Organisation für interdisziplinäre Studiengänge": {"name": "Planung und Organisation für interdisziplinäre Studiengänge", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/1009/detail", "id": "1009", "description": {"de": "Beschreibung: \r\nPlanung und Organisation als Teilfunktion des allgemeinen Managements\r\n\r\nManagement als Funktion im Unternehmen\r\nEntscheidungsprozesse\r\nPlanung und Organisation\r\n\r\n\r\nPlanung\r\n\r\nGrundlagen\r\nStrategische Planung\r\nOperative Planung\r\nEntscheidungen\r\n\r\n\r\nOrganisation\r\n\r\nGrundlagen\r\nAufbauorganisation\r\nAblauforganisation\r\n\r\n\r\nGrundlegende Strukturmodelle\r\n Lernziele: Die Veranstaltung gibt einen Überblick über die grundlegenden Managementfunktionen Planung, Organisation und Kontrolle. In der Vorlesung werden Planungsprozesse nach ihrer strategischen Reichweite differenziert betrachtet (strategische vs. operative Planung), während Organisationsmodelle nach statischen und dynamischen Betrachtungsweisen differenziert vorgestellt werden (Aufbau- vs. Ablauforganisation). Die Studierenden sollen die Hauptaufgaben des strategischen Managements, Planungsmethoden und Organisations-Fragestellungen kennen lernen. Literatur: \r\nBamberg, G./Coenenberg, A.G. (2004): Betriebswirtschaftliche Entscheidungslehre, 12. Aufl. München: Vahlen.\r\nBühner, R. (2004): Betriebswirtschaftliche Organisationslehre, 10. Aufl. München: Oldenbourg.\r\nGerpott, T.J. (2005): Strategisches Technologie- und Innovationsmanagement, 2. Aufl. Stuttgart: Schäffer-Poeschel.\r\nStaehle, W. H./Conrad, P./Sydow, J. (1999): Management, 8. Aufl. München: Vahlen.\r\nSteinmann, H./Schreyögg, G. (2005): Management, 6. Aufl. Wiesbaden: Gabler.\r\nWelge, M. K./Al-Laham, A. (2008): Strategisches Management, 5. Aufl. Wiesbaden: Gabler.\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: \r\nBamberg, G./Coenenberg, A.G. (2004): Betriebswirtschaftliche Entscheidungslehre, 12. Aufl. München: Vahlen.\r\nBühner, R. (2004): Betriebswirtschaftliche Organisationslehre, 10. Aufl. München: Oldenbourg.\r\nGerpott, T.J. (2005): Strategisches Technologie- und Innovationsmanagement, 2. Aufl. Stuttgart: Schäffer-Poeschel.\r\nStaehle, W. H./Conrad, P./Sydow, J. (1999): Management, 8. Aufl. München: Vahlen.\r\nSteinmann, H./Schreyögg, G. (2005): Management, 6. Aufl. Wiesbaden: Gabler.\r\nWelge, M. K./Al-Laham, A. (2008): Strategisches Management, 5. Aufl. Wiesbaden: Gabler.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO19 - B-KM-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/283/detail", "id": "283", "type": "StudyCourse"}}, "Versuchspersonenstunden": {"name": "Versuchspersonenstunden", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/1915/detail", "id": "1915", "description": {"de": "Beschreibung:  Lernziele:  Literatur:  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature:  Pre-Qualifications:  Info Link:  Notice: unbenotet"}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO19 - B-KM-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/283/detail", "id": "283", "type": "StudyCourse"}}, "Programmierparadigmen": {"name": "Programmierparadigmen", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/63/detail", "id": "63", "description": {"de": "Beschreibung: Für die problembezogene Beurteilung von Programmiersprachen und operationalen Beschreibungen ist es nicht hinreichend, eine oder auch zwei Programmiersprachen gut zu kennen. Vielmehr geht es darum, auch Meta-Konzepte zu erwerben, die es erlauben, die Eigenschaften von Programmiersprachen zu vergleichen und einzuschätzen. Hierzu werden verschiedene Programmierparadigmen behandelt, inklusive Betrachtung ihrer Implementierung.\r\nInhalte im Einzelnen: - Ausdrücke und Anweisungen - Typkonzepte, Variablen und Werte - Prozedurale und funktionale Abstraktion - Modularisierungs- und Abstraktionskonzepte- Datentypen und Polymorphismus- Logische Programmierung  Lernziele: Ziel der Veranstaltung ist es, folgende Fähigkeiten auszubilden: - Beurteilung von Programmiersprachen vom höheren Standpunkt, - Befähigung zur problemadäquaten Auswahl einer Programmiersprache, - Verbesserung der Kommunikations- und Reflexionsfähigkeit beim Programmieren/Implementieren. - Präsentation/Diskussion von Beispielaufgaben in den Übungen Literatur: - Hutton: Programming in Haskell (2nd Ed., Cambridge University Press, 2016)- Blackburn/Bos/Striegnituz: Learn Prolog Now! (College Publications, 2006)- Sebesta: Concepts of Programming Languages (6th Ed., Addison-Wesley, 2003) - Wilson/Clark: Comparative Programming Languages (3rd Ed., Addison-Wesley, 2001) - D. Watt: Programmiersprachen – Konzepte und Paradigmen (Hanser, 1996) Vorleistung:  Infolink:  Bemerkung: Im Masterstudiengang CPS ist die Veranstaltung ausschließlich für Studierende im Einstiegsschwerpunkt für Ingenieurinnen und Ingenieure wählbar.", "en": "Description: In order to judge the problem related adequacy of programming languages and operational representations it is not sufficient to know one or two programming languages more or less well. Instead, it is also important to acquire meta level concepts which allow for comparing and assessing relevant features of programming languages. To this aim, different programming paradigms are covered, as well as consideration of their implementation. Contents: - Expressions and commands - Type concepts, variables and values - Procedural and functional abstraction- Modularisation and abstraction concepts- Data types and polymorphism- Logic programming  Learning Targets: The goal of this lecture is to train the following competences: - Evaluation/judgment of programming languages - Ability to choose a programming language suitable for the problem to solve- Improvement of communication- and reflection skills during programming/implementation - Presentation/discussion of example problems in the exercises Literature: - Hutton: Programming in Haskell (2nd Ed., Cambridge University Press, 2016)- Blackburn/Bos/Striegnituz: Learn Prolog Now! (College Publications, 2006)- Sebesta: Concepts of Programming Languages (6th Ed., Addison-Wesley, 2003) - Wilson/Clark: Comparative Programming Languages (3rd Ed., Addison-Wesley, 2001) - D. Watt: Programmiersprachen – Konzepte und Paradigmen (Hanser, 1996) Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Rechnerarchitektur": {"name": "Rechnerarchitektur", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/64/detail", "id": "64", "description": {"de": "Beschreibung: Ausgehend vom grundsätzlichen Aufbau von Prozessoren und Rechnern werden die klassische Architektur der von-Neumann-Rechner eingeführt, Mikrocomputer und Mikroprozessorsysteme bis zum heutigen PC vorgestellt, sowie moderne Höchstleistungsrechner behandelt.  Inhalte im Einzelnen: - Datenpräsentation, Speicher- und Registermodelle, Adressierungsarten, Stacks - Befehlstypen und -Formate, Programmflusssteuerung (Jumps, Calls) - Interrupts und DMA - Ausgewählte Bussysteme wie der USB or PCI - Mikroarchitektur und Mikroprogrammierung - RISC Prozessoren und Architekturen, Pipelining, Vergleich CISC- und RISC-Konzepte - Parallele Rechnerarchitekturen, Mehrkern- und Mehrprozessorarchitekturen - Vektorrechner, Clustercomputing und Gridcomputing, Höchstleistungsrechner Lernziele: Die Studierenden kennen und verstehen den Aufbau und die Arbeitsweise aktueller Rechnerhardware. Sie verstehen die verschiedenen Philosophien des Computeraufbaus und lernen die verschiedenen Ansätze der Parallelität in Rechnerarchitekturen kennen. Sie sind in der Lage, kleine Aufgaben in Assembler selbst zu programmieren.  Literatur: - A. S. Tanenbaum, T. Austin. Rechnerarchitektur. Von der digitalen Logik zum Parallelrechner. 6. aktualisierte. Auflage: Pearson Studium. 2014. ISBN 978-3868942385.- A. S. Tanenbaum, T. Austin. Structured Computer Organization. 6th Edition. Prentice Hall, 2013, ISBN 978-0273769248.- V. Claus, A. Schwill. Duden Informatik. Bibliogr. Institut Mannheim. 4., überarb. u. aktualis. Auflage. 2006. ISBN 3411052341 - J. L. Hennessy, D. A. Patterson. Computer Architecture: A Quantitative Approach. 5th Edition. Morgan Kaufmann. 2011. ISBN 1811472052 - J. L. Hennessy, D. A. Patterson. Rechnerorganisation und Rechnerentwurf: Die Hardware/Software-Schnittstelle. Oldenbourg Wissenschaftsverlag, 2011, ISBN 3486591908 - P. Herrmann. Rechnerarchitektur. Aufbau, Organisation und Implementierung, inklusive 64-Bit-Technologie und Parallelrechner. Vieweg+Teubner Verlag. 4. Auflage. 2010. ISBN 3834815128  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The lecture presents the architecture of computers and processors. This includes classical architectures of von-Neumann, Microprocessors as used in modern PCs, and parallel architectures as found in high performance computing.  The lecture covers: - Data representation, memory and register adressing, stacks, DMA - CPU instruction types, program flow control (jumps and subroutines) - Interrupts and DMA - Bussystems, for example USB or PCI - Microarchitecture and microprogramming - Concepots of RISC/CISC processors, piplining - Parallel computer architectures, multi core CPUs - Vector computers, clusters, grid computing, high performance computing Learning Targets: The students know how a modern computer is structured. They know the philosophies behind the different approaches and they know about the advantages and limitations of parallel architectures. Furthermore, students are able to implement small applications in assembler. Literature: - A. S. Tanenbaum, T. Austin. Rechnerarchitektur. Von der digitalen Logik zum Parallelrechner. 6. aktualisierte. Auflage: Pearson Studium. 2014. ISBN 978-3868942385.- A. S. Tanenbaum, T. Austin. Structured Computer Organization. 6th Edition. Prentice Hall, 2013, ISBN 978-0273769248.- V. Claus, A. Schwill. Duden Informatik. Bibliogr. Institut Mannheim. 4., überarb. u. aktualis. Auflage. 2006. ISBN 3411052341 - J. L. Hennessy, D. A. Patterson. Computer Architecture: A Quantitative Approach. 5th Edition. Morgan Kaufmann. 2011. ISBN 1811472052 - J. L. Hennessy, D. A. Patterson. Rechnerorganisation und Rechnerentwurf: Die Hardware/Software-Schnittstelle. Oldenbourg Wissenschaftsverlag, 2011, ISBN 3486591908 - P. Herrmann. Rechnerarchitektur. Aufbau, Organisation und Implementierung, inklusive 64-Bit-Technologie und Parallelrechner. Vieweg+Teubner Verlag. 4. Auflage. 2010. ISBN 3834815128  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Softwaretechnik Praktikum": {"name": "Softwaretechnik Praktikum", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/50/detail", "id": "50", "description": {"de": "Beschreibung: Unter Einsatz der in der Vorlesung \"Softwaretechnik\" vorgestellten Konzepte soll eine objekt-orientierte Software auf Basis zu erstellender Entwicklungsdokumente prototypisch realisiert werden.  Dies beinhaltet u.a. den Einsatz und das Verständnis von Mustern und UML Notationen zur Erzeugung der Dokumente.  Für die Analysephase - Erhebung der Anforderungen. - Ableitung der Spezifikation. - Lebenszyklusmodell für Unterproblembeziehungen.  Für die Entwurfsphase - Entwurf der Architektur unter Einsatz von Mustern. - Zustandsmaschinen für Komponentenverhalten.  Darüber hinaus ist die Software auf Basis der zuvor erstellten Dokumente zu implementieren und zu testen. Lernziele: Praktische Erfahrung in der Entwicklung von Software und in Gruppenarbeit sammeln. Literatur: - Ian Sommerville: Software Engineering, Addison-Wesley, jeweils neueste Auflage - Michael Jackson: Problem Frames. Analyzing and structuring software development problems. Addison-Wesley, 2001 - M. Jeckle, C. Rupp, J. Hahn, B. Zengler, S. Queins: UML 2 glasklar - D. Coleman, P. Arnold, S. Bodoff, C. Dollin, H. Gilchrist, F. Hayes, and P. Jeremaes. Object-Oriented Development: The Fusion Method. Prentice-Hall, 1994 - Bass, L., Clements, P., and Kazman, R. (1998). Software Architecture in Practice. Addison-Wesley, Boston, MA, USA, 1st edition. - Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides: Design Patterns. Addison Wesley, 1995  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The concepts introduced in the lecture \"Software Engineering\" are applied for developing an object-oriented software prototype. All necessary development documents have to be set up. This includes the usage of patterns and UML notations.  Tasks in the the analysis phase are to - elicitate requirements. - derive specifications. - create a life cycle model that relates all identified subproblems.  For the design phase: - desing a software architecture usung patterns and - each component‘s behavior is defined by a state machine.  Furthermore, the software has to be implemented and tested, based on the previously developed artifacts. Learning Targets: Gain practical experience in developing software and of working in groups. Literature: - Ian Sommerville: Software Engineering, Addison-Wesley, jeweils neueste Auflage - Michael Jackson: Problem Frames. Analyzing and structuring software development problems. Addison-Wesley, 2001 - M. Jeckle, C. Rupp, J. Hahn, B. Zengler, S. Queins: UML 2 glasklar - D. Coleman, P. Arnold, S. Bodoff, C. Dollin, H. Gilchrist, F. Hayes, and P. Jeremaes. Object-Oriented Development: The Fusion Method. Prentice-Hall, 1994 - Bass, L., Clements, P., and Kazman, R. (1998). Software Architecture in Practice. Addison-Wesley, Boston, MA, USA, 1st edition. - Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides: Design Patterns. Addison Wesley, 1995  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Wahrscheinlichkeitsrechnung und Statistik": {"name": "Wahrscheinlichkeitsrechnung und Statistik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/42/detail", "id": "42", "description": {"de": "Beschreibung: Inhalte im Einzelnen: - Grundbegriffe der Wahrscheinlichkeitsrechnung (bedingte Wahrscheinlichkeit, Mehrfeldertafeln, wichtige diskrete und kontinuierliche Verteilungen, speziell die Binomial- und Normalverteilung, Erwartungswert, Varianz, Grenzwertsätze, Markovketten, stochastische Matrizen) - Grundbegriffe der Testtheorie (einseitige und zweiseitige Hypothesentests, Fehler 1. und 2. Art) Lernziele: Die Studierenden lernen die Grundbegriffe der Wahrscheinlichkeitsrechnung kennen. Sie sollen die Approximation der standardisierten Binomialverteilung durch die Gaußsche Glockenkurve verinnerlicht haben. Sie lernen die Bestandteile eines statistischen Testproblems kennen und wissen, dass man mit der Interpretation der Ergebnisse vorsichtig umgehen muss. Literatur: - N. Henze: Stochastik für Einsteiger. Eine Einführung in die faszinierende Welt des Zufalls. Vieweg, Wiesbaden, 6. Aufl. 2006 - U. Krengel: Einführung in die Wahrscheinlichkeitstheorie und Statistik. Vieweg, Wiesbaden, 8. Aufl. 2005 - W. Preuß u. G. Wenisch (Hrsg.): Lehr- und Übungsbuch Mathematik, Bd. 2: Lineare Algebra-Stochastik. Fachbuchverlag Leipzig im Carl Hanser Verlag, München-Wien, 2. Aufl. 2001 - M. Sachs: Wahrscheinlichkeitsrechnung und Statistik. Fachbuchverlag Leipzig im Carl Hanser Verlag, München-Wien, 2003 Vorleistung:  Infolink:  Bemerkung: alter Titel: Wahrscheinlich­keitsrechnung und Stochastik", "en": "Description: Contents in detail: - Fundamental ideas of the probability calculation (probability, multi-field boards, important discrete and continuous distributions, particularly the Binomial and normal distribution, expectancy value, variance, limit theorems, Markov chain, stochastic matrixes) - Fundamental ideas of the test theory (one-sided and bilateral hypothesis tests, error 1st and 2nd kind) Learning Targets: The students learn the fundamental ideas of the probability calculation. They should internalize the approximation of the standardized binomial distribution by the Gaussian distribution. They learn also the components of a statistic test problem and know that they have to deal carefully with the interpretation of the results. Literature: - N. Henze: Stochastik für Einsteiger. Eine Einführung in die faszinierende Welt des Zufalls. Vieweg, Wiesbaden, 6. Aufl. 2006 - U. Krengel: Einführung in die Wahrscheinlichkeitstheorie und Statistik. Vieweg, Wiesbaden, 8. Aufl. 2005 - W. Preuß u. G. Wenisch (Hrsg.): Lehr- und Übungsbuch Mathematik, Bd. 2: Lineare Algebra-Stochastik. Fachbuchverlag Leipzig im Carl Hanser Verlag, München-Wien, 2. Aufl. 2001 - M. Sachs: Wahrscheinlichkeitsrechnung und Statistik. Fachbuchverlag Leipzig im Carl Hanser Verlag, München-Wien, 2003 Pre-Qualifications:  Info Link:  Notice: previous Name: Probability Calculus and Stochastics"}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Softwaretechnik": {"name": "Softwaretechnik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/49/detail", "id": "49", "description": {"de": "Beschreibung: Die Veranstaltung vermittelt verschiedene Vorgehensmodelle und die Phasen der Softwareentwicklung, die Prinzipien der Objektorientierung bei Programmierung und Softwareentwicklung, systematisches Testen von Software, sowie Qualitätssicherungstechniken.  Ein konkreter modellbasierter Softwareentwicklungsprozess wird Phase für Phase durchgesprochen  In einem begleitenden Praktikum werden die vorgestellten Konzepte beispielhaft angewendet.  Inhalte im Einzelnen: - Motivation: Unterschied zwischen Programmierung im Kleinen und Softwareentwicklung im Großen, Erfolgsfaktoren für Softwareprojekte - Software-Prozessmodelle - Analysephase (Terminologie, insbes. Anforderungen vs. Spezifikationen, Ableitung von Spezifikationen aus Anforderungen und Domänenwissen, Zerlegung komplexer Probleme in einfache Unterprobleme, Problem Frames als Muster für einfache Softwareentwicklungsprobleme) - Prinzipien der Objektorientierung - Objektorientierter Softwareentwicklungsprozess unter Verwendung von UML (Modelle und Notationen für die Analyse, Modelle und Notationen für den Entwurf, Umsetzung des Entwurfs in eine objektorientierte Implementierung) - Architektur- und Entwurfsmuster - Design by contract, Programmkorrektheit - Testen - Versionsverwaltung Lernziele: - Unterschied zwischen Softwareentwicklung und Programmierung erklären können - Verschiedene Vorgehensmodelle und Phasen der Softwareentwicklung aufzählen und erklären können - Prinzipien der Objektorientierung nennen und erklären können - Objektorientierte Software systematisch nach einem gegebenen Prozess entwickeln können - Software systematisch testen können - Software-Qualitätssicherungstechniken aufzählen und erklären können - Versionsverwaltungssysteme benutzen können Literatur: - Ian Sommerville: Software Engineering, Addison-Wesley, jeweils neueste Auflage - Michael Jackson: Problem Frames. Analyzing and structuring software development problems. Addison-Wesley, 2001 - M. Jeckle, C. Rupp, J. Hahn, B. Zengler, S. Queins: UML 2 glasklar - D. Coleman, P. Arnold, S. Bodoff, C. Dollin, H. Gilchrist, F. Hayes, and P. Jeremaes. Object-Oriented Development: The Fusion Method. Prentice-Hall, 1994 - Bass, L., Clements, P., and Kazman, R. (1998). Software Architecture in Practice. Addison-Wesley, Boston, MA, USA, 1st edition. - Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides: Design Patterns. Addison Wesley, 1995 - sowie weitere Literatur gemäß Mitteilung in der Veranstaltung Vorleistung: \"Programmiertechnik\", sowie Veranstaltungen \"Modellierung (UML)\", \"Datenstrukturen und Algorithmen\" Infolink:  Bemerkung: ", "en": "Description: This course teaches different process models and their phases in software development, the principles of object-oriented programming and software development, systematic testing of software and quality assurance techniques.  A concrete model-based software development process is presented phase by phase.  In the practical part of the course an example system is developed, following the concepts introduced in the lecture.  Content in detail: - Motivation: Difference between programming-in-the-large and programming-in-the-small, factors of successful software development projects - Software process models - Analysis phase (terminology, requirements vs. specifications, deriving specifications from requirements and domain knowledge, decomposing complex problems into simple subproblems, applying patterns for simple software development problems, namely Problem Frames) - Principles of object-orientation - Object-oriented software development process applying UML (models and notations for analysis and design, transforming design into an object-oriented implementation) - Architectural styles and design patterns - Design by contract, correctness of programs - Testing - Version control Learning Targets: - Be able to explain the difference between software development and programming - Be able to name and explain process models, their phases and purpose - Know the principles of object-orientation - Be able to develop object-oriented software in a systematic way, following a given process - Be able to test software systematically - Be able to name and explain software quality assurance techniques - Be able to use version control systems Literature: - Ian Sommerville: Software Engineering, Addison-Wesley, jeweils neueste Auflage - Michael Jackson: Problem Frames. Analyzing and structuring software development problems. Addison-Wesley, 2001 - M. Jeckle, C. Rupp, J. Hahn, B. Zengler, S. Queins: UML 2 glasklar - D. Coleman, P. Arnold, S. Bodoff, C. Dollin, H. Gilchrist, F. Hayes, and P. Jeremaes. Object-Oriented Development: The Fusion Method. Prentice-Hall, 1994 - Bass, L., Clements, P., and Kazman, R. (1998). Software Architecture in Practice. Addison-Wesley, Boston, MA, USA, 1st edition. - Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides: Design Patterns. Addison Wesley, 1995 - sowie weitere Literatur gemäß Mitteilung in der Veranstaltung Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Berechenbarkeit und Komplexität": {"name": "Berechenbarkeit und Komplexität", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/47/detail", "id": "47", "description": {"de": "Beschreibung: Die Berechenbarkeits- und Komplexitätstheorie ist eine wichtige Grundlage der Informatik. Hierbei geht es um Fragestellungen der Form: was kann überhaupt berechnet werden? Wie teuer ist diese Berechnung? Mit dem P-NP-Problem erläutert dieses Gebiet auch das wichtigste bisher ungelöste Problem der theoretischen Informatik. Im Rahmen dieser Veranstaltung werden grundlegende Kenntnisse zu den Bereichen Berechenbarkeit und Komplexität vermittelt. Inhalte im Einzelnen: - Berechenbarkeit (Turing-Maschinen, Intuitiver Berechenbarkeitsbegriff, Churchsche These, LOOP-, WHILE-, GOTO-Berechenbarkeit, Primitiv rekursive und mu-rekursive Funktionen, Ackermannfunktion, Halteproblem, Unentscheidbarkeit, Reduktionen, Postsches Korrespondenzproblem, weitere unentscheidbare Probleme) - Komplexität (Komplexitätsklasen, P-NP-Problem, NP-Vollständigkeit, SAT, weitere NP-vollständige Probleme) Lernziele: Die Studierenden sollen Kenntnisse auf dem Gebiet Berechenbarkeitstheorie und Komplexität erwerben. Sie sollen verschiedene Berechnungsmodelle wie Turing-Maschinen, LOOP-, WHILE-, GOTO-Programme, primitiv rekursive und mu-rekursive Funktionen kennenlernen. Durch den Beweis der Äquivalenz dieser Berechnungsmodelle sollen sie die Churchsche These nachvollziehen. Sie sollen Begriffe wie Unentscheidbarkeit und Reduzierbarkeit verstehen und anwenden können und unentscheidbare Probleme (Halteproblem, Postsches Korrespondenzproblem, etc.) kennenlernen. Dabei sollen sie selbst in die Lage versetzt werden, die Unentscheidbarkeit einer Problemstellung einschätzen und beweisen zu können. Im Bereich der Komplexitätstheorie sollen sie verschiedene Komplexitätsklassen kennenlernen und das P-NP-Problem und das Konzept der (NP-)Vollständigkeit verstehen. Dabei sollen sie die Komplexität von Problemen abschätzen können und in der Lage sein, einfache Reduktionen durchzuführen.  Literatur: - Uwe Schöning: Theoretische Informatik – kurzgefasst. Spektrum, 2001 - John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman: Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Addison-Wesley/Pearson, 2002 Vorleistung: Vorlesungen \"Automaten und formale Sprachen\", \"Grundlegende Programmiertechniken\" Infolink:  Bemerkung: ", "en": "Description: The theory of computability and complexity is an important foundation of computer science. Here we are interested in questions such as: what can we compute? How expensive is such a computation? We will also treat the P-NP problem, the most significant unsolved problem in theoretical computer science. The course will teach fundamental knowledge in the areas of computability and complexity, in particular:\r\n\r\nComputability (Turing machines, intuitive notion of computability, Church‘s thesis, LOOP-/WHILE-/GOTO-programs, primitive recursive and mu-recursive functions, Ackermann function, halting problem, undecidability, reductions, Post‘s correspondence problem, further undecidable problems)\r\nComplexity (complexity classes, P-NP problem, NP-completeness, SAT, further NP-complete problems)\r\n Learning Targets: The students should acquire knowledge in the area of computability and complexity. They should know about various computation models such as Turing machines, LOOP-, WHILE- and GOTO-programs, primitive recursive and mu-recursive functions. Via the proof of equivalence of these models they should be able to understand Church‘s thesis. They should understand and apply concepts such as undecidability and reduction and know about undecidable problems (halting problem, Post‘s correspondence problem, etc.). They should be able to make judgements about the undecidability of a problem and prove this. In the area of complexity the should know about various complexity classes, the P-NP problem and NP-completeness. They should apraise the complexity of problems and have the ability to perform simple reductions. Literature: - Uwe Schöning: Theoretische Informatik – kurzgefasst. Spektrum, 2001 - John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman: Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Addison-Wesley/Pearson, 2002 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Mathematik für Informatiker 1": {"name": "Mathematik für Informatiker 1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/46/detail", "id": "46", "description": {"de": "Beschreibung: Die Veranstaltung behandelt die Grundlagen der Analysis. Inhalte im Einzelnen: - Reelle und komplexe Zahlen - Folgen und Reihen, Grenzwert, Stetigkeit - Elementare Funktionen - Differential- und Integralrechnung von Funktionen einer Veränderlichen - Numerische Integration  Lernziele: Die Studierenden beherrschen die Grundlagen der Analysis insbesondere durch das Lösen der Aufgaben zum Stoff der Vorlesung. Gerade bezüglich der Analysis wird den Studierenden auch klar, dass die (aus einer axiomatischen Charakterisierung der reellen Zahlen) erzielten Ergebnisse beim Übergang auf den Rechner mit Vorsicht zu betrachten sind. Literatur: - O. Forster: Analysis I, Differential- und Integralrechnung einer Veränderlichen. F. Vieweg &amp; Sohn, Braunschweig-Wiesbaden, 7. verb. Aufl. 2004 - H. Heuser: Lehrbuch der Analysis, Teil 1. B.G. Teubner, Stuttgart-Leipzig-Wiesbaden, 15. Aufl. 2003 - W. Preuß u. G. Wenisch (Hrsg.): Lehr- und Übungsbuch Mathematik, Bd. 3: Analysis. Fachbuchverlag Leipzig im Carl Hanser Verlag, München-Wien, 3. Aufl. 2003 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This course covers: fields of real and complex numbers, convergence of sequences and series, limits, continuous mappings, elementary functions, differential and integral calculus of functions of one variable. Learning Targets: The students learn the fundamental ideas of the mathematical analysis. They realize that the axiomatically characterized reell numbers have to be interpreted carefully in the process of computational implementation. Literature: - O. Forster: Analysis I, Differential- und Integralrechnung einer Veränderlichen. F. Vieweg &amp; Sohn, Braunschweig-Wiesbaden, 7. verb. Aufl. 2004 - H. Heuser: Lehrbuch der Analysis, Teil 1. B.G. Teubner, Stuttgart-Leipzig-Wiesbaden, 15. Aufl. 2003 - W. Preuß u. G. Wenisch (Hrsg.): Lehr- und Übungsbuch Mathematik, Bd. 3: Analysis. Fachbuchverlag Leipzig im Carl Hanser Verlag, München-Wien, 3. Aufl. 2003 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Rechnernetze und Kommunikationssysteme": {"name": "Rechnernetze und Kommunikationssysteme", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/48/detail", "id": "48", "description": {"de": "Beschreibung: Die Veranstaltung behandelt Hardwaregrundlagen für Rechnernetze, Technologien zur Paketübertragung, Schichtenmodell und Protokolle, Netzwerkanwendungen. Inhalt im Einzelnen: - Hardwaregrundlagen für Rechnernetze (Übertragungsmedien, Übertragungskomponenten, Topologien) - Technologien zur Paketübertragung (Zugriffsstandards, Ethernet, 10Base2, 10Base5, 10BaseT, 100BaseTX/FX, Gigabit-Ethernet, FDDI, ATM, Wireless-LAN, DSL-Techniken) - Schichtenmodell und Protokolle (Protokollfamilie TCP/IP, wichtigste Dienstprotokollen, IPv6, IPsec etc.) - Netzwerkanwendungen (Client/Server Interaktion, Sockets, Dienste im Internet wie DNS, FTP, WWW etc.)  Lernziele: Die Studierenden begreifen Rechnerkommunikation anhand von Schichtenmodellen, sie ordnen physikalische und logische Komponenten, wie z. B. Adressen, sowie Dienste den Schichten zu, kennen wichtige Zugangsstandards und Protokollfamilien und ihre Bedeutung für den Datenaustausch. Sie identifizieren verschiedene Kommunikationsformen in den betrachteten Architekturen, die bereitgestellten Dienste und verstehen ihr Zusammenspiel zur Gewährleistung eines Informationsflusses im Rahmen von Qualitätszusicherungen. Literatur: - Andrew S. Tanenbaum, David J. Wetherall: Computernetzwerke. 5. aktualisierte Auflage: Pearson Studium. 2012. ISBN 978-3868941371. - Andrew S. Tanenbaum, David J. Wetherall: Computer Networks. 5th Edition. Pearson Education. 2010 ISBN 978-0132553179.- J. Kurose, K. Ross: Computernetzwerke. 5. aktualisierte Auflage, Pearson Studium 2012, ISBN 978-3868941852 - J. Kurose, K. Ross: Computer Networking: A Top-Down Approach, 5th Edition, Addison Wesley 2010, ISBN 978-0136079675 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The lecture covers hardware fundamentals of computer networks, technology of packets transfer, layer model and protocols, network applications. Content in particular: - Hardware fundamentals of computer networks (transfer media, transfer components, topologies) - Technology of packet transfer (access standards, Ethernet, 10Base2, 10Base5, 10BaseT, 100BaseTX/FX, Gigabit-Ethernet, FDDI, ATM, Wireless-LAN, DSL-techniques) - Layer model and protocols (protocol family TCP/IP, important service protocols, IPv6, IPsec etc.) - Network applications (Client/Server interaction, sockets, services in Internet such as DNS, FTP, WWW etc.) Learning Targets: The students understand computer communication on the basis of layer models, they organize physical and logical components, addresses for example, as well as services for layers, learn important standards for access and protocol families and their meaning for data exchange. They identify different communication forms in the considered architectures from the provided services and understand interaction to the warranty/ guarantee of the information flows in the context of quality confirmation. Literature: - Andrew S. Tanenbaum, David J. Wetherall: Computernetzwerke. 5. aktualisierte Auflage: Pearson Studium. 2012. ISBN 978-3868941371. - Andrew S. Tanenbaum, David J. Wetherall: Computer Networks. 5th Edition. Pearson Education. 2010 ISBN 978-0132553179.- J. Kurose, K. Ross: Computernetzwerke. 5. aktualisierte Auflage, Pearson Studium 2012, ISBN 978-3868941852 - J. Kurose, K. Ross: Computer Networking: A Top-Down Approach, 5th Edition, Addison Wesley 2010, ISBN 978-0136079675 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Datenstrukturen und Algorithmen": {"name": "Datenstrukturen und Algorithmen", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/44/detail", "id": "44", "description": {"de": "Beschreibung: Die Veranstaltung stellt das Konzept der Abstrakten Datentypen vor, führt die wichtigsten Beispiele von Abstrakten Datentypen ein, und zeigt deren Anwendung/Handhabung im Rahmen der Behandlung von wichtigen grundlegenden Algorithmen.  Inhalte im Einzelnen: - Algorithmenbegriff (Syntax, Semantik, Spezifikation) - Algorithmenentwicklung (schrittweise Verfeinerung) - Algorithmentheorie (Berechenbarkeit, Komplexität, Korrektheit) - Wichtige Algorithmen (Suchen, Sortieren) - Konzept der Abstrakten Datentypen (Spezifikation, Implementierung) - Bedeutung von Vor- und Nachbedingungen - Wichtige Abstrakte Datentypen (verkettete Listen, Keller, Schlangen, Mengen, Binärbäume, ausgewogene Bäume, B-Bäume, Hash-Tabellen, Graphen) - Wichtige Klassen von Algorithmen (Divide-and-Conquer-Algorithmen, Such- und Sortieralgorithmen, Graphalgorithmen, Greedy-Algorithmen, Optimierungsalgorithmen) Lernziele: Die Studierenden lernen den Algorithmenbegriff erläutern können und Algorithmen durch schrittweise Verfeinerung entwickeln zu können. Sie sind in der Lage wichtige Komplexitätsklassen zu unterscheiden und damit die Komplexität eines Algorithmus abschätzen zu können. Die Studierenden beherrschen die die grundlegenden Datenstrukturen und können diese sinnvoll anwenden. Insbesondere sind ihnen die Unterschiede und die jeweiligen Vor- und Nachteile der Datenstrukturen bekannt und damit sind sie in der Lage die richtige Repräsentation für eine gegebene Umgebung auszuwählen und selbst zu implementieren. Literatur: - Robert Sedgewick: Algorithms, Addison Wesley, 1998 - Les Goldschlager, Andrew Lister: Computer Science - A Modern Introduction - Second Edition, Prentice Hall, 1987 - Bertrand Meyer: Object-Oriented Software Construction, Prentice Hall, 1997 - sowie andere Literatur zu diesem Thema gemäß Mitteilung in der Veranstaltung Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This course teaches the concept of abstract data types. It introduces the fundamental abstract data types and shows their use/handling within the scope of important classes of algorithms.  Contents in detail: - Notion of an algorithm (syntax, semantics, specification) - Development of algorithms (stepwise refinement) - Theory of algorithms (computability, complexity, correctness) - Important algorithms (searching, sorting) - Concept of Abstract Data Types (specification, implementation) - Significance of pre- and postconditions - Important Abstract Data Types (linked lists, stacks, queues, sets, binary trees, balanced binary trees, B- trees, hash tables,graphs) - Important classes of algorithms (divide and conquer, searching and sorting, graph algorithms, greedy, backtracking) Learning Targets: The students are able to explain the notion of algorithms have understood how to develop algorithms by stepwise refinement. They know important complexity classes and are able to estimate the complexity of an algorithm using these classes. The students are able to explain the concept of abstract data types and can enumerate and explain important abstract data types. They know the differences and the strengths and weaknesses of the different data types and therefore are able to choose and implement the most appropriate type in a given environment.  Literature: - Robert Sedgewick: Algorithms, Addison Wesley, 1998 - Les Goldschlager, Andrew Lister: Computer Science - A Modern Introduction - Second Edition, Prentice Hall, 1987 - Bertrand Meyer: Object-Oriented Software Construction, Prentice Hall, 1997 - sowie andere Literatur zu diesem Thema gemäß Mitteilung in der Veranstaltung Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Automaten und formale Sprachen": {"name": "Automaten und formale Sprachen", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/43/detail", "id": "43", "description": {"de": "Beschreibung: Die Theorie der formalen Sprachen bildet die Grundlage für viele andere Gebiete der Informatik, beispielsweise für Informationsverarbeitung, Compilerbau, Verifikation, Modellierung. Im Rahmen dieser Veranstaltung werden die Grundlagen der formalen Sprachen vermittelt und Fertigkeiten im Umgang mit Automaten und Grammatiken eingeübt. Außerdem soll vermittelt werden, in welchen Bereichen diese Theorie zur Anwendung kommt. Inhalte im Einzelnen: - Grammatiken, Chomsky-Hierarchie - Wortproblem, Syntaxbäume - Reguläre Sprachen (Endliche Automaten, Reguläre Ausdrücke, Pumping-Lemma, Äquivalenzrelationen und Minimalautomaten, Abschlusseigenschaften, Endscheidbarkeit, Anwendung bei Verifikation eines Protokolls zum wechselseitigen Ausschluss) - Kontextfreie Sprachen (Normalformen, Pumping-Lemma, CYK-Algorithmus, Kellerautomaten, deterministisch kontextfreie Sprachen, Abschlusseigenschaften, Entscheidbarkeit, Anwendung bei XML und DTDs) - Kontextsensitive und Typ-0-Sprachen, Turing-Maschinen Lernziele: Die Studierenden sollen Kenntnisse auf dem Gebiet Automaten und formale Sprachen erwerben. Sie sollen sowohl reguläre, als auch kontextfreie Sprachen und die dazugehörigen Automatenmodelle (endliche Automaten, Kellerautomaten) kennenlernen. Sie sollen selbst in der Lage sein, Automaten und Grammatiken aufzustellen und über ihre Adäquatheit zu argumentieren. Ferner sollen Sie die entsprechenden Algorithmen (Minimierung, CYK, etc.) und Beweismethoden (Pumping-Lemma, etc.) verstehen und anwenden können. Außerdem sollten sie Kenntnisse über Turing-Maschinen und die Grundlagen der Berechenbarkeitstheorie erwerben. Insgesamt sollen sie in die Lage versetzt werden, mit formalen Konzepten umzugehen, selbst formal korrekte Notationen zu verwenden und kleinere Beweise zu führen. Literatur: - Uwe Schöning: Theoretische Informatik – kurzgefaßt. Spektrum, 2001 - John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman: Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Addison-Wesley/Pearson, 2002 Vorleistung: Vorlesungen \"Grundlagen der Programmiertechnik\", \"Modellierung\" Infolink:  Bemerkung: ", "en": "Description: The theory of formal languages forms the foundation of many other fields of computer science, e.g. information processing, compiler construction, verification, modeling. In this lecture the basics of formal language theory are covered and skills in handling automata and grammars are practiced. Additionally, fields where this theory is applied are considered. The contents of the lecture in detail: - Grammars, Chomsky-hierarchy - Word problem, syntax trees - Regular languages (finite automata, regular expressions, pumping lemma, equivalence relations and minimal automata, closure properties, decidability, application of regular languages for the verification of protocols for mutual exclusion) - Context-free languages (normal forms, pumping lemma, CYK-algorithm, push-down automata, deterministic context-free languages, closure properties, decidability, application for XML and DTDs) - Context sensitive languages and type-0 languages, Turing machines Learning Targets: The students should obtain knowledge of automata and formal languages. They should become acquainted with regular as well as context-free languages and the corresponding automaton models (finite automata, push-down automata). They should be able to define automata and grammars and discuss whether they are appropriate. Moreover, the students should understand and use the relevant algorithms (minimization, CYK, and so on) and proof methods (pumping-lemma, and so on). Additionally, they should obtain knowledge about Turing machines and the basics of computability theory. All in all they should be able to handle formal concepts, use formally correct notations on their own and conduct small proofs. Literature: - Uwe Schöning: Theoretische Informatik – kurzgefaßt. Spektrum, 2001 - John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman: Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Addison-Wesley/Pearson, 2002 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Logik": {"name": "Logik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/40/detail", "id": "40", "description": {"de": "Beschreibung: Logik dient in der Informatik unter anderem als Grundlage der Datenbanken (Abfragesprache SQL), als Beschreibungssprache für Schaltkreise und als Modellierungs- und Spezifikationssprache, wo sie auch für die Analyse und Verifikation von Programmen eingesetzt wird. In Form der Logik-Programmiersprache Prolog wird Logik auch zur Wissensverarbeitung und für Expertensysteme eingesetzt. Außerdem ist die Logik ein Anwendungsgebiet der Informatik, beispielsweise bei der Entwicklung von Theorembeweisern. Im Rahmen dieser Veranstaltung werden die Grundlagen der Aussagen- und Prädikatenlogik und ihre Anwendungen vermittelt. Inhalte im Einzelnen: - Aussagenlogik (Grundbegriffe, Äquivalenz und Normalformen, Resolution in der Aussagenlogik, Anwendung SAT-Solver) - Prädikatenlogik erster Stufe (Grundbegriffe, Normalformen, Unentscheidbarkeit der Prädikatenlogik, Herbrandtheorie, Resolution in der Prädikatenlogik) - Grundlagen der Logik-Programmierung (SLD-Resolution) Lernziele: Die Studierenden sollen die Sprache der Aussagenlogik und der Prädikatenlogik erster Stufe beherrschen lernen. Sie sollen mit den Grundbegriffen der mathematischen Logik vertraut werden und einige grundlegende Sätze wie den Endlichkeitssatz und die Unentscheidbarkeit der Prädikatenlogik kennenlernen. Ein Schwerpunkt wird auf algorithmische Aspekte der Logik gelegt (Resolutionsverfahren, Grundlagen der Logikprogrammierung). Neben der Kenntnis und Anwendung von Algorithmen und Beweisverfahren sollen die Studierenden auch in die Lage versetzt werden, natürlichsprachige Aussagen in logische Formeln umzusetzen und sicher mit Werkzeugen zum automatischen Beweis solcher Aussagen umgehen. Literatur: - Uwe Schöning: Logik für Informatiker. Spektrum, 2000 - Jon Barwise and John Etchemendy: Language, Proof, and Logic. Seven Bridges Press, 2000 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In Computer Science logic is, for instance, used in databases (query language SQL), as a specification language for Boolean circuits and as modelling language, for example for the analysis and verification of programs. The logic programming language Prolog is employed in knowledge processing and expert systems. Furthermore logic is an application area of computer science, for instance in the development of theorem provers. During this course we will teach the foundations of propositional logic and predicate logic and their applications. In particular: - propositional logic (basics, equivalence and normal forms, resolution in propositional logic, SAT-Solvers) - first-order predicate logic (basics, normal forms, undecidability of predicate logic, Herbrand theory, resolution in predicate logic) - foundations of logic programming (SLD resolution) Learning Targets: The students should learn to master the language of propositional and first-order predicate logic. They should get acquainted with the basics of mathematical logic and with some foundational theorems, such as the compactness theorem and the undecidability of predicate logic. One focus lies on algorithmic aspects of logic (resolution calculus, foundations of logic programming). Apart from getting acquainted with and applying algorithms and proof techniques, the students should also be able to translate statements in natural language into logical formulas and use tools for automatically proving such statements. Literature: - Uwe Schöning: Logik für Informatiker. Spektrum, 2000 - Jon Barwise and John Etchemendy: Language, Proof, and Logic. Seven Bridges Press, 2000 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Grundlagen der technischen Informatik Praktikum": {"name": "Grundlagen der technischen Informatik Praktikum", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/165/detail", "id": "165", "description": {"de": "Beschreibung: In Laborübungen erfahren die Studierenden die Möglichkeiten der computergestützten Entwicklung digitaler Schaltungen. Eingesetzt wird hierbei das industriell verbreitete Simulationssystem OrCAD. Im ersten Schritt simulieren und analysieren die Studierenden Grundbausteinen der Digitaltechnik. Aufbauend auf diesen Erfahrungen entwerfen und erproben sie einfache kombinatorische und sequentielle Schaltungen. Lernziele: Die Studierenden sind in der Lage, professionelle Entwurfssysteme zur Analyse und Simulation einfacher Bausteine und Schaltungen der Digitaltechnik anzuwenden. Literatur: (1) Versuchsunterlagen des Instituts (2) Datenblätter (http://www.ti.com) (3) Literatur zur Veranstaltung Grundlagen der Technischen Informatik Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The lab allows the students to gain own experiences regarding the computer aided design of digital circuits. The professional simulation tool OrCAD offers an environment as it can be found in industrial context. In a first step, students simulate and analyze basic digital circuits. Then they exploit their experiences to design and evaluate simple combinatorial and sequential digital circuits. Learning Targets: The students are able to use professional computer aided design systems to analyze and simulate basic digital circuits. Literature: (1) Versuchsunterlagen des Instituts (2) Datenblätter (http://www.ti.com) (3) Literatur zur Veranstaltung Grundlagen der Technischen Informatik Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Modellierung": {"name": "Modellierung", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/41/detail", "id": "41", "description": {"de": "Beschreibung: Neben der Programmierung und dem Verständnis der theoretischen Grundlagen ist die Fähigkeit zur Abstraktion und Bildung von Modellen eine wesentliche Grundkompetenz eines Informatikers. Diese Veranstaltung behandelt die Aspekte der informatischen Modellierung von intuitiven und semi-formalen Methoden bis hin zu formalen Techniken. Inhalte im Einzelnen: - Einführung der Grundbegriffe, Zustandsdiagramme- Petri-Netze (Grundlagen und Eigenschaften von Petrinetzen, Erreichbarkeits- und Überdeckungsgraphen) - UML (Unified Modelling Language mit wesentlichen Diagrammtypen, v.a. Klassen- und Objektdiagramme und Verhaltensdiagramme) Lernziele: Durch diese Veranstaltung sollen die Studierenden in die Lage versetzt werden, - wesentliche praxisrelevante Modellierungsmethoden (UML, Petri-Netze) zu verstehen und anzuwenden - praktische Beispiele mit Hilfe von Modellierungstechniken zu analysieren und Modelle daraus zu erstellen / zu synthetisieren - verschiedene Vorgehensweisen der Modellierung bezüglich des Detailgrads und der Formalisierung zu kennen und beurteilen zu können.  Literatur: - Broy: Informatik, eine grundlegende Einführung (Springer 1998) - Sowa: Conceptual Structures (Addison-Wesley 1984) - Jeckle et al.: UML2 glasklar (Hanser 2003) - Reisig: Petrinetze: Modellierungstechnik, Analysemethoden, Fallstudien (Vieweg+Teubner, 2010) - Harel/Politi, Modeling Reactive Systems with Statecharts (McGraw-Hill 1998)  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Besides programming skills and understanding of theoretical concepts, abstraction and formation of models is an essential capability of computer scientists. This course deals with important aspects of modelling in computer science, ranging from intuitive and semi-formal methods to formal techniques. Contents: - Introduction of basic concepts, state diagrams- Petri nets (basic concepts and properties of Petri nets, reachability and covering graphs) - UML (Unified Modelling Language with essential diagram types, especially class and object diagrams and behavioural diagrams)  Learning Targets: Students will learn to - apply important modelling methods (UML, Petri nets) - analyze practical examples by using modelling techniques and to create/synthesize own models - learn about the differences between various modelling methods with regard to level of detail and degree of formalization Literature: - Broy: Informatik, eine grundlegende Einführung (Springer 1998) - Sowa: Conceptual Structures (Addison-Wesley 1984) - Jeckle et al.: UML2 glasklar (Hanser 2003) - Reisig: Petrinetze: Modellierungstechnik, Analysemethoden, Fallstudien (Vieweg+Teubner, 2010) - Harel/Politi, Modeling Reactive Systems with Statecharts (McGraw-Hill 1998)  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Diskrete Mathematik 1": {"name": "Diskrete Mathematik 1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/38/detail", "id": "38", "description": {"de": "Beschreibung: Die Vorlesung vermittelt Grundlagen der linearen Algebra und diskreten Mathematik. Inhalte im Einzelnen: \r\n\r\nMethodische Konzepte der Mathematik \r\nAussagenlogik und Elementare Mengenlehre \r\nRelationen und Abbildungen \r\nAlgebraische Grundstrukturen: Gruppen, Ringe, Körper \r\nHomomorphismen \r\nVektorräume und lineare Abbildungen \r\nMatrizen und lineare Gleichungssysteme, Gauß-Algorithmus\r\n Lernziele: Die Studierenden erlernen zu Beginn den Umgang mit den wesentlichen methodischen Konzepten der Mathematik (Logik, Beweise). Anschließend werden die elementaren Begriffe der Mathematik eingeführt (Mengen, Relationen und Abbildungen) und deren Eigenschaften studiert. Anhand der dadurch erworbenen Kenntnisse werden die grundlegenden algebraischen Strukturen (Gruppen, Ringe, Körper), deren Unterstrukturen (Untergruppen, Normalteiler, Ideale) und strukturverträglichen Abbildungen (Homomorphismen) vorgestellt und untersucht. Die gewonnenen Ergebnisse werden dabei jeweils durch Beispiele vertieft. In der zweiten Hälfte der Vorlesung lernen die Studierenden zunächst die wesentlichen Begriffe und Methoden der linearen Algebra kennen (Vektorräume, Unterräume, Basis, Dimension, lineare Abbildungen). Die dadurch angeeigneten Kenntnisse finden anschließend Anwendung beim Matrizenkalkül und bei der Lösung linearer Gleichungssysteme. Begleitend zur Vorlesung werden Übungen angeboten,in denen der erlernte Stoff anhand von Aufgaben und weiteren Beispielen gefestigt wird. Literatur: \r\nW. Dörfler: Mathematik für Informatiker I, Hanser, München 1977 \r\nG. Fischer: Lineare Algebra, Vieweg, Braunschweig/Wiesbaden 2005 \r\nD. Lau: Algebra und Diskrete Mathematik 1, Springer, Berlin Heidelberg 2004\r\nA. Beutelspacher: Lineare Algebra, Springer 2014\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This course covers the foundations of linear algebra and discrete mathematics. \r\n\r\nmethodical concept of mathematics\r\nelementary logic, \r\nelementary set theory, \r\ncorrespondencies, relations and mappings, \r\nbasic algebraic structures: groups, rings, fields, \r\nhomomorphisms, \r\nvector spaces and linear operators, \r\nmatrices and linear systems of equations, Gauss-algorithm.\r\n Learning Targets: To start with the students will learn some basic concepts of mathematics, namely logic and proofs. After that, elementary terms as sets, relations and functions and their properties are introduced. To build on this, algebraic structures as groups, rings, fields, their subelements   and also special functions (homomorphisms) will be studied. The results will always be deepened by examples.\r\nIn the second part of the lecture we will talk about the main definitions and methods dealing with linear algebra (vector spaces, sub spaces, basis, dimension, linear function).\r\nAt the end the students will use their acquired knowledge to discuss the gauss method to solve linear systems of equations efficiently.\r\nIn addition to the lecture we will offer excercises to consolidate and deepen the topics mentioned above. Literature: \r\nW. Dörfler: Mathematik für Informatiker I, Hanser, München 1977 \r\nG. Fischer: Lineare Algebra, Vieweg, Braunschweig/Wiesbaden 2005 \r\nD. Lau: Algebra und Diskrete Mathematik 1, Springer, Berlin Heidelberg 2004\r\nA. Beutelspacher: Lineare Algebra, Springer 2014\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Fortgeschrittene Programmiertechniken": {"name": "Fortgeschrittene Programmiertechniken", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/45/detail", "id": "45", "description": {"de": "Beschreibung: Aufbauend auf grundlegenden Programmiertechniken (in C, Java oder Python) werden weiterführende Sprachelemente und APIs in Java behandelt und anhand von komplexeren Fragestellungen in praktischen, themenübergreifenden Übungsprojekten angewendet. Inhalte im Einzelnen:\r\n\r\nObjektorientierte Programmierung\r\nArchitektur- und Entwurfsmuster\r\nNebenläufige Programmierung\r\nGraphische Benutzeroberflächen mit dem Model-View-Controller Prinzip\r\nObjektserialisierung und Reflections\r\nDatenbankanbindung mit JDBC\r\nEinführung in die Netzwerkprogrammierung\r\nWebservices mit REST\r\n Lernziele: Die Studierenden sollen die in der grundlegenden Veranstaltung eines früheren Semesters erlernten Konzepte und Techniken der Programmierung vertiefen und auf komplexere Fragestellungen anwenden können. Sie sollen weiterführende Sprachelemente sowie die objektorientierte Programmierweise verstanden haben und wissen, wann die Anwendung eines bestimmten Architektur- bzw. Entwurfsmusters angebracht ist. Sie sollen fortgeschrittene APIs verstehen und anwenden können, die sie in die Lage versetzen, größere Anwendungen, z.B. im Netzwerk- und Datenbankbereich erfolgreich zu implementieren. Darüber hinaus haben sie Kenntnisse in der Implementierung von nebenläufigen Anwendungen erlangt. Literatur: \r\nJ. Bloch: Effective Java - Best Practices für die Java-Plattform (2017)\r\nE. Freeman et. al.: Head First Design Patterns (2015)\r\nA. Downey et. al.: Think Java - How to Think Like a Computer (2016)\r\nOfficial Oracle Java 11 Reference and Tutorials\r\n Vorleistung: Veranstaltung \"Grundlegende Programmiertechniken\" Infolink: www.is.uni-due.de/fpt Bemerkung: ", "en": "Description: Relying on the fundamentals of programming (in C, Java , or Python), the course treats continuative features and selected APIs of Java. These will be applied in practical, cross-thematic exercise projects to solve sophisticated programming problems. Contents at a glance:\r\n\r\nObjectoriented programming\r\nArchitecture and design patterns\r\nConcurrent programming\r\nGraphical user interfaces based on Model-View-Controller technique\r\nObject serialisation and Reflections\r\nDatabase access using JDBC\r\nIntroduction to network programming\r\nWebservices using REST\r\n Learning Targets: Students should deepen the knowledge of concepts and techniques of programming and apply them to more complex problems. They should have understood advanced language elements and object-oriented programming and know when to apply certain architecture and design pattern. They should understand and be able to use advanced APIs that enable them to successfully implement larger applications, e.g. in the network and database area. In addition, they have gained knowledge in the implementation of concurrent applications. Literature: \r\nJ. Bloch: Effective Java - Best Practices für die Java-Plattform (2017)\r\nE. Freeman et. al.: Head First Design Patterns (2015)\r\nA. Downey et. al.: Think Java - How to Think Like a Computer (2016)\r\nOfficial Oracle Java 11 Reference and Tutorials\r\n Pre-Qualifications: Course \"Grundlegende Programmiertechniken\" Info Link: www.is.uni-due.de/fpt Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Grundlegende Programmiertechniken": {"name": "Grundlegende Programmiertechniken", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/39/detail", "id": "39", "description": {"de": "Beschreibung: Anhand einer modernen Programmiersprache (z.B. Python) werden grundlegende Programmiertechniken und deren Anwendung besprochen. Inhalte im Einzelnen:\r\n\r\nEinführung und grundlegende Struktur von Programmen\r\nLexikalische Elemente, Datentypen und Variablen, Ausdrücke und Anweisungen\r\nEin- und Ausgabe mittels Pipes und Streams\r\nAusnahmebehandlung\r\nFunktionen\r\nGrundlegende Algorithmen- Suchen- Sortieren\r\nKonstrukte moderner Programmiersprachen\r\nAlternative Sprachen (z.B. Java)\r\n Lernziele: Die Studierenden sollen die Konzepte moderner Programmiersprachen kennen und anwenden lernen. Sie sollen dem Problem angemessene Datenstrukturen und Programmkonstrukte wählen, beurteilen und verwenden können. Ausgehend von den elementaren Sprachkonstrukten sollen die Studierenden in der Lage sein, kleinere Problemstellungen in einen Algorithmus zu überführen und in Python und Java zu implementieren. Hierbei sollen die Studierenden lernen, den Standards und Konventionen entsprechenden, verständlichen und gut dokumentierten Quellcode zu erzeugen. Literatur: \r\nIntroduction to Programming in Python: An Interdisciplinary Approach, Robert Sedgewick, Kevin Wayne und Robert Dondero\r\nEinführung in Python, Mark Lutz und David Ascher\r\nAlgorithms, Robert Sedgewick und Kevin Wayne\r\nJava ist auch eine Insel, Christian Ullenboom\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In this lecture we use state of the art programming languages (e.g. Python 3) zuteach basic programming skills and applications thereof. In particular the lecturewill include the topics such as, basic structure of programs, programming elementsdata types, variables, expressions, branches, and loops. Furthermore we will discussinput and output using pipes and streams along with exception handling. The lecturecovers functions and recursive algorithms. Particular applications will be searchingand sorting. We will also look at high-level concepts of modern programming languagessuch as list comprehension. The lectures finishes with the introduction to a secondimperative programming language (such as Java) and a comparison of these two languagesto understand the differences and similarities of modern programming languages. Learning Targets: The students will learn the basic concepts of modern programming languages. They posses basic knowledge of variables, data types and structural elements and are able to analyseproblems. For basic scenarios they are able to choose appropriate data-structures and algorithms. They are able to implement these data-structures and algorithms in two differentprogramming languages (e.g., Java and Python) and can structure and document the resultingsource code according to well established standards. Literature: \r\nIntroduction to Programming in Python: An Interdisciplinary Approach, Robert Sedgewick, Kevin Wayne und Robert Dondero\r\nEinführung in Python, Mark Lutz und David Ascher\r\nAlgorithms, Robert Sedgewick und Kevin Wayne\r\nJava ist auch eine Insel, Christian Ullenboom\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Grundlagen der technischen Informatik": {"name": "Grundlagen der technischen Informatik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/164/detail", "id": "164", "description": {"de": "Beschreibung: Diese Vorlesung gibt den Studierenden das grundlegende Verständnis der technischen Informatik, wie sie für den Entwurf und die Analyse der Hardware erforderlich sind. Sie lernen auf der Basis der Booleschen Algebra zu unterscheiden zwischen der Nutzung von 0 und I für die grundlegenden Methoden der Schaltalgebra zur Minimierung logischer Ausdrücke, der Verwendung binärer Codes zur arithmetischen Verarbeitung wie auch zur Darstellungscodierung wie schließlich zur Steuerung von Funktionen beim Aufbau von Rechnern. Aus dem Verständnis von Wahrheitstabellen und charakteristischen Gleichungen von Flip-Flops wird der Entwurf digitaler Schaltkreise (kombinatorische und sequenzielle) abgeleitet; Grundlagen der Automatentheorie führen zur Mikroprogrammierung. Abschließend wird die Realisierung komplexerer Funktionen, wie sie zum Aufbau von Rechnern benötigt werden vorgestellt und diskutiert. Lernziele: Die Studierenden lernen durch diese Veranstaltung die grundlegenden Denkweisen der Booleschen Algebra und Codierung in den grundlegenden Anwendungsformen kennen. Sie werden in den Stand versetzt, derartige Vorgehensweisen auf einfache Schaltungen der Rechnertechnik, aber auch auf andere Aufgabenstellungen anzuwenden. Literatur: 1. Hoffmann, D.: Grundlagen der technischen Informatik; Hanser Verlag München 2013 [D43 TWG 40340] 2. Becker, B.; Drechsler, R.; Molitor, P.: Technische Informatik- Eine einführende Darstellung; Oldenbourg Verlag, München 2008 [D45 TWG 4734] 3. Roth, Charles: Fundamentals of Logic Design, Cengage Learning, 2013 [Edition 2001: 45YGQ4426]  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This course gives basic insight in the fundamental understanding of computer engineering as it is necessary for design and analysis of hardware. They learn, based on the understanding of the Boolean algebra to distinguish between the use of 0s and Is for basic minimization methods for logic expressions, the use of binary codes for arithmetic calculations as well as for the presentation of information, and finally the control of basic functions in computers. From the understanding of truth tables and characteristic equations of flip-flops, the design of digital circuits (combinational and sequential) is derived; basics of automata theory lead to the introduction of microprogramming. Finally, more complex functions up to the modules required for the set up of a basic microcomputer are explained and discussed. Learning Targets: Students learn the basic methods of Boolean algebra and coding as well as the different strategies to apply them. They are able to exploit this knowledge for the development of digital circuits, simple computer systems as well as for further applications. Literature: 1. Hoffmann, D.: Grundlagen der technischen Informatik; Hanser Verlag München 2013 [D43 TWG 40340] 2. Becker, B.; Drechsler, R.; Molitor, P.: Technische Informatik- Eine einführende Darstellung; Oldenbourg Verlag, München 2008 [D45 TWG 4734] 3. Roth, Charles: Fundamentals of Logic Design, Cengage Learning, 2013 [Edition 2001: 45YGQ4426]  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Computer Science, PO19 - B-AI-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/191/detail", "id": "191", "type": "StudyCourse"}}, "Masterprojekt (AI, ISE)": {"name": "Masterprojekt (AI, ISE)", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/965/detail", "id": "965", "description": {"de": "Beschreibung: Das Master-Projekt ist eine Einheit bestehend aus einem praktischen Teil und einem theoretischen Teil. Im praktischen Teil wird ein Software-System bzw. ein Hardware-Software-System realisiert, der begleitende theoretische Teil hat die Form einer Spezialvorlesung oder eines Seminars oder eines Kolloquiums. Eine Projektgruppe besteht im Allgemeinen aus maximal 12 Studierenden und bearbeitet über die Dauer der Vorlesungszeit eines Semesters eine abgegrenzte Aufgabenstellung, betreut und begleitet von Lehrenden der Informatik. Themen werden aus den vier möglichen Anwendungsbereichen im Master-Studiengang angeboten und sind jeweils an das Forschungsgebiet des gewählten Lehrstuhls angelehnt. Es werden klassische und neue Forschungsergebnisse aus dem jeweiligen Forschungsgebiet unter wissenschaftlicher Anleitung anhand eines konkreten Szenarios realisiert/angewendet. Beispielhafte Themen kommen aus den Bereichen: \"Verteilte, Verlässliche Systeme\", \"Intelligente Technische Systeme und Wissenschaftliches Rechnen\", \"Interaktive und Kooperative Systeme\", \"Information Engineering\". Lernziele: Basierend auf den Qualifikationen, welche durch das Bachelor-Studium sowie durch das bis dahin fortgeschrittene Master-Studium erworben wurden, trägt das MA-Projekt zur Befähigung zu eigenständigem wissenschaftlichen Arbeiten bei (zusammen mit dem MA-Seminar und der MA-Arbeit). Unter Anleitung durch wissenschaftliches Personal lernen die Studierenden zunächst, sich neue wissenschaftliche Ergebnisse zu einem bestimmten Forschungsgebiet der Informatik anzueignen. Danach lernen sie spezifisch im MA-Projekt, wie diese Ergebnisse, die oftmals als Konzepte, Spezifikationen, Prä-Algorithmen vorliegen, anwendungsbezogen in konkrete Systeme oder Sub-Systeme umgesetzt werden können. Die Gruppe von Studierenden wird dabei motiviert zu größtmöglicher Selbständigkeit sowohl bei der Analyse des Problems, der Aufteilung in Teilaufgaben, sowie auch bei der Einarbeitung der Studierenden in die jeweiligen Teilaufgaben, und der abschließenden Fusion der Ergebnisse. Großer Wert wird ebenfalls gelegt auf die zeitbeschränkte, verständliche Präsentation von Zwischen- und Endergebnissen. Durch Gruppenarbeit machen die Studierenden die Erfahrung, wie Literaturstudium und reale Umsetzung durch Koordination und Zusammenarbeit mit den Kollegen der Gruppe erfolgt. Damit wird die Befähigung zum späteren Arbeiten in einer Gruppe von angehenden Wissenschaftlern erworben. Literatur: Wird individuell gewählt Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The Master project is a unit consisting of a practical and a theoretical part. In the practical part a software- system respectively a hardware-software-system is realized, the attendant theoretical part is a special kind of lecture or seminar or colloquium. A project group consists of maximal 12 students and deals with a well-defined task, guided by a supervisor of computer science over the whole lecture period in one semester. The topics are offered from the four possible application areas of the master studies and abut to the field of research of the chosen professorship. Classical and new research results from the particular research field will be realized / applied under scientific guidance. Exemplary topic come from the fields: \"distributed, reliable systems\", \"intelligent technical systems and scientific calculation\", \"interactive and cooperative systems\", \"information engineering\". Learning Targets: Based on the qualification, which were gained in the bachelor and the so far finished master studies, the master project accounts the self-contained scientific work. Under guidance of scientific staff the students learn how to acquire new scientific results from specific research fields of computer science. After that, they learn how to implement those results, which are often available as concepts, specifications, pre-algorithms, applied in concrete systems and sub-systems. The group of students is motivated by the greatest possible self-confidence both the analysis of problems, distribution of subtasks and the incorporation with students of the particular subtasks and the final fusion of the results. A great importance lies on the time-limited, comprehensible presentation of interim results and the final results. By teamwork, the students learn how literature review and real implementation through coordination and cooperation with colleges of the group are. Thereby the ability for later work in groups of soon-to-be scientists is gained. Literature: Wird individuell gewählt Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Computer Science (Intelligent Systems and Scientific Calculation), PO12 - M-AI(ITSWR)-12", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/51/detail", "id": "51", "type": "StudyCourse"}}, "Forschungsprojekt 2": {"name": "Forschungsprojekt 2", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/993/detail", "id": "993", "description": {"de": "Beschreibung: Das Forschungsprojekt ist eine Einheit bestehend aus einem Seminaranteil, in dem die Literaturgrundlage zu der Aufgabenstellung des Forschungsprojekts bearbeitet wird und einem praktischen Teil, der die eigenverantwortliche Bearbeitung der forschungsorientierten Fragestellung umfasst. Die Studierenden erstellen eine empirische Forschungsarbeit, das an das Forschungs- und Lehrgebiet des jeweils die Veranstaltung ausrichtenden Lehrstuhls angelehnt ist (wechselnde Themenstellungen). Dabei werden über den Zeitraum eines Semesters aktuelle Forschungsfragen und Arbeiten aus der Informatik bzw. der Psychologie vertieft und in die eigene Fragestellung einbezogen.  exemplarisch an einem konkreten Szenario angewendet. Lernziele: Die Studierenden sollen auf die Durchführung eigener Forschungsarbeiten vorbereitet werden, indem sie vertiefte Fach- und Methodenkenntnisse erwerben, einüben und auf konkrete Forschungsprobleme beziehen. In den Forschungsprojekten werden Fragestellungen für die Masterarbeiten entwickelt. Literatur: Wird individuell je Forschungsprojekt bekannt gegeben Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell je Forschungsprojekt bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Cognitive and Media Science (Social Media and Professional Communication), PO19 - M-KM(SMPK)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/479/detail", "id": "479", "type": "StudyCourse"}}, "Forschungsprojekt 1": {"name": "Forschungsprojekt 1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/991/detail", "id": "991", "description": {"de": "Beschreibung: Das Forschungsprojekt ist eine Einheit bestehend aus einem Seminaranteil, in dem die Literaturgrundlage zu der Aufgabenstellung des Forschungsprojekts bearbeitet wird und einem praktischen Teil, der die eigenverantwortliche Bearbeitung der forschungsorientierten Fragestellung umfasst. Die Studierenden erstellen eine empirische Forschungsarbeit, das an das Forschungs- und Lehrgebiet des jeweils die Veranstaltung ausrichtenden Lehrstuhls angelehnt ist (wechselnde Themenstellungen). Dabei werden über den Zeitraum eines Semesters aktuelle Forschungsfragen und Arbeiten aus der Informatik bzw. der Psychologie vertieft, in die eigene Fragestellung einbezogen und  exemplarisch an einem konkreten Szenario angewendet. Lernziele: Die Studierenden sollen auf die Durchführung eigener Forschungsarbeiten vorbereitet werden, indem sie vertiefte Fach- und Methodenkenntnisse erwerben, einüben und auf konkrete Forschungsprobleme beziehen. In den Forschungsprojekten werden Fragestellungen für die Masterarbeiten entwickelt. Literatur: Wird individuell je Forschungsprojekt bekannt gegeben Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell je Forschungsprojekt bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "M.Sc. Applied Cognitive and Media Science (Social Media and Professional Communication), PO19 - M-KM(SMPK)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/479/detail", "id": "479", "type": "StudyCourse"}}, "Bachelorarbeit (KOMEDIA)": {"name": "Bachelorarbeit (KOMEDIA)", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/987/detail", "id": "987", "description": {"de": "Beschreibung: Die Bachelor-Arbeit schließt die wissenschaftliche Ausbildung im Bachelor-Studiengang Angewandte Kognitions- und Medienwissenschaft ab. Über einen Zeitraum von 12 Wochen wird selbständig unter wissenschaftlicher Betreuung ein Thema bearbeitet, welches an die Grundlagen und neuen Forschungsergebnisse des jeweiligen Fachgebiets aus der Informatik bzw. Psychologie angelehnt ist.\r\nDie Ausrichtung der Arbeit kann dabei theoretisch, empirisch oder praktisch sein. Bei der inhaltlichen Ausgestaltung werden der Kandidatin/dem Kandidaten genügend Freiräume eingeräumt. Im Rahmen des begleitenden Kolloquiums stellen die Studierenden Zwischen- und Endergebnisse ihrer Bachelor-Arbeit vor und beteiligen sich an Diskussionen über andere vorgestellte Bachelor-Arbeiten. Lernziele: Mit der Bachelor-Arbeit zeigen die Studierenden, dass sie in der Lage sind, innerhalb einer vorgegebenen Frist ein Problem der Angewandten Kognitions- und Medienwissenschaft selbständig auf der Grundlage der bis dahin im Bachelor-Studiengang erzielten Qualifikationen zu bearbeiten. Im Rahmen des Kolloquiums lernen die Studierenden, Zwischen- und Endergebnisse innerhalb einer festgesetzten Zeitdauer verständlich zu präsentieren. Sie wenden mit der Anfertigung der Bachelor-Arbeit ihre wissenschaftliche Reflexionskompetenz an. Literatur: Wird individuell bekannt gegeben Vorleistung: Zur Bachelor-Arbeit kann nur zugelassen werden, wer insgesamt 126 ECTS-Credits der ersten vier Semester des Bachelor-Studiums erworben hat, sowie eines der beiden Praxisprojekte erfolgreich durchgeführt hat. Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Grundlagen des Marketings": {"name": "Grundlagen des Marketings", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/1005/detail", "id": "1005", "description": {"de": "Beschreibung: \r\nGegenstandsbereiche des Marketing\r\n\r\nMarketingverständnis\r\nMarketingkonzeptionierungsprozess\r\n\r\n\r\nInformationsgrundlagen des Marketing\r\n\r\nMarktforschung\r\nNachfrageverhalten\r\n\r\n\r\nMarketing-Strategien\r\n\r\nMarketing-Ziele und Abgrenzung\r\nEntscheidungsfelder der Marketing-Strategien\r\nProzess des strategischen Marketing\r\n\r\n\r\nMarketing-Instrumente\r\n\r\nFestlegung der Marketing-Instrumente\r\nProdukt- und Programmpolitik\r\nPreispolitik\r\nKommunikationspolitik\r\nDistributionspolitik\r\nMarketing-Mix\r\n\r\n Lernziele: Ziel der Veranstaltung ist es, den Studierenden einen grundlegenden Überblick über das Fach Marketing zu verschaffen. Die Marketingwissenschaft beschäftigt sich mit dem Zustandekommen von Austauschprozessen zwischen Anbietern und Nachfragern und gibt Unternehmen Hinweise zur optimalen Ausgestaltung von Markttransaktionen. Ein solcher Austausch von Leistung und Gegenleistung – üblicherweise Ware gegen Geld – kommt in der Regel nur dann zustande, wenn beide Transaktionspartner sich danach subjektiv besser stellen als vorher. Das Management eines Unternehmens muss demnach einerseits verstehen, wie die Bedürfnisse und Anforderungen des Nachfragers an das Leistungsangebot bzw. die angebotene Problemlösung aussehen. Andererseits operieren Unternehmen nicht im luftleeren Raum, sondern stehen üblicherweise mit nationalen und internationalen Konkurrenten im Wettbewerb. Daher kommt es besonders darauf an, ein aus Sicht des Kunden überlegenes Leistungsangebot zu offerieren und gleichzeitig unterhalb der Kosten der Konkurrenz zu produzieren. Auf Basis dieser Überlegungen werden in der Veranstaltung neben den Informationsgrundlagen (Marktforschung und Käuferverhalten) Ansatzpunkte des strategischen Marketing sowie die Implementierung der Marketingphilosophie in die Unternehmensführung diskutiert. Zudem behandelt die Veranstaltung die vier klassischen Marketinginstrumente Produkt-, Preis-, Distributions- und Kommunikationspolitik und deren Kombination im so genannten Marketing-Mix. Literatur: \r\nEsch, F.-R./Herrmann, A./Sattler, H. (2008): Marketing, 2. ed. München: Vahlen.\r\nHomburg, C./Krohmer, H. (2009): Marketingmanagement, 3. ed. Wiesbaden: Gabler.\r\nMeffert, H./Burmann, C./Kirchgeorg, M. (2008): Marketing, 10. ed. Wiesbaden: Gabler.\r\nKotler, P./Keller, K. L./Bliemel, F. (2007): Marketing-Management, 12. ed. München: Pearson Studium.\r\nNieschlag, R./Dichtl, E./Hörschgen, H. (2002): Marketing, 19. ed. Berlin: Duncker &amp; Humblot.\r\nBecker, J. (2009): Marketing-Konzeption, 8. ed. Berlin: Vahlen.\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: \r\nEsch, F.-R./Herrmann, A./Sattler, H. (2008): Marketing, 2. ed. München: Vahlen.\r\nHomburg, C./Krohmer, H. (2009): Marketingmanagement, 3. ed. Wiesbaden: Gabler.\r\nMeffert, H./Burmann, C./Kirchgeorg, M. (2008): Marketing, 10. ed. Wiesbaden: Gabler.\r\nKotler, P./Keller, K. L./Bliemel, F. (2007): Marketing-Management, 12. ed. München: Pearson Studium.\r\nNieschlag, R./Dichtl, E./Hörschgen, H. (2002): Marketing, 19. ed. Berlin: Duncker &amp; Humblot.\r\nBecker, J. (2009): Marketing-Konzeption, 8. ed. Berlin: Vahlen.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Praxisprojekt 2": {"name": "Praxisprojekt 2", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/126/detail", "id": "126", "description": {"de": "Beschreibung: Das Praxisprojekt ist eine Einheit bestehend aus einem Seminaranteil, in dem die Literaturgrundlage zu der Aufgabenstellung des Praxisprojekts bearbeitet wird und einem praktischen Teil, der die eigenverantwortliche Bearbeitung der anwendungsorientierten Aufgabenstellung umfasst. Die Studierenden erstellen in einer Gruppe von bis zu 10 Personen ein Produkt, das an das Forschungs- und Lehrgebiet des jeweils die Veranstaltung ausrichtenden Lehrstuhls angelehnt ist (wechselnde Themenstellungen). Dabei werden über den Zeitraum eines Semesters wichtige Inhalte aus den Grundlagen und Anwendungsfächern der Informatik sowie der Psychologie exemplarisch an einem konkreten Szenario angewendet. Es werden grundlegende Konzepte aus den jeweiligen Forschungsgebieten der Lehrstühle prototypisch realisiert. Lernziele: Im Laufe des Praxisprojektes lernen die Studierenden typische Methoden und Werkzeuge aus unterschiedlichen Bereichen von Informatik und Psychologie kennen und üben diese ein. Ferner lernen die Studierenden außerfachliche Methoden der Gruppenarbeit zu beherrschen, wie die Arbeitsorganisation, die Diskussion der weiteren Vorgehensweise, das Treffen von Absprachen und die Präsentation von Ergebnissen. Durch gemeinsames Arbeiten an einer komplexen Aufgabenstellung, durch die Zuweisung und Lösung von Teilaufgaben durch Untergruppen und anschließender Fusion der Ergebnisse wird auf die in der späteren Berufspraxis maßgebliche arbeitsteilige Vorgehensweise vorbereitet. Literatur: Wird individuell je Projekt bekannt gegeben Vorleistung: \r\nMethodologie psychologischer Forschung\r\nAnwendung psychologischer Forschungsmethoden\r\nInformatikgrundlagen\r\nGrundlegende Programmiertechniken\r\n Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell je Projekt bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Grundlagen des Personalmanagements für interdisziplinäre Studiengänge": {"name": "Grundlagen des Personalmanagements für interdisziplinäre Studiengänge", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/1007/detail", "id": "1007", "description": {"de": "Beschreibung: \r\nGrundbegriffe und Grundtatbestände\r\nKernprobleme und Einflussfaktoren auf die Personalbedarfsplanung\r\nGlobale und detaillierte Verfahren der Personalbedarfsermittlung\r\nZiele, Aufgaben sowie Methoden der Personalbeschaffung\r\nZeitarbeit als ausgewählte Form der Personalbeschaffung\r\nInstrumentarium zur Personalauswahl\r\nMaßnahmen der Personalfreisetzung\r\nArbeitsrechtliche Vorschriften bei Massenentlassungen und Betriebsänderungen\r\nQualitative sowie quantitative Zuordnungsproblematiken im Rahmen der Personaleinsatzplanung\r\n Lernziele: Das Personalmanagement stellt eine wichtige Unterstützungsfunktion des betrieblichen Leistungsprozesses dar. Ziel dieser Veranstaltung ist es, die Instrumente der Personalfunktion vorzustellen. Dazu gehört zunächst, die Aufgaben und Ziele zu verdeutlichen. Darüber hinaus sollen die in den einzelnen Bereichen anwendbaren Methoden herausgearbeitet werden. Die Studierenden sollen durch den Besuch der Veranstaltung in die Lage versetzt werden, mit obigen Begriffen, Zielen und Verfahren sicher umzugehen. Literatur: \r\nJung, H. (2008): Personalwirtschaft, 8. Aufl. München: Oldenbourg.\r\nJung, H. (2008): Arbeits- und Übungsbuch Personalwirtschaft, 2. Aufl. München: Oldenbourg.\r\nStock-Homburg, R. (2008): Personalmanagement, 1. Aufl., Wiesbaden: Gabler.\r\nHoltbrügge, D. (2007): Personalmanagement, 3. Aufl., Berlin et al.: Springer.\r\nBerthel, J./Becker, F. (2007): Personalmanagement, 7. Aufl. Stuttgart: Schaeffer-Poeschel.\r\nOechsler, W.A. (2006): Personal und Arbeit - Grundlagen des Human Resource Management und der Arbeitgeber-Arbeitnehmer-Beziehungen, 8. Aufl. München; Wien: Oldenbourg.\r\nWehling, M. (2001): Fallstudien zu Personal und Unternehmensführung. München; Wien: Oldenbourg.\r\nAlewell, D. (1995): Personalbedarfsrechnung. In: Das Wirtschaftsstudium, 24. Jg. (1): 43-48.\r\nFriedrich, C./Martin, S. (2004): Personalwirtschaftliche Wirkungen von Zeitarbeit- Eine theoretische Analyse des Kooperations- und Leistungsverhaltens beim Einsatz von Leih- im Vergleich zu Normalarbeitnehmern. In: Zeitschrift für Personalforschung, 18. Jg. (2): 207-221.\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: \r\nJung, H. (2008): Personalwirtschaft, 8. Aufl. München: Oldenbourg.\r\nJung, H. (2008): Arbeits- und Übungsbuch Personalwirtschaft, 2. Aufl. München: Oldenbourg.\r\nStock-Homburg, R. (2008): Personalmanagement, 1. Aufl., Wiesbaden: Gabler.\r\nHoltbrügge, D. (2007): Personalmanagement, 3. Aufl., Berlin et al.: Springer.\r\nBerthel, J./Becker, F. (2007): Personalmanagement, 7. Aufl. Stuttgart: Schaeffer-Poeschel.\r\nOechsler, W.A. (2006): Personal und Arbeit - Grundlagen des Human Resource Management und der Arbeitgeber-Arbeitnehmer-Beziehungen, 8. Aufl. München; Wien: Oldenbourg.\r\nWehling, M. (2001): Fallstudien zu Personal und Unternehmensführung. München; Wien: Oldenbourg.\r\nAlewell, D. (1995): Personalbedarfsrechnung. In: Das Wirtschaftsstudium, 24. Jg. (1): 43-48.\r\nFriedrich, C./Martin, S. (2004): Personalwirtschaftliche Wirkungen von Zeitarbeit- Eine theoretische Analyse des Kooperations- und Leistungsverhaltens beim Einsatz von Leih- im Vergleich zu Normalarbeitnehmern. In: Zeitschrift für Personalforschung, 18. Jg. (2): 207-221.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Praxisprojekt 1": {"name": "Praxisprojekt 1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/125/detail", "id": "125", "description": {"de": "Beschreibung: Das Praxisprojekt ist eine Einheit bestehend aus einem Seminaranteil, in dem die Literaturgrundlage zu der Aufgabenstellung des Praxisprojekts bearbeitet wird, und einem praktischen Teil, der die eigenverantwortliche Bearbeitung der anwendungsorientierten Aufgabenstellung umfasst. Die Studierenden erstellen in einer Gruppe von bis zu 10 Personen ein Produkt, das an das Forschungs- und Lehrgebiet des jeweils die Veranstaltung ausrichtenden Lehrstuhls angelehnt ist (wechselnde Themenstellungen). Dabei werden über den Zeitraum eines Semesters wichtige Inhalte aus den Grundlagen und Anwendungsfächern der Informatik sowie der Psychologie exemplarisch an einem konkreten Szenario angewendet. Es werden grundlegende Konzepte aus den jeweiligen Forschungsgebieten der Lehrstühle prototypisch realisiert. Lernziele: Im Laufe des Praxisprojektes lernen die Studierenden typische Methoden und Werkzeuge aus unterschiedlichen Bereichen von Informatik und Psychologie kennen und üben diese ein. Ferner lernen die Studierenden außerfachliche Methoden der Gruppenarbeit zu beherrschen, wie die Arbeitsorganisation, die Diskussion der weiteren Vorgehensweise, das Treffen von Absprachen und die Präsentation von Ergebnissen. Durch gemeinsames Arbeiten an einer komplexen Aufgabenstellung, durch die Zuweisung und Lösung von Teilaufgaben durch Untergruppen und anschließender Fusion der Ergebnisse wird auf die in der späteren Berufspraxis maßgebliche arbeitsteilige Vorgehensweise vorbereitet. Literatur: Wird individuell je Projekt bekannt gegeben Vorleistung: \r\nMethodologie psychologischer Forschung\r\nAnwendung psychologischer Forschungsmethoden\r\nInformatikgrundlagen\r\nGrundlegende Programmiertechniken\r\n Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Wird individuell je Projekt bekannt gegeben Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Mensch-Computer Interaktion": {"name": "Mensch-Computer Interaktion", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/80/detail", "id": "80", "description": {"de": "Beschreibung: Die Vorlesung behandelt Modelle, Methoden und Techniken der Mensch-Computer-Interaktion und führt in ein systematisches Vorgehen zur nutzer- und aufgabenangemessenen Gestaltung interaktiver Systeme ein. Sie führt in die psychologischen Grundlagen der Mensch-Computer-Interaktion ein und stellt die Hardware- und Softwarekomponenten moderner User Interfaces vor. Weiterhin werden Methoden zur Evaluation der Gebrauchstauglichkeit und des Nutzererlebens behandelt.  Inhalte im Einzelnen: - Modelle und Gestaltungsprinzipien der Mensch-Computer-Interaktion - Psychologische Grundlagen und kognitive Modelle - Ein- und Ausgabegeräte incl. aktueller Techniken wie Toucheingaben und tangibler Interfaces - Interaktionstechniken (u.a. graphisch-interaktive Systeme, natürlichsprachliche Interaktion, gestische Interaktion) - Nutzerorientierte Entwicklungsprozesse, Usability Engineering - Aufgabenanalyse - Konzeptueller Entwurf von Benutzungsschnittstellen - Navigationsentwurf (incl. Webnavigation) - Auswahl und Einsatz von Interaktionsobjekten - Visuelle Gestaltung von Nutzerschnittstellen, - Prototypingmethoden und -tools - Evaluationsverfahren für Benutzungsschnittstellen - Barrierefreie Gestaltung von Systemen - Organisatorische und wirtschaftliche Aspekte des Usability Engineering Lernziele: Die Studierenden können die wesentlichen Konzepte, Modelle und Techniken der Mensch-Computer-Interaktion in ihrem Zusammenhang darstellen und erläutern. Sie sind mit Gestaltungsfragen unterschiedlicher Interaktionsformen wie graphische direkte Manipulation oder sprachbasierten Schnittstellen vertraut und können diese in eigenen Entwurfsarbeiten anwenden. Sie sind fähig, unter Anwendung erprobter Methoden des Usability Engineering systematisch Benutzungsschnittstellen zu entwerfen und diese prototypisch zu realisieren. Weiterhin können sie die Gebrauchstauglichkeit interaktiver Systeme mit Hilfe gängiger Evaluationsverfahren untersuchen und beurteilen. Literatur: - Preim, B., &amp; Dachselt, R. (2010). Interaktive Systeme - Band 1: Grundlagen, Graphical User Interfaces, Informationsvisualisierung. 2. Aufl., Heidelberg: Springer. - van Duyne, D. K.; Landay, J. A. &amp; Hong, J. I. (2007): The Design of Sites - Patterns, Principles and Processes for Crafting a Customer-Centered Web Experience. 2nd edition, Boston: Addison-Wesley - Dix, A.; Finlay, J.; Abowd, G. &amp; Beale, R. (2004): Human-Computer-Interaction. 3rd edition, Prentice Hall - Rosson, M.B. &amp; Carroll, J. (2002): Usability Engineering. Morgan Kaufmann Publishers.  Vorleistung:  Infolink:  Bemerkung: Grundkenntnisse in GUI-Programmierung in Java und HTML sind hilfreich, werden aber nicht vorausgesetzt.", "en": "Description: The lecture addresses models, methods and techniques of human computer interaction and introduces systematically procedure for user and task appropriate design of interactive systems. The lecture introduces the psychological basics of human computer interaction and presents the hardware and software components of modern user interfaces. Furthermore the methods for evaluation of usability and user experience are handled.  Content in detail: - Models and design principles of human computer interaction - Psychological basics and cognitive models - Input and output devices including current techniques like touch input and tangible interfaces - Interaction technology (inter alia, graphic-interactive systems, natural language interaction, gestural interaction) - User-oriented development process, usability engineering - Job analysis - Conceptual design of user interfaces - Navigation design( including web-navigation) - Selection and use of interaction objects - Visual design of user interfaces, visualization of information - Evaluation method for user interfaces - Barrier-free design of systems - Organizational and economical aspects of usability engineering  Learning Targets: The students can present and explain the basic concepts, models and techniques of human computer interaction in their context. They know the design question of different interaction forms as graphical direct manipulation or language based interfaces and they can use them in their own concept work. They can design user interfaces systematically and put them into practice by using approved methods of usability engineering. Furthermore they can examine and evaluate the usability of an interactive system with the help of established evaluation methods. Literature: - Preim, B., &amp; Dachselt, R. (2010). Interaktive Systeme - Band 1: Grundlagen, Graphical User Interfaces, Informationsvisualisierung. 2. Aufl., Heidelberg: Springer. - van Duyne, D. K.; Landay, J. A. &amp; Hong, J. I. (2007): The Design of Sites - Patterns, Principles and Processes for Crafting a Customer-Centered Web Experience. 2nd edition, Boston: Addison-Wesley - Dix, A.; Finlay, J.; Abowd, G. &amp; Beale, R. (2004): Human-Computer-Interaction. 3rd edition, Prentice Hall - Rosson, M.B. &amp; Carroll, J. (2002): Usability Engineering. Morgan Kaufmann Publishers.  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Grundlagen der Wirtschaftspsychologie": {"name": "Grundlagen der Wirtschaftspsychologie", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/102/detail", "id": "102", "description": {"de": "Beschreibung: Die Veranstaltung thematisiert die folgenden Aspekte wirtschaftlichen Erleben und Verhaltens:\r\n\r\nEinführung in die Wirtschaftspsychologie\r\nEntscheidungen und Entscheidungsanomalien\r\nAlltagsverständnis von Ökonomie\r\nÖkonomische Entscheidungen in privaten Haushalten\r\nAbsatzpolitik von Unternehmern\r\nArbeitsmärkte\r\nFinanzmärkte\r\nPsychologie des Geldes\r\nWohlstand und Wohlbefinden\r\n Lernziele: Die Studierenden erhalten einen Überblick über wirtschaftspsychologischen Themen und lernen wirtschaftspsychologische Themenfelder kennen. Dabei kommen Theorien aus der Kognitions-, Motivations- und Sozialpsychologie im Kontext wirtschaftlichen Handelns zur Anwendung. Literatur: \r\nKirchler, E.M. (2011). Wirtschaftpsychologie. Individuum, Gruppen, Märkte, Staat. Göttingen: Hogrefe.\r\nMoser, K. (Hrsg.) (2015). Wirtschaftspsychologie (2. Aufl.). Berlin: Springer\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: \r\nKirchler, E.M. (2011). Wirtschaftpsychologie. Individuum, Gruppen, Märkte, Staat. Göttingen: Hogrefe.\r\nMoser, K. (Hrsg.) (2015). Wirtschaftspsychologie (2. Aufl.). Berlin: Springer\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Grundlagen der Medienpsychologie": {"name": "Grundlagen der Medienpsychologie", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/101/detail", "id": "101", "description": {"de": "Beschreibung: Diese Veranstaltung knüpft an die Inhalte der „Grundlagen der Sozialpsychologie“ aus dem Modul „Sozialpsychologie“ an, indem sie das menschliche Erleben und Verhalten im Umgang mit Medien anhand folgender Themen herausarbeitet:\r\n\r\nGeschichte der Medienpsychologie\r\nMotive (Uses and Gratification, Selective exposure, mood management)\r\nNutzungsmuster: Rezeptionsmodalitäten\r\nKognitive Medienwirkungen (Wissensklufthypothese, Agenda Setting, Kultivierungshypothese, Hostile Media Effect)\r\nEmotionale Medienwirkungen\r\nSoziale Medienwirkungen (Parasoziale Interaktion, soziale Vergleichsprozesse, Schweigespirale, Two-step-flow)\r\nVerhaltensbezogene Medienwirkungen (Medien und Gewalt)\r\n Lernziele: Diese Veranstaltung versetzt die Studierenden in die Lage, die unterschiedlichen in der Psychologie existierenden Zugänge zu dem Themenbereich Medien aufzuzeigen, zu erklären und zu bewerten. Speziell im Hinblick auf die so genannten „Neuen Medien“ sind die Studierenden in der Lage, sich durch die Kenntnis der unterschiedlichen in der Medienpsychologie genutzten Methoden berufsrelevante Grundlagen zu verschaffen. Literatur: \r\nMangold, R.; Vorderer, P. &amp; Bente, G. (2004). Lehrbuch der Medienpsychologie. Göttingen, Bern, Toronto, Seattle: Hogrefe.\r\nKrämer, N. C., Schwan, S., Unz, D. &amp; Suckfüll, M. (2008). Medienpsychologie. Schlüsselbegriffe und Konzepte. Stuttgart: Kohlhammer.\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: \r\nMangold, R.; Vorderer, P. &amp; Bente, G. (2004). Lehrbuch der Medienpsychologie. Göttingen, Bern, Toronto, Seattle: Hogrefe.\r\nKrämer, N. C., Schwan, S., Unz, D. &amp; Suckfüll, M. (2008). Medienpsychologie. Schlüsselbegriffe und Konzepte. Stuttgart: Kohlhammer.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Experimentelle Methoden": {"name": "Experimentelle Methoden", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/97/detail", "id": "97", "description": {"de": "Beschreibung: Die Veranstaltung umfasst eine Vorlesung, eine Übung, sowie ein Experimentalpraktikum zu den „Experimentellen Methoden“ der Psychologie. In der Vorlesung werden Kenntnisse zu experimentellen Forschungsmethoden in der Psychologie vermittelt. Dabei werden alle Schritte einer empirisch-experimentellen Forschungsarbeit besprochen, d.h. die Hypothesengenerierung, die Planung und Durchführung eines Experimentes, die Datenauswertung, sowie die Interpretation und Kommunikation wissenschaftlicher Ergebnisse. In der Übung werden die Inhalte aus der Vorlesung vertieft und praktische Fertigkeiten entlang des psychologischen Forschungsprozesses geübt. Im Experimentalpraktikum arbeiten sich die Studierenden in ein psychologisches Forschungsthema ein und planen eine Studie, die sie als Versuchsleiter durchführen, auswerten und wissenschaftlich kommunizieren.\r\nThemen:\r\nGrundlagen empirisch-psychologischer Forschung, Ethik in der Psychologie, die experimentelle Methode, Hypothesen, Planung von Experimenten, Techniken experimenteller Kontrolle, Durchführung Experimenten, Datenauswertung, Dateninterpretation, wissenschaftliche Kommunikation. Lernziele: Die Studierenden verfügen über Grundlagenwissen zum Thema experimentelle Forschungsmethoden in der Psychologie und über wissenschaftliche Reflektionskompetenz. Sie sind in der Lage, empirische und experimentelle Forschungsmethoden anzuwenden und verfügen damit über die Voraussetzung, Fachpublikationen zu lesen und zu bewerten, sowie eigenständig Experimente zu planen, durchzuführen, auszuwerten und zu kommunizieren. Literatur: - Bortz, J. &amp; Döring, N. (2006). Forschungsmethoden und Evaluation für Human- und Sozialwissenschaftler (4. Aufl.). Berlin: Springer.\r\n- Reiß, S. &amp; Sarris, V. (2012). Experimentelle Psychologie. München: Pearson. Vorleistung: Einführung in die Methodenlehre / Statistik I, Inferenzstatistik / Unbenotete Versuchspersonenstunde Infolink:  Bemerkung: ", "en": "Description: The course comprises a lecture, an exercise and an experimental laboratory course on the ‘experimental methodologies’ in the field of psychology. Within the lecture, knowledge about experimental research methods in the field of psychology is imparted. In doing so every step of an empirical-experimental research paper gets reviewed, viz. the generation of hypotheses, the planning and conduction of an experiment, the data evaluation as well as the interpretation and communication of scientific results.\r\nDuring the exercise the lecture’s contents will be deepened and practical capabilities regarding the psychological research process will be practiced. During the experimental laboratory course students familiarize themselves with a research topic and design a study, which they conduct, analyze and scientifically communicate in the role of an examiner.\r\nTopics:\r\nFoundations of empirical-psychological research, ethics in the field of psychology, experimental methodologies, hypotheses, experimental designs, techniques of experimental control, conduction of experiments, data analysis, data interpretation, scientific communication. Learning Targets: Students gain fundamental knowledge about experimental research methods relevant in the field of psychology and about the competence of reflectance in a scientific context. They are able to apply empirical and experimental research methods and therefore possess the necessary requirements to read and evaluate specialist publications and to independently design, conduct, analyze and communicate experiments. Literature: - Bortz, J. &amp; Döring, N. (2006). Forschungsmethoden und Evaluation für Human- und Sozialwissenschaftler (4. Aufl.). Berlin: Springer.\r\n- Reiß, S. &amp; Sarris, V. (2012). Experimentelle Psychologie. München: Pearson. Pre-Qualifications: Introduction to Methodology / Statistics I, Inferential Statistics, Ungraded credit for participating as a subject Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Statistik II: Inferenzstatistik": {"name": "Statistik II: Inferenzstatistik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/91/detail", "id": "91", "description": {"de": "Beschreibung: In dieser Veranstaltung wird ein vertiefter Überblick über die wichtigsten statistischen Methoden gegeben, die auf der Basis von Stichprobendaten Hypothesen testen, allgemeingültige Aussagen formulieren oder Vorhersagen ermöglichen.\r\nDie Vorlesung vermittelt die Hintergründe und Zusammenhänge unterschiedlicher Analyseverfahren (ein- und mehrfaktorielle Varianzanalyse mit und ohne Messwiederholung, Regressionsanalyse, Kovarianzanalyse, Mediatoranalyse, Moderatoranalyse, Faktorenanalyse, non-parametrische Verfahren und weiterführende multivariate Verfahren).\r\nIn der Übung werden die Inhalte aus der Vorlesung diskutiert und die Anwendung der Verfahren eingeübt.\r\n  Lernziele: Mit dem Abschluss dieser Veranstaltung haben die Studierenden vertiefte inferenzstatistische Fachkenntnisse erworben. Sie können die Berechnungen verschiedener varianz- und regressionsanalytischer Verfahren auf Basis des Allgemeinen Linearen Modells nachvollziehen und kennen Hintergründe und Vorgehensweisen weiterer bedeutsamer Analyseverfahren (z.B. Faktorenanalyse, non-parametrische Verfahren).\r\nDie Studierenden sind in der Lage, für unterschiedliche Forschungsfragen, Hypothesen und Operationalisierungen die Angemessenheit möglicher Analyseverfahren zu bewerten sowie ein geeignetes Verfahren auszuwählen und anzuwenden.\r\nHinsichtlich aller Themen der Veranstaltung werden einerseits theoretische Kenntnisse erworben, andererseits Fertigkeiten zur Anwendung dieser Kenntnisse mithilfe geeigneter Statistik-Software erlangt.\r\n  Literatur: - Bortz, J. &amp; Schuster, C. (2010). Statistik für Human-und Sozialwissenschaftler. Berlin: Springer.\r\n- Leonhart, R. (2013). Lehrbuch Statistik (3. Aufl.). Bern: Huber. Vorleistung:  Infolink:  Bemerkung: alter Titel: Inferenzstatistik", "en": "Description: In this course an in-depth overview of the most important statistical methods is given, which test hypotheses on the basis of sample data, formulate generally valid statements or make predictions possible.\r\nThe lecture provides the background and interrelations of different analysis methods (one-way and factorial analysis of variance with and without repeated measurement, regression analysis, covariance analysis, mediator analysis, moderator analysis, factor analysis, non-parametric methods and advanced multivariate methods).\r\nDuring the tutorial the contents of the lecture will be discussed and the application of the methods will be practised. Learning Targets: By completing this course, students have acquired in-depth knowledge of inferential statistics. They are able to understand the calculations of various methods of variance and regression analysis based on the General Linear Model and know the background and procedures of other important analysis methods (e.g. factor analysis, non-parametric methods).\r\nThe students are able to evaluate the appropriateness of possible analytical methods for different research questions, hypotheses and operationalisations as well as to select and apply a suitable method.\r\nOn the one hand, theoretical knowledge is acquired with regard to all topics of the course, on the other hand, skills for the application of this knowledge are acquired with the aid of statistical software. Literature: - Bortz, J. &amp; Schuster, C. (2010). Statistik für Human-und Sozialwissenschaftler. Berlin: Springer.\r\n- Leonhart, R. (2013). Lehrbuch Statistik (3. Aufl.). Bern: Huber. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Mathematische Strukturen": {"name": "Mathematische Strukturen", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/90/detail", "id": "90", "description": {"de": "Beschreibung: Inhalt:\r\n- Grundlagen (Mengen, Relationen, Funktionen, Zahlentheorie)\r\n- Analysis (Stetigkeit, Ableitung von Funktionen, Kurvendiskussion)\r\n- Algebraische Strukturen (Monoide, Gruppen, Körper, Vektorräume)\r\n- Lineare Algebra\r\n- Kombinatorik Lernziele: Die Studierenden sollen gebräuchliche mathematische Strukturen kennenlernen und in die Lage versetzt werden, mit diesen umzugehen. Dabei sollen sie selbstständig formale Definitionen basierend auf Mengen- und Funktionsnotation verwenden und mit Hilfe grundlegender algebraischer Strukturen (Gruppen, Körper, Vektorräume) Berechnungen durchführen können. Außerdem lernen sie Methoden der Kombinatorik und üben Ableitung von Funktionen und Kurvendiskussion. Dabei geht es weniger darum, dass die Studierenden eigene Beweise führen, sondern darum, dass sie sicher mit den entsprechenden Methoden umgehen können. Literatur: - Harald Scheid, Wolfgang Schwarz: Elemente der Arithmetik und Algebra. Spektrum 2008\r\n- Lutz Warlich: Grundlagen der Mathematik für Studium und Lehramt: Mengen, Funktionen, Teilbarkeit, Kombinatorik, Wahrscheinlichkeit. Books on Demand, 1. Auflage (Juli 2006)\r\n- Angelika Steger: Diskrete Strukturen 1. Kombinatorik, Graphentheorie, Algebra. Springer 2007\r\n- Martin Aigner: Diskrete Mathematik. Vieweg+Teubner, 2006\r\n- Dirk Hachenberger: Mathematik für Informatiker, Addison-Wesley, 2005 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Content:\r\n- Foundations (sets, relations, functions, number theory)\r\n- Analysis (continuity, differentiation, curve sketching)\r\n- Algebraic stuctures (monoids, groups, fields, vector spaces)\r\n- Linear algebra\r\n- Combinatorics Learning Targets: Students shall learn about important mathematical structures and become able to work with them. They should use formal definitions based on set and function notation and perform computations with foundational algebraic structures (groups, fields, vector spaces). They learn methods of combinatorics and exercise differentiation of functions and curve sketching. The aim is less for the students to perform proofs themselves, but to be able to confidently work with the presented methods. Literature: - Harald Scheid, Wolfgang Schwarz: Elemente der Arithmetik und Algebra. Spektrum 2008\r\n- Lutz Warlich: Grundlagen der Mathematik für Studium und Lehramt: Mengen, Funktionen, Teilbarkeit, Kombinatorik, Wahrscheinlichkeit. Books on Demand, 1. Auflage (Juli 2006)\r\n- Angelika Steger: Diskrete Strukturen 1. Kombinatorik, Graphentheorie, Algebra. Springer 2007\r\n- Martin Aigner: Diskrete Mathematik. Vieweg+Teubner, 2006\r\n- Dirk Hachenberger: Mathematik für Informatiker, Addison-Wesley, 2005 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Allgemeine Psychologie: Motivation und Emotion": {"name": "Allgemeine Psychologie: Motivation und Emotion", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/95/detail", "id": "95", "description": {"de": "Beschreibung: Die Veranstaltung vermittelt Phänomene, Theorien, neurobiologische Grundlagen, sowie klassische und aktuelle Studien zu den Emotion und Motivation.\r\nThemen des Komplexes Emotion: Lerntheoretische, kognitive, evolutionspsychologische, Neuro- und psychophysiologische motionstheorien.\r\nThemen des Komplexes Motivation: Sexualität und sexueller Dimorphismus, Hunger und Durst, Instinkte und Triebe, Person-Umwelt-Bezug, Leistungsmotivation, Machtmotivation. Lernziele: Die Studierenden kennen allgemeinpsychologisches Grundlagenwissen, inklusiver der biologischen Korrelate, sind in der Lage, emotions-und motivationspsychologische Theorien auf Praxisfelder zu transferieren. Die Studierenden verfügen über eine wissenschaftliche Reflektionskompetenz. Literatur: - Meyer, W.-U., Schützwohl, A. &amp; Reisenzein, R. (2001-2003). Einführung in die Emotionspsychologie. Band I-III. Bern: Huber- Rheinberg, F. (2008). Motivation (7. Auflage). Stuttgart: Kohlhammer.- Pritzel, M., Brand, M. &amp; Markowitsch, H.J. (2003, 2009). Gehirn und Verhalten. Heidelberg: Spektrum Akademischer Verlag. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The course conveys phenomena, theories, neurobiological foundations as well as fundamental and current studies regarding the topics emotion and motivation.\r\nAspects in the complex of emotion: Learning-theoretical, cognitive, evolutionary-psychological, neuro- and psychophysiological emotion theories.\r\nAspects in the complex of motivation: Sexuality and sexual dimorphism, hunger and thirst, instincts and urges, person-environment-connection, achievement motivation and dominance motivation. Learning Targets: Students possess basic knowledge about general-psychological topics, including biological correlates and are able to apply cognitive-psychological theories to fields of practice. They own the competence of reflectance in a scientific context. Literature: - Meyer, W.-U., Schützwohl, A. &amp; Reisenzein, R. (2001-2003). Einführung in die Emotionspsychologie. Band I-III. Bern: Huber- Rheinberg, F. (2008). Motivation (7. Auflage). Stuttgart: Kohlhammer.- Pritzel, M., Brand, M. &amp; Markowitsch, H.J. (2003, 2009). Gehirn und Verhalten. Heidelberg: Spektrum Akademischer Verlag. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Einführung in die Volkswirtschaftslehre für interdisziplinäre Studiengänge": {"name": "Einführung in die Volkswirtschaftslehre für interdisziplinäre Studiengänge", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/100/detail", "id": "100", "description": {"de": "Beschreibung: Mikroökonomie\r\nTeil 1: Grundkonzepte der Volkswirtschaftslehre\r\nTeil 2: Markt- und Preistheorie\r\n\r\n\r\nElemente der Preisbildung\r\nKonsumtheorie\r\nProduktionstheorie\r\nMärkte und Preisbildung\r\nUnvollständiger WettbewerbTeil 1: Kreislaufanalyse\r\nMakroökonomie\r\nGrundlagen\r\nElementare Analyse mit Haushalten und Unternehmen\r\nErweiterung um Staat und Haushalte\r\nEx-post—Analyse versus ex-ante-Analyse\r\nTeil 2: Volkswirtschaftliche Gesamtrechnung VGR\r\nProduktion, Inlandsprodukt und Nationaleinkommen\r\n•    Einkommensentstehung, -verteilung und -verwendung\r\n•    Vermögen und Finanzierung\r\n•    Grundkonzepte der makroökonomischen Analyse\r\nTeil 3: Märkte für Produktionsfaktoren\r\n•    Produktion und Produktionsfaktoren\r\n\r\n\r\n•           Güterangebot und Einkommensverteilung Lernziele: Nach erfolgreichem Beenden dieser Veranstaltung sind die Studiereden in der Lage,\r\n\r\nMikroökonomische und makroökonomische Modelle zu erklären\r\nAufbau und Methodik der Volkswirtschaftslehre, sowie ihre Stellung zu anderen wirtschafts- und gesellschaftswissenschaftlichen Disziplinen darzustellen\r\nGrundzüge der Haushalts- Unternehmens- und Markt-theorie zu erläutern\r\n\r\n•           Grundzüge der Kreislaufanalyse, Volkswirtschaftlichen Gesamtrechnung und dem klassischen Modell zu skizzieren Literatur: \r\nVarian, H. R., Intermediate Microeconomics, 8th ed., W. W. Norton, 2009.\r\nJoseph E. Stiglitz and Carl E. Walsh, Economics, 4th ed., W. W. Norton, 2006.\r\nFrenkel, Michael und Klaus Dieter John, Volkswirtschaftliche Gesamtrechnug, 6. Auflage, Franz Vahlen, 2006.\r\nMankiw, Gregory N., Macroeconomics, 6. Auflage, Worth Publishers, 2006.\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: \r\nVarian, H. R., Intermediate Microeconomics, 8th ed., W. W. Norton, 2009.\r\nJoseph E. Stiglitz and Carl E. Walsh, Economics, 4th ed., W. W. Norton, 2006.\r\nFrenkel, Michael und Klaus Dieter John, Volkswirtschaftliche Gesamtrechnug, 6. Auflage, Franz Vahlen, 2006.\r\nMankiw, Gregory N., Macroeconomics, 6. Auflage, Worth Publishers, 2006.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Digitale Medien": {"name": "Digitale Medien", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/66/detail", "id": "66", "description": {"de": "Beschreibung: Die Veranstaltung behandelt drei grundlegende Gebiete der Entwicklung von Multimedia-Inhalten: 1. Grundlagen digitaler Medien: Digitale Repräsentation, Hardware, Netzwerke, Computergrafik (Vektorgrafik, Bitmapgrafik), Farbe, Video, Animation, Sound, Buchstaben, Fonts, Zeichen, Text. 2. Entwicklungsprozess für Medien-Projekte: Grundlagen des Multimedia-Entwicklungsprozesses, Usability Engineering, Projektmanagement, Designdokumente, Projektpläne, Projektierung, Analyse, Evaluation, Qualitätsmanagement, Bugtracking, Testing. 3. Medienkonzeption und Mediengestaltung: Bildgestaltung, Weblayout, Multimedia- Kommunikation, Interaktivität, Kreativität, Visualisierung, barrierefreies Design Lernziele: 1. Studierende erhalten grundlegende Kenntnisse über digitale Medien, deren Aufbau und Funktionsweise, sowie deren Grundbausteine Text, Grafik, Animation und Sound. 2. Sie lernen Entwicklungswerkzeuge und -methoden für Multimedia-Projekte kennen und sind in der Lage, Anwendungen wie multimediale Unterhaltungs-, Lern- und Informationssysteme zu projektieren, zu entwerfen und zu beurteilen. 3. Sie erlangen grundlegende praktische Fähigkeiten in der Mediengestaltung und der Entwicklung von Multimedia-Systemen. 4. Sie erwerben Fähigkeiten zum eigenständigen Bearbeiten von Entwicklungsaufgaben in einem Team. Literatur: - Butz/Hussmann/Malaka: Medieninformatik: Eine Einführung. Pearson, 2009. - Chapman/Chapman: Digital Multimedia, Wiley, 3rd ed., 2009. - Vorlesungsskript Vorleistung:   Infolink:  Bemerkung: ", "en": "Description: The course is focused on three main areas of the development of multimedia content: 1. Fundamentals of digital media: digital representation, hardware, networks, computer graphics (bitmap and vector graphics), color, video, animation, sound, letters, fonts, symbols, text. 2. Development process of media projects: multimedia development process basics, usability engineering, project management, design documents, project schedule, project planning, analysis, evaluation, quality assurance, bug tracking, testing. 3. Media conception and media design: art work, web layout, multimedia communication, interactivity, creativity, visualization, barrier-free design. Learning Targets: 1. Students learn about the basics of digital media, its composition and functionality as well as its basic modules text, graphics, animation and sound. 2. They become acquainted with development tools and methods of multimedia projects and have the ability to project, develop and evaluate applications like multimedia-based entertainment, learning and information systems. 3. Students acquire practical skills for media design and the development of multimedia systems. 4. They acquire abilities for completing developmental assignments independently in a team. Literature: - Butz/Hussmann/Malaka: Medieninformatik: Eine Einführung. Pearson, 2009. - Chapman/Chapman: Digital Multimedia, Wiley, 3rd ed., 2009. - Vorlesungsskript Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Wirtschaftsrecht": {"name": "Wirtschaftsrecht", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/123/detail", "id": "123", "description": {"de": "Beschreibung: Vornehmlich geht es darum, Konflikte beim vertraglichen Leistungsaustausch vorzustellen, und zwar in seinen praxis-relevanten Dimensionen: der verspäteten Erbringung einer Leistung, der Haftung für Schlechterfüllung sowie der Ansprüche auf Schadensersatz. Aus didaktischen Gründen erscheint es sinnvoll, diese Kategorien anhand einzelner Schuldverhältnisse, so z. B. an Konflikten im Rahmen von Kaufverträgen, zu verdeutlichen.  Lernziele: Die Studierenden kennen die Grundzüge des wirtschaftsbezogenen allgemeinen Rechts, insb. des Vertrags-, des Schuld- und des Haftungsrechts. Literatur: 1. Brox, Besonderer Teil des Schuldrechts, 15. Aufl., München 2002 2. Däubler, Einführung in das Recht, 3. Aufl., Hamburg 2002 Vorleistung:   Infolink:  Bemerkung: alter Titel: Einführung in das Wirtschaftsrecht", "en": "Description: The lecture conveys basic knowledge of civil commercial law. The main aim is to present the most important categories: freedom of contract, state of law, welfare state, capability to acquire and hold rights and duties, elements of conclusion of the contract, power of agency. Learning Targets: Students know the basics of business related law in general, including contract law, law of obligations and liability law. Literature: 1. Brox, Besonderer Teil des Schuldrechts, 15. Aufl., München 2002 2. Däubler, Einführung in das Recht, 3. Aufl., Hamburg 2002 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Statistik I: Einführung in die Methodenlehre": {"name": "Statistik I: Einführung in die Methodenlehre", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/96/detail", "id": "96", "description": {"de": "Beschreibung: In dieser Veranstaltung wird eine Einführung in die quantitativen Methoden der Psychologie gegeben. Die Vorlesung vermittelt grundlegende empirische Konzepte und Vorgehensweisen, die Beschreibung von Stichprobendaten (z.B. Maße der zentralen Tendenz, Maße der Dispersion) und einfache Verfahren zur Überprüfung von Zusammenhängen und Unterschieden (z.B. Korrelation, t-Test). In der Übung werden die Inhalte aus der Vorlesung anhand praktischer Beispiele vertieft und die Anwendung der Verfahren mithilfe geeigneter Statistik-Software eingeübt. Ergänzt wird die Veranstaltung durch die Teilnahme der Studierenden als Versuchspersonen an experimentellen Studien, durch die das in Vorlesung und Übung vermittelte Wissen anwendungsnah in verschiedenen Untersuchungskontexten gefestigt und ergänzt wird. Lernziele: Mit dem Abschluss dieser Veranstaltung verstehen die Studierenden grundlegende methodische Konzepte und Vorgehensweisen zu psychologischer Erkenntnisgewinnung, Messtheorie und klassischer Testtheorie. Sie können Versuchsdesigns, Hypothesen und Messmethoden bewerten und haben vertiefte Kenntnisse in der Beschreibung von Stichprobendaten und in einfachen inferenzstatistischen Verfahren. Hinsichtlich aller Themen der Veranstaltung werden einerseits theoretische Kenntnisse erworben, andererseits Fertigkeiten zur Anwendung dieser Kenntnisse mithilfe geeigneter Statistik-Software erlangt.\r\nDarüber hinaus erwerben die Studierenden praktisches Wissen über methodische Standards psychologischer Forschung und den Ablauf experimenteller Untersuchungen in unterschiedlichen Kontexten. Literatur: - Bortz, J. &amp; Schuster, C. (2010). Statistik für Human-und Sozialwissenschaftler. Berlin: Springer.\r\n- Leonhart, R. (2013). Lehrbuch Statistik (3. Aufl.). Bern: Huber.\r\n- Reiß, S. &amp; Sarris, V. (2012). Experimentelle Psychologie. München: Pearson. Vorleistung:  Infolink:  Bemerkung: alter Titel: Einführung in die Methodenlehre / Statistik 1", "en": "Description: This course provides an introduction to the quantitative methods of psychology. The lecture teaches basic empirical concepts and methods, the description of sample data (e.g. measures of central tendency, measures of dispersion) and simple procedures for examining relationships and differences (e.g. correlation, t-Test). In the tutorial, the contents of the lecture will be deepened by practical examples and the application of the methods will be practised using statistical software. The course is supplemented by the participation of the students as subjects in experimental studies, through which the knowledge obtained in lectures and tutorials is consolidated and supplemented in an application-oriented manner in various research contexts. Learning Targets: By completing this course, students will understand basic concepts and approaches of psychological knowledge acquisition, measurement theory and classical test theory. They can evaluate experimental designs, hypotheses and measurement methods and have in-depth knowledge of describing sample data and simple inferential statistical methods. On the one hand, theoretical knowledge is acquired with regard to all topics of the course, on the other hand, skills for the application of this knowledge are acquired with the aid of statistical software.\r\nIn addition, the students will acquire practical knowledge about methodological standards of psychological research and the process of experimental research in different contexts. Literature: - Bortz, J. &amp; Schuster, C. (2010). Statistik für Human-und Sozialwissenschaftler. Berlin: Springer.\r\n- Leonhart, R. (2013). Lehrbuch Statistik (3. Aufl.). Bern: Huber.\r\n- Reiß, S. &amp; Sarris, V. (2012). Experimentelle Psychologie. München: Pearson. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Einführung in die Betriebswirtschaftslehre für interdisziplinäre Studiengänge": {"name": "Einführung in die Betriebswirtschaftslehre für interdisziplinäre Studiengänge", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/98/detail", "id": "98", "description": {"de": "Beschreibung:  Lernziele: Nach erfolgreichem Beenden dieser Veranstaltung sind die Studierenden mit dem notwendigen betriebsökonomischen „Handwerkszeug“ ausgestattet. Insbesondere sind sie in der Lage,\r\n\r\ndie Betriebswirtschaft als Teildisziplin der Wirtschaftswissenschaft anzusehen, die einen Aspekt des menschlichen Handelns (Einkommensaspekt) betont.\r\n\r\n\r\nbreitgefächerten Überblick über die verschiedenen Tätigkeitsfelder der BWL zu erlangen, wobei theoretische Grundbegriffe und Modelle analysiert und kritisch reflektiert werden können. Hierbei spielen der Führungs-und Finanzprozess eine tragende Rolle.\r\n\r\ndas erlernte methodische und fachliche Grundwissen in Handlungsempfehlungen für\r\nUnternehmen umzusetzen. Literatur: \r\nBalderjahn, I./Specht, G.: Einführung in die Betriebswirtschaftslehre, 5. Aufl. Schäffer-Pöschel, Stuttgart\r\nBea, F.X./Dichtl, E./Schweitzer, M. (2002): Allgemeine Betriebswirtschaftslehre, 8.Aufl., Stuttgart 2002\r\nNeuss, W.: Einführung in die Betriebswirtschaftslehre, 4. Aufl. Mohr Siebeck, Tübingen\r\nPicot, A./Reichwald, R./Wigand, R.: Die grenzenlose Unternehmung, 3. Aufl., Wiesbaden 1998.\r\nSchierenbeck, H.: Grundzüge der Betriebswirtschaftslehre, 16. Aufl., München / Wien 2003.\r\nVahs, D./Schäfer-Kunz, J.: Einführung in die Betriebswirtschaft, 5. Aufl. Schäffer-Pöschel, Stuttgart.\r\nWöhe, G.: Einführung in die Betriebswirtschaftslehre, 23. , neu bearb. Aufl., München 2005.\r\n Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: \r\nBalderjahn, I./Specht, G.: Einführung in die Betriebswirtschaftslehre, 5. Aufl. Schäffer-Pöschel, Stuttgart\r\nBea, F.X./Dichtl, E./Schweitzer, M. (2002): Allgemeine Betriebswirtschaftslehre, 8.Aufl., Stuttgart 2002\r\nNeuss, W.: Einführung in die Betriebswirtschaftslehre, 4. Aufl. Mohr Siebeck, Tübingen\r\nPicot, A./Reichwald, R./Wigand, R.: Die grenzenlose Unternehmung, 3. Aufl., Wiesbaden 1998.\r\nSchierenbeck, H.: Grundzüge der Betriebswirtschaftslehre, 16. Aufl., München / Wien 2003.\r\nVahs, D./Schäfer-Kunz, J.: Einführung in die Betriebswirtschaft, 5. Aufl. Schäffer-Pöschel, Stuttgart.\r\nWöhe, G.: Einführung in die Betriebswirtschaftslehre, 23. , neu bearb. Aufl., München 2005.\r\n Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Informatische Grundlagen neuer Medien und Kommunikationstechniken": {"name": "Informatische Grundlagen neuer Medien und Kommunikationstechniken", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/92/detail", "id": "92", "description": {"de": "Beschreibung: Der Kurs bietet eine Einführung in die grundlegenden Konzepte und Methoden der Informatik mit besonderem Schwerpunkt auf Technologien und Anwendungen im Bereich der neuen Medien. Die behandelten Themen umfassen\r\n- Darstellung digitaler Informationen\r\n- Aufbau von Computersystemen\r\n- Betriebssysteme\r\n- Kommunikationsnetze, Internet\r\n- Daten- und Layoutbeschreibung im Web (XHTML und CSS)\r\n- Elementare Programmierkonzepte wie Variablen, Zuweisungen, Kontrollstrukturen und Funktionen und ihre Anwendung auf die Web-Programmierung\r\n- Grundlegende Algorithmen\r\n- Datenmodellierung und Datenbanksysteme Lernziele: Die Studierenden kennen die grundlegenden Konzepte und Techniken der Informatik und können diese im Kontext von Medien und Kommunikationstechnologien anwenden. Dazu gehören die Grundlagen der Informationsdarstellung, der Hard- und Software, ein allgemeines Verständnis der Architektur vernetzter Systeme und die Grundkonzepte der Programmierung. Die Studierenden sind in der Lage, die statischen und dynamischen Komponenten von grundlegenden Web-Anwendungen zu entwickeln. Literatur: - Gumm, H.-P. und Sommer, M.: Einführung in die Informatik. Oldenbourg-Verlag, 10. Aufl. 2013 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The course offers an introduction to the basic concepts and methods of computer science with a special focus on technologies and applications in the field of new media. Topics covered include- Representation of digital information - Structure of computer systems- Operating systems- Communication networks, Internet - Data and layout description languages for the Web (XHTML and CSS)-- Elementary programming concepts such as variables, assignments, control structures, and functions, and their application to Web programming- Basic algorithms- Data modeling and database systems Learning Targets: Students know and can apply the fundamental concepts and techniques of computer science in the context of new media and communication technologies. This includes basics of information representation, hardware and software, a general understanding of the architecture of networked systems and the basic concepts of programming. Students will be able to develop the static and dynamic components of basic Web applications. Literature: - Gumm, H.-P. und Sommer, M.: Einführung in die Informatik. Oldenbourg-Verlag, 10. Aufl. 2013 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Grundlagen der Sozialpsychologie": {"name": "Grundlagen der Sozialpsychologie", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/93/detail", "id": "93", "description": {"de": "Beschreibung: Es werden die folgenden, basalen Aspekte im Bereich der Sozialpsychologie behandelt:\r\n1. Gegenstand der Sozialpsychologie\r\n2. Soziale Kognition\r\n3. Soziale Perzeption\r\n4. Stereotyp und Vorurteil\r\n5. Interpersonelle Attraktion\r\n6. Einstellungen und Einstellungsänderung\r\n7. Selbst und Selbstwert\r\n8. Gruppenprozesse\r\n9. Konformität\r\n10. Prosoziales Verhalten\r\n11. Aggression\r\n12. Medienpsychologische Anwendungen sozialpsychologischer Konzepte Lernziele: Die Studierenden können psychologisches Grundwissen in Bereich sozialpsychologischer Theorie sowie den Bereichen der Angewandten Sozialpsychologie nennen, erläutern, analysieren, zuordnen und beurteilen. Sie sind ferner in der Lage, Fachpublikationen zu verstehen und zu bewerten, da sie die mit diesen Inhalten verbundenen Forschungsmethoden zu kennen und beurteilen können. Literatur: - Aronson, E.; Wilson, T.D. &amp; Akert, R.M. (2004). Sozialpsychologie. München: Pearson. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: - Aronson, E.; Wilson, T.D. &amp; Akert, R.M. (2004). Sozialpsychologie. München: Pearson. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Allgemeine Psychologie: Perzeption, Kognition und Handeln": {"name": "Allgemeine Psychologie: Perzeption, Kognition und Handeln", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/94/detail", "id": "94", "description": {"de": "Beschreibung: Die Veranstaltung vermittelt Phänomene, Theorien, neurobiologische Grundlagen, sowie klassische und aktuelle Studien zu den Themen:\r\nDie Psychologie als empirische Wissenschaft, Grundlagen der Neuroanatomie, Wahrnehmung, Aufmerksamkeit, Handeln und Motorik, Exekutive Funktionen, Lernen und Gedächtnis, Denken und Problemlösen, Entscheiden. Lernziele: Die Studierenden kennen allgemeinpsychologisches Grundlagenwissen, inklusive der biologischen Korrelate, können kognitionspsychologische Theorien auf Praxisfelder transferieren. Sie verfügen über eine wissenschaftliche Reflektionskompetenz. Literatur: - Schiebener &amp; Brand (2014). Allgemeine Psychologie 1. Stuttgart: Kohlhammer- Pritzel, M., Brand, M. &amp; Markowitsch, H.J. (2003, 2009). Gehirn und Verhalten. Heidelberg: Spektrum Akademischer Verlag.- Müsseler, J. (Hrsg.) (2008). Allgemeine Psychologie (2. Aufl.). Heidelberg: Spektrum Akademischer Verlag. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The course conveys phenomena, theories, neurobiological foundations as well as fundamental and current studies regarding the following topics:\r\nPsychology as an empirical science, foundations of neuroanatomy, perception, attention, behavior and motor skills, executive functions, learning and memory, thinking and problem solving, decision making. Learning Targets: Students possess basic knowledge about general-psychological topics, including biological correlates and are able to apply cognitive-psychological theories to fields of practice. They own the competence of reflectance in a scientific context. Literature: - Schiebener &amp; Brand (2014). Allgemeine Psychologie 1. Stuttgart: Kohlhammer- Pritzel, M., Brand, M. &amp; Markowitsch, H.J. (2003, 2009). Gehirn und Verhalten. Heidelberg: Spektrum Akademischer Verlag.- Müsseler, J. (Hrsg.) (2008). Allgemeine Psychologie (2. Aufl.). Heidelberg: Spektrum Akademischer Verlag. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Einführung in die Logik": {"name": "Einführung in die Logik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/89/detail", "id": "89", "description": {"de": "Beschreibung: Zunächst wird die Aussagenlogik behandelt (Wahrheitswerte, Operatoren, Syntax logischer  Ausdrücke, Äquivalenzrelationen, konjunktive Normalform, Resolution, Hornformeln, Markierungsalgorithmus).\r\nZur Veranschaulichung des Umgangs mit Hornformeln und als Vorbereitung für die Prädikatenlogik folgt dann eine kurze Einführung in Grundelemente des logischen Programmierens in Prolog. Danach wird die Prädikatenlogik mit Fokus auf dem Resolutionskalkül behandelt. Abschließend kann ein Einblick in Modallogik und Temporallogik gegeben sowie Anwendungen im Bereich der Künstlichen Intelligenz vorgestellt werden. Lernziele: Logik-Kalküle bilden die Grundlage für verschiedene Anwendungsbereiche der Informatik, z.B. in den Bereichen Datenbanksysteme oder Wissensrepräsentation. Die Studierenden sollen mit logikbasierten Verfahren vertraut gemacht werden und sollen verschiedene Verfahren und Kalküle zur Lösung von Grundaufgaben (wie Bestimmung von Modellen, Unerfüllbarkeit) anwenden können. Literatur: Kreuzer/Kühling: Logik für Informatiker. Pearson Studium, 2006\r\nSchöning: Logik für Informatiker. Spektrum-Verlag, 2000 (5. Auflage)\r\nWolfgang Ertl: Grundkurs Künstliche Intelligenz. Vieweg-Teubner, 2009 (2. Auflage) Vorleistung:  Infolink:  Bemerkung: ", "en": "Description:  Learning Targets:  Literature: Kreuzer/Kühling: Logik für Informatiker. Pearson Studium, 2006\r\nSchöning: Logik für Informatiker. Spektrum-Verlag, 2000 (5. Auflage)\r\nWolfgang Ertl: Grundkurs Künstliche Intelligenz. Vieweg-Teubner, 2009 (2. Auflage) Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Applied Cognitive and Media Science, PO14 - B-KM-14", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/21/detail", "id": "21", "type": "StudyCourse"}}, "Objektorientierte Programmierung Praktikum": {"name": "Objektorientierte Programmierung Praktikum", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/302/detail", "id": "302", "description": {"de": "Beschreibung: Im Praktikum werden wöchentlich kleine sowie mehrere größere Programmieraufgaben als Hausaufgaben gestellt, die den Stoff der zugehörigen Vorlesung und Übung berücksichtigen und abdecken. Inhaltlich beinhalten die Aufgaben die Verarbeitung von Daten in Dateien, zu erstellende Vererbungshierarchien und dynamische Listenstrukturen, die im Heap angelegt, durchlaufen und durchsucht werden müssen. Alle Aufgaben müssen selbständig gelöst und vollständig in C++ implementiert werden. Zugrunde gelegtes Vorgehensmodell ist jeweils das einfache Wasserfallmodell. Lernziele: Die Studierenden weiten ihre Programmierkenntnisse in C++ aus. Sie sind in der Lage mit Dateien zu arbeiten, Vererbungshierarchien zu modellieren, dynamische Datenstrukturen zu definieren und anzuwenden und kennen die Bedeutung von Klassendefinitionen als Schnittstellen. Literatur: siehe Literatur/see literature \"Fundamentals of Programming\"/\"Procedural Programming\"/\"Objektorientierte Programmierung in C++\". Vorleistung: Programmierkenntnisse in C/C++, insbesondere Klassen, Einfachvererbung, Zeiger, Dateiverarbeitung und dynamisches Speichermanagement aus den einführenden Lehrveranstaltungen zur prozeduralen Programmierung \"Fundamentals of Programming\"/\"Procedural Programming\" und der parallelen Veranstaltung \"Objektorientierte Programmierung in C++\" Infolink: www.uni-due.de/jp/cpplab.shtml Bemerkung: ", "en": "Description: In the practical weekly small as well as several bigger programming tasks as homeworks are given related to the topics presented in lecture and exercises. Substantively the tasks include the handling of data stored in files, the definition of inheritance hierarchies and of dynamic list structures, which have to be build up in heap, traversed and searched on. All tasks have to be solved and completely implemented in C++ on their own. The underlying process model in each task is the simple waterfall model. Learning Targets: The students refine their programming experience in C++. They learn to work with files, to model inheritance hierarchies and to define and use dynamic data structures on their own. Furthermore they understand the importance of class definitions as interfaces. Literature: siehe Literatur/see literature \"Fundamentals of Programming\"/\"Procedural Programming\"/\"Objektorientierte Programmierung in C++\". Pre-Qualifications: Programming knowledge in C/C++, especially classes, single inheritance, pointers, file handling and dynamic memory management from introductory lectures \"Fundamentals of Programming\"/\"Procedural Programming\" and the parallel lecture \"Objektorientierte Programmierung in C++\". Info Link: www.uni-due.de/jp/cpplab.shtml Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Wissenschaftliches Arbeiten": {"name": "Wissenschaftliches Arbeiten", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/306/detail", "id": "306", "description": {"de": "Beschreibung: In dieser Veranstaltung werden den Studierenden die wesentlichen Elemente des wissenschaftlichen Arbeitens vermittelt. Was ist wissenschaftliches Arbeiten, welches sind die Ziele des wissenschaftlichen Arbeitens in Forschung und Lehre? Im Rahmen der Vorlesung wird den Studierenden vermittelt, dass ein wesentliches Ziel einer universitären Ausbildung das selbständige Denken auf der Basis des im Studium erworbenen Wissens ist. Lernziele: Den Studierenden wird vermittelt, wie • sie sich ein bis dahin neues und unbekanntes Thema methodisch und systematisch erarbeiten • sie sich in Datenbanken einen Überblick über die aktuelle Literatur verschaffen • wissenschaftliche Texte aufgebaut sind und geschrieben werden • Literatur zitiert wird. Literatur: Popper, K.R.: The logic of scientific Discovery, Routledge Classics, New York 2002 Popper, K.R.: Auf der Suche nach der besseren Welt, R.Pieper GmbH&amp;Co.KG, München 1987 Heisenberg, W.: Der Teil und das Ganze, DTV, München 1973 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In this course, students are taught the essential elements of scientific working. What is scientific working, what are the goals of scientific working in research and teaching? In the lecture students are taught that a key objective of a university education is the independent thinking based on the knowledge acquired during the studies. Learning Targets: Students will learn how • to prepare methodically and systematically a new, till now unknown scientific issue • they get an overview of current literature in databases • scientific texts are constructed and written • literature is cited correctly. Literature: Popper, K.R.: The logic of scientific Discovery, Routledge Classics, New York 2002 Popper, K.R.: Auf der Suche nach der besseren Welt, R.Pieper GmbH&amp;Co.KG, München 1987 Heisenberg, W.: Der Teil und das Ganze, DTV, München 1973 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Betriebswirtschaft für Ingenieure": {"name": "Betriebswirtschaft für Ingenieure", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/52/detail", "id": "52", "description": {"de": "Beschreibung: Die Veranstaltung behandelt die Grundlagen der Betriebswirtschaftslehre. Inhalte im Einzelnen:\r\n- Grundlagen Betriebswirtschaftslehre\r\n- Unternehmensformen  - Materialbeschaffung - Produktion - Rechnungswesen - Finanzierung - Investition - Betriebswrtschaftliche Kennzahlen - Kostenrechnung  Lernziele: Die Studierenden- kennen betriebswirtschaftliche Zusammenhänge- kennen Aufgaben, Aufbau und Strukturen eines Unternehmens- kennen Beschaffungsmethoden- kennen unterschiedliche Finanzierungsarten - können Investitionsentscheidungen treffen - kennen betriebswirtschaftliche Kennzahlen - können Bilanzen interpretieren - kennen Personalführungssysteme  Literatur: Günter Wöhe und Ulrich Döring, Einführung in die Allgemeine Betriebswirtschaftslehre, 25. überarbeitete und aktualisierte Auflage, Vahlen, 2013 Klaus Olfert und Horst-Joachim Rahn, Einführung in die Betriebswirtschaftslehre, 11., verb. u. aktual. Auflage, NWB Verlag, 2013 Jean-Paul Thommen und Ann-Kristin Achleitner, Allgemeine Betriebswirtschaftslehre: Umfassende Einführung aus managementorientierter Sicht, 7., vollst. überarb. Auflage, Gabler Verlag, 2012 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This disposition discuss the basics of business economics. Volumes in detail: \r\n- Basics of Business Studies- Company formas- material procurement - production - accounting - finance - capital expenditure budgeting - Business performance indicators - cost accounting  Learning Targets: The students - know business contexts- know duties, construction and structures of a company- know procurement methods- know different types of financial funding - are able to make investment decisions - know important managerial figures - are able to interpret balance sheets - know human resource management systems  Literature: Günter Wöhe und Ulrich Döring, Einführung in die Allgemeine Betriebswirtschaftslehre, 25. überarbeitete und aktualisierte Auflage, Vahlen, 2013 Klaus Olfert und Horst-Joachim Rahn, Einführung in die Betriebswirtschaftslehre, 11., verb. u. aktual. Auflage, NWB Verlag, 2013 Jean-Paul Thommen und Ann-Kristin Achleitner, Allgemeine Betriebswirtschaftslehre: Umfassende Einführung aus managementorientierter Sicht, 7., vollst. überarb. Auflage, Gabler Verlag, 2012 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Objektorientierte Programmierung": {"name": "Objektorientierte Programmierung", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/301/detail", "id": "301", "description": {"de": "Beschreibung: Die Vorlesung vermittelt die grundlegenden Konzepte und Methoden der objektorientierten Programmierung (OOP). Eine beispielhafte Umsetzung wird mittels der objektorientierten Programmiersprache C++ (als Erweiterung von C) vorgestellt. Im Einzelnen werden behandelt: allgemein: Einführung in Konzepte und Methoden der objektorientierten Software-Entwicklung - Objekt, Attribut, Identität, Zustand, Verhalten, Nachricht, Nachrichtenaustausch, Klasse, Operation, Abstraktion, Generalisierung, Datenkapselung, setter- und getter-Methoden, Modularität, ist-ein- und Teil-von-Hierarchie, Typisierung, Polymorphismus, Konkurrenz und Existenz, UML-Klassen- und -Sequenz-Diagramme.C++: Klasse, Objektvariable, Member, Zugriffsschutzmechanismen, Konstruktoren, Destruktoren, dynamische Speicherreservierung, Überladen von Funktionen und Operatoren, Datenströme, einfache und mehrfache Vererbung, statisches und dynamisches Binden, virtuelle Funktion, virtuelle Basisklasse, Ausnahmebehandlung, Namensräume, Einführung in die generische Programmierung über Templates für Funktionen und Klassen, Anwendungsbeispiele. Lernziele: Die Studierenden kennen und verstehen die grundlegenden Konzepte und Methode der objektorientierten Softwareentwicklung, deren Umsetzung in C++, und können kleinere Aufgaben selbständig objektorientiert in C++ modellieren und programmieren. Literatur: \r\nBreymann, Ulrich. Der C++-Programmierer: C++ lernen – professionell anwenden – Lösungen nutzen. Aktuell zu C++17. Carl Hanser Verlag. 5. Auflage, 2017. ISBN-13: 978-3446448841.\r\nHeide Balzert. Lehrbuch der Objektmodellierung: Analyse und Entwurf mit der UML2. Spektrum Akademischer Verlag. 2. Auflage. 2011. ISBN-13: 978-3827429032.\r\nStephen Prata. C++ Primer Plus. Addison-Wesley Longman. 6. Edition. 2011. ISBN-13: 978-0321776402. \r\nBjarne Stroustrup. The C++ Programming Language. Addison-Wesley Longman. 4. Edition. 2013. ISBN-13: 978-0321563842.\r\nTony Gaddis. Judy Walters. Godfrey Muganda. Starting Out With C++. Pearson Education Limited. 9. Edition. 2016.ISBN-13: 978-1292157276.\r\nBjarne Stroustrup. Bjarne Stroustrup. Die C++-Programmiersprache. Carl Hanser Verlag. 2015. ISBN-13: 978-3446439610.\r\nBjarne Stroustrup. A Tour of C++ (C++ In Depth SERIES). Addison-Wesley. 2. Edition. 2018. ISBN-13: 978-0134997834.\r\nBernd Oestereich. Analyse und Design mit UML 2.1: Objektorientierte Softwareentwicklung. Oldenbourg Verlag. 9. Auflage. 2009. ISBN 978-3486588552.\r\nRobert Sedgewick. Algorithmen in C++. Teil 1-4. Addison-Wesley Longman Verlag. 3. Auflage. 2002. ISBN 978-3827370266.\r\nNicolai M. Josuttis. The C++ Standard Library: A Tutorial and Reference. Addison-Wesley Longman, Amsterdam. 2nd edition. 2012. ISBN-13: 978-0321623218.\r\nhttp://www.open-std.org/jtc1/sc22/wg21/\r\nhttp://www.uml.org/\r\nhttp://www.cplusplus.com/\r\nhttps://www.cppreference.com/\r\n Vorleistung: Kenntnisse über Algorithmen und prozedurale Programmierung in der Programmiersprache C; Grundkenntnisse zu Adressen und Zeigern, dynamischer Speicherverwaltung und einfachen dynamischen Datenstrukturen. Infolink: www.uni-due.de/jp/cpp.shtml Bemerkung: ", "en": "Description: The lectures introduces the basic concepts and methods of object oriented programming (OOP). Example implementations are done in the programming language C++ (as an extension to C). The following topics are presented: generell: introduction into concepts and methods of the object oriented software development: object, attribute, identity, status, behaviour, message, message exchange, class, operation, abstraction, generalisation, encapsulation, setter and getter operations, modularity, is-a- and part-of-hierarchy, typing, polymorphism, concurrency and existence, UML class and sequence diagrams.C++: class, object variable, member, access protection, constructors, destructors, dynamic memory allocation, overloading of functions and operators, streams, single and multiple inheritance, static and dynamic binding, virtual function, virtual base class, exception handling, name spaces, introduction into generic programming by functions and class templates, application examples. Learning Targets: The students know and understand the concepts and methods of the object-oriented software development, their realisations in C++, and can model and program smaller tasks in C++ on their own. Literature: \r\nBreymann, Ulrich. Der C++-Programmierer: C++ lernen – professionell anwenden – Lösungen nutzen. Aktuell zu C++17. Carl Hanser Verlag. 5. Auflage, 2017. ISBN-13: 978-3446448841.\r\nHeide Balzert. Lehrbuch der Objektmodellierung: Analyse und Entwurf mit der UML2. Spektrum Akademischer Verlag. 2. Auflage. 2011. ISBN-13: 978-3827429032.\r\nStephen Prata. C++ Primer Plus. Addison-Wesley Longman. 6. Edition. 2011. ISBN-13: 978-0321776402. \r\nBjarne Stroustrup. The C++ Programming Language. Addison-Wesley Longman. 4. Edition. 2013. ISBN-13: 978-0321563842.\r\nTony Gaddis. Judy Walters. Godfrey Muganda. Starting Out With C++. Pearson Education Limited. 9. Edition. 2016.ISBN-13: 978-1292157276.\r\nBjarne Stroustrup. Bjarne Stroustrup. Die C++-Programmiersprache. Carl Hanser Verlag. 2015. ISBN-13: 978-3446439610.\r\nBjarne Stroustrup. A Tour of C++ (C++ In Depth SERIES). Addison-Wesley. 2. Edition. 2018. ISBN-13: 978-0134997834.\r\nBernd Oestereich. Analyse und Design mit UML 2.1: Objektorientierte Softwareentwicklung. Oldenbourg Verlag. 9. Auflage. 2009. ISBN 978-3486588552.\r\nRobert Sedgewick. Algorithmen in C++. Teil 1-4. Addison-Wesley Longman Verlag. 3. Auflage. 2002. ISBN 978-3827370266.\r\nNicolai M. Josuttis. The C++ Standard Library: A Tutorial and Reference. Addison-Wesley Longman, Amsterdam. 2nd edition. 2012. ISBN-13: 978-0321623218.\r\nhttp://www.open-std.org/jtc1/sc22/wg21/\r\nhttp://www.uml.org/\r\nhttp://www.cplusplus.com/\r\nhttps://www.cppreference.com/\r\n Pre-Qualifications: Knowledge about algorithms and procedural programming in C programming language; basic knowledge about addresses and pointers, dynamic memory management and simple dynamic data structures. Info Link: www.uni-due.de/jp/cpp.shtml Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Discrete Mathematics": {"name": "Discrete Mathematics", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/300/detail", "id": "300", "description": {"de": "Beschreibung: Folgende Themen werden behandelt: 1 Zählprinzipien Mengen und Listen, Listen mit Wiederholungen, Listen ohne Wiederholungen, Mengen, Multimengen, Funktionen, Permutationen, Erzeugende Funktionen, Entscheidungsbäume 2 Graphentheorie Definitionen, Adjazenzlisten und Adjazenzmatrizen, Kantenwege und Wanderungen, Eulersche Wege, Bäume, Aufspannende Bäume, Minimale aufspannende Bäume, Matchings, Flüsse in Netzwerken, Petrinetze 3. Algebraische Methoden Arithmetik, Modulare Arithmetik, Polynome, Endliche Körper, Codes und Kryptographie, Entdecken und Korrigieren von Fehlern Lernziele: Die Studierenden können Zählprobleme mit mathematischen Strukturen modellieren und lösen. Sie sind in der Lage, lineare Rekursionen zu lösen. Sie können praktische Probleme mit Hilfe der Graphentheorie modellieren, unter anderem: Kürzeste Wege, Matching und maximale Flüsse. Sie sind in der Lage, nebenläufige Prozesse mit Petri-Netzen zu analysieren. Sie können Methoden zur Entdeckung und Korrektur von Fehlern bei der Kanalkodierung anwenden. Literatur: ·1 Aigner, M.: Diskrete Mathematik, Vieweg,2004. ·2 Biggs, N.L.: Discrete Mathematics. Oxford University Press,2004. .3 Beutelsbacher, M.A. Zschiegner: Diskrete Mathematik für Einsteiger, .4 Maurer, St.B.: Discrete Algorithmic Mathematics, .5 Anderson,I.: A First Course in Discrete Mathematics. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The course deals with the following subjects: 1 Principles of counting Sets and lists, Lists with repetitions, Lists without repetitions, Sets, Multisets, Functions, Permutations, Generating functions, Decision trees 2 Graph theory Definitions, Adjacency lists and adjacency matrices, Paths and walks, Euler Paths, Trees, Spanning trees, Matchings, Flows in networks, Petri nets 3 Algebraic methods Arithmetics, Modular Arithmetic, Polynomials, Finite fields, Codes and Cryptographie, Recognizing and correcting of errors Learning Targets: The students are able to model and solve counting-problems with the help of mathematical structures. They know how to solve linear recursions. They are able to model practical problems by graph-theory, among others short-path-problems, matching, and maximal flows. They are capable to analyze concurrent processes by Petri-nets and are able to apply methods for detecting and correcting errors in channel-coding. Literature: ·1 Aigner, M.: Diskrete Mathematik, Vieweg,2004. ·2 Biggs, N.L.: Discrete Mathematics. Oxford University Press,2004. .3 Beutelsbacher, M.A. Zschiegner: Diskrete Mathematik für Einsteiger, .4 Maurer, St.B.: Discrete Algorithmic Mathematics, .5 Anderson,I.: A First Course in Discrete Mathematics. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Static and Stationary Fields": {"name": "Static and Stationary Fields", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/293/detail", "id": "293", "description": {"de": "Beschreibung: In diesem Kurs werden die physikalischen Grundgesetze statischer elektrischer und magnetischer Felder, sowie stationärer Strömungsfelder eingeführt. Parallel werden die Materialien bezüglich ihrer elektrischen und magnetischen Eigenschaften untergliedert. Abschließend wird mit dem Induktionsgesetz ein erster Schritt in Richtung zeitlich veränderlicher Felder gemacht. Am Ende sind alle 4 Maxwell-Gleichungen in integraler Form vollständig erarbeitet. Lernziele: Die Studenten sind in der Lage: • Elektrische und magnetische Felder und Strömungsfelder durch ihre korrekt zugeordneten Größen und Einheiten zu beschreiben • Feldverteilungen einfacher Geometrien zu berechnen • Materialien bezüglich ihrer elektrischen und magnetischen Eigenschaften einzuteilen • Kräfte in elektrischen und magnetischen Feldern einfacher Geometrien zu berechnen • Den Energiegehalt statischer elektrischer und magnetischer Felder zu berechnen • Kapazitäten verschiedener Kondensatorgeometrien im Rahmen ihrer mathematischen Fähigkeiten zu ermitteln • Widerstände unterschiedlich geformter Körper im Rahmen ihrer mathematischen Fähigkeiten zu ermitteln • Induktivitäten für Spulen unter-schiedlicher Geometrien zu bestimmen • Die durch zeitlich oder räumlich veränderliche Magnetfelder verursachten Induktionsspannungen und -ströme zu bestimmen. Literatur: • Ingo Wolff: “Grundlagen der Elektrotechnik 1” • Matthew N.O. Sadiku: Elements of Electromagnetics, Oxford University Press 2010 • Nathan Ida, Engineering Electromagnetics Springer, 2000  Vorleistung: Es gibt keine formalen Voraussetzungen zu Teilnahme, Kenntnisse in Vektormathematik, sowie der Integral- und Differentialrechnung sollten aber vorhanden sein. Infolink:  Bemerkung: ", "en": "Description: This lecture introduces the basic physical laws of static electric and magnetic fields as well as of stationary current fields. In parallel, materials will be divided according to their electrical and magnetic properties. Finally, Faraday´s Law of Induction is introduced as a first step into time varying fields. At the end, all four Maxwell-Equations has been derived in their integral form. Learning Targets: The students are able: • to describe electric, magnetic and current fields by their correct quantities and units • to calculate field distributions in simple geometries • to classify materials according to their electric and magnetic properties • to calculate forces in electrical and magnetic fields of simple geometry • to determine the energy content of static electrical and magnetic fields • to calculate the capacitance of different formed capacitors, within their mathematical skills • to calculate the resistance of different shaped resistors, within their mathematical skills • to calculate inductance of inductors with different shaped cores. • to calculate the induced current and voltage as consequence of the movement in a spatial inhomogeneous or time-depending magnetic field. Literature: • Ingo Wolff: “Grundlagen der Elektrotechnik 1” • Matthew N.O. Sadiku: Elements of Electromagnetics, Oxford University Press 2010 • Nathan Ida, Engineering Electromagnetics Springer, 2000  Pre-Qualifications: There are no formal requirements for participation, but knowledge of vector mathematics, integral and differential calculus should be available. Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Procedural Programming": {"name": "Procedural Programming", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/166/detail", "id": "166", "description": {"de": "Beschreibung: Vorlesung und Übung vermitteln die grundlegenden Techniken des modularen und strukturierten Programmaufbaus. Studierende erlangen Verständnis für Denkweise und Prinzipien des prozeduralen Programmierens. Dazu werden sie zunächst anhand von Beispielen in die algorithmische Methodik eingeführt, anschließend erlangen sie das Verständnis der prozedurale Umsetzung zuerst in allgemein verständlicher Form, anschließend über die Programmiersprache C. Das Verständnis wird in Vorlesung und Übung wie folgt eingeführt: - Algorithmen, Top-Down- und Bottom-Up-Entwurf; - Vom Algorithmus zum Programm, vom Problem zur algorithmischen Lösung; - Atomare Datentypen und deren Ein- und formatierte Ausgabe; - Ausdrücke und Anweisungen; - Datenstrukturen und Funktionen; - Zeiger und Adressen; - Dynamische Speicherreservierung und Speicher-Management-Funktionen; - Einfache dynamische Datenstrukturen: Listen, Kellerstapel, Warteschlangen; - Einfache Such- und Sortierverfahren; - Aufgaben von Präprozessor, Übersetzer und Binder. Im Praktikum lernen die Studierenden, mit den in Vorlesung und Übung erworbenen Kenntnissen praktische Beispiele selbständig zu implementieren. Lernziele: Die Studierenden kennen und verstehen die grundlegenden Konzepte der prozeduralen Programmierung. Sie können kleinere Problemstellungen und Beispiele algorithmisch aufarbeiten und in der Programmiersprache C selbständig implementieren. Sie sind in der Lage, sich selbständig in andere prozedurale Programmiersprachen einzuarbeiten. Literatur: 1. Brian W. Kernighan, Dennis M. Ritchie: The C Programming Language. Prentice Hall International, 1988, 2nd edition, ISBN: 978-0-131-10362-7 2. K. N. King: C Programming: a modern approach. W. W. Norton &amp; Company, 2008, 2nd edition, ISBN 978-0-393-97950-3. 3. R. Sedgewick: Algorithms in C. Prentice Hall, 2009, ISBN 978-0-768-68233-5 4. P. Deitel, H. Deitel, A. Deitel: C for Programmers. Prentice Hall, 2013, ISBN: 978-0133462067 5. V. Anton Spraul: Think like a programmer: an introduction to creative problem solving. No Starch Press, 2012, ISBN 978-1-59327-424-5  Vorleistung:  Infolink:  Bemerkung: Die Veranstaltung „Fundamentals of Programming (FoP)“ wird mit der Veranstaltung „Procedural Programming (PP)\" fusioniert.\r\nPP hat den Veranstaltungstermin von FoP für die Vorlesung übernommen und den Übungstermin von FoP belassen.", "en": "Description: In lecture and exercises, students receive first understanding of fundamental techniques needed for development of modular and structured programs. In doing so, they get understanding of basic algorithms and their procedural implementation. This will be learned first by examples for general algorithmic thinking, then also by implementations in the programming language C. Understanding is stimulated in lecture and exercises as lfollows: - introduction; - algorithms, top-down- and bottom-up-design; - from algorithm to program, from problem to algorithmic solution; - atomic data types and their input and formatted output; - expressions, statements and functions; - data structures and functions; - pointers and addresses; - dynamic memory allocation and memory management functions; - simple dynamic data structures: lists, stacks, queues. - simple searching and sorting methods; - task of preprocessor, compiler and linker; In the lab, students learn to use the knowledge gained from lecture and exercise by implementing practical programming examples. Learning Targets: The students know and understand the basic concepts of procedural programming. Small problems and examples can algorithmically analysed and implemented in C by them on their own. They are able to teach themselves different other procedural programming languages. Literature: 1. Brian W. Kernighan, Dennis M. Ritchie: The C Programming Language. Prentice Hall International, 1988, 2nd edition, ISBN: 978-0-131-10362-7 2. K. N. King: C Programming: a modern approach. W. W. Norton &amp; Company, 2008, 2nd edition, ISBN 978-0-393-97950-3. 3. R. Sedgewick: Algorithms in C. Prentice Hall, 2009, ISBN 978-0-768-68233-5 4. P. Deitel, H. Deitel, A. Deitel: C for Programmers. Prentice Hall, 2013, ISBN: 978-0133462067 5. V. Anton Spraul: Think like a programmer: an introduction to creative problem solving. No Starch Press, 2012, ISBN 978-1-59327-424-5  Pre-Qualifications:  Info Link:  Notice: The lecture \"Fundamentals of Programming (FoP) will be merged with the lecture \"Procedural Programming (PP)\".\r\nPP takes over the schedule date from FoP for the lecture, whereas the schedule date for the lab is the same as FoP."}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Physics Lab": {"name": "Physics Lab", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/290/detail", "id": "290", "description": {"de": "Beschreibung: Die Teilnehmer führen gruppenweise (2-3 Studierende) an 4 Tagen je 1 Experiment aus verschiedenen Grundgebieten der Physik mit Schwerpunkt Wärmelehre, Optik und Atomphysik durch. Von jedem Experiment werden ein Tagesprotokoll und ein Versuchsbericht erstellt. Der Bericht soll die Grundlagen des Experiments, den Versuchsaufbau, die Messergebnisse, ihre Auswertung und kritische Bewertung einschl. Fehlerbetrachtung enthalten. Lernziele: Die Studierenden können eigenständig physikalische Experimente durchführen, auswerten und die Ergebnisse kritisch beurteilen. Literatur: Praktikum der Physik, W. Walcher, B. G. Teubner, Stuttgart (2004) Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The participants carry out (in groups of 2-3) on 4 days each time one experiment from the following domains: physics with focus on thermodynamics, optics and atomic physics. For each experiment, a daily report and a test report must be written. The report should contain the basics of the experiment, the experiment setup, the measurement results, their analysis and their critical assessment including error analysis. Learning Targets: The students should be able, on their own and independently, to carry out physical experiments, to analyze the results and to critically judge these results. Literature: Praktikum der Physik, W. Walcher, B. G. Teubner, Stuttgart (2004) Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Physics": {"name": "Physics", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/289/detail", "id": "289", "description": {"de": "Beschreibung: Einführung: Einheiten, Vektoren, Skalare, lineare Bewegung, zusammengesetzte Bewegungen, Beschleunigung, Stoßgesetze, Drehbewegungen, Schwingungen, Wellen, stehende Wellen Akustik: longitudinale Wellen, Intensität bei Schallwellen, dB-Skala, phon-Skala Optik: geometrische Optik: Brechungsgesetz, Linsen, Prismen, Abbildungen, optische Instrumente, Lichtleiter, Dispersion physikalische Optik: Beugung, Huygens-Prinzip, Spalt, Gitter, Interferenz Relativität Lernziele: In der Veranstaltung lernen die Studierenden den physikalischen Ansatz. Nach Teilnahme an dem Kurs sind die Studenten mit den grundlegenden, physikalischen Größen und ihren Zusammenhängen vertraut. Darüber hinaus erwerben die Studierenden hier die Grundlage zur selbstständigen Bearbeitung physikalischer Fragestellungen aus den Lehrinhalten. Literatur: 1 Halliday, Resnick, Walter, Fundamentals of Physics, Wiley 2 Douglas C. Giancoli, Physics, Addison-Wesley 3 Tipler and Mosca, Physics for Scientists and Engineers, published by W. H. Freeman  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: 1)Introduction: vectors, units, equation of linear and circular motion, energy, elastic- and inelastic collision; 2)oscillations and waves: free-,damped-,enforced oscillations, waves, acoustic waves, what is sound?, intensity of sound, dB scale 3)optics: geometrical optics: prism, lenses, mirror, Snell´s law, light guiding, imaging with simple instruments 4)Relativistic effects Learning Targets: The students will learn the physical approach. They will have acquired the knowledge about basic physical properties and the associated relations. In addition, this class will give the students the basis for the self-dependent solving of physical problems within this classes content of teaching. Literature: 1 Halliday, Resnick, Walter, Fundamentals of Physics, Wiley 2 Douglas C. Giancoli, Physics, Addison-Wesley 3 Tipler and Mosca, Physics for Scientists and Engineers, published by W. H. Freeman  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Bachelor-Abschlussarbeit Kolloquium": {"name": "Bachelor-Abschlussarbeit Kolloquium", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/311/detail", "id": "311", "description": {"de": "Beschreibung: Im Rahmen des begleitenden Kolloquiums stellen die Studierenden Zwischen- und Endergebnisse ihrer Bachelor-Arbeit vor, und beteiligen sich ebenfalls an Diskussionen über andere vorgestellte Bachelor-Arbeiten. Lernziele: Im Rahmen des Kolloquiums lernen die Studierenden, Zwischen- und Endergebnisse innerhalb festgesetzter Zeitdauer verständlich zu präsentieren. Literatur:  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In the course of the accompanying colloquium, the students present the intermediate and final results of their bachelor thesis and likewise take part in the discussions on other presented bachelor thesis. Learning Targets: The aim of the colloquium is to bring the students to be able to present the intermediate and final results of their work within a given length of time in a reasonable way. Literature:  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Nicht-technischer Katalog BA 2": {"name": "Nicht-technischer Katalog BA 2", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/308/detail", "id": "308", "description": {"de": "Beschreibung: Mit diesem Modul soll den Studierenden die Möglichkeit gegeben werden, im Rahmen des Studiums neben den rein technischen Veranstaltungen auch so genannte „nicht-technische Fächer“ nachweislich zu belegen. Die Veranstaltungen können aus dem gesamten Angebot der Universität Duisburg-Essen gewählt werden, wobei das „Institut für Optionale Studien“ (IOS) einen Katalog mit Veranstaltungen aus dem so genannten Ergänzungsbereich vorhält. Lernziele: Ziel des Moduls ist die Vertiefung der Allgemeinbildung der Studierenden und ggf. die Verstärkung der sprachlichen Kompetenz sowie eine Stärkung der Berufsbefähigung durch das Erlernen von Teamfähigkeit und Präsentationstechniken. Literatur: Spezifisch für das gewählte Thema Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This module offers the students the opportunity to, besides the pure technical courses they take, attend some so called “non-technical subjects” and latter provide an attest for them. These courses can be chosen from the overall offers of the Duisburg-Essen university, whereby the “Institut für Optionale Studien“(IOS) proposes a catalog containing courses which fall under the named supplementary area. Learning Targets: The module aims at deepening the general knowledge of the students and resp. at improving their language skills as well as strengthening their professional qualifications through the learning of teamwork and expose techniques. Literature: Spezifisch für das gewählte Thema Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO15 - B-CE(SE)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/27/detail", "id": "27", "type": "StudyCourse"}}, "Logical Design of Digital Systems Lab": {"name": "Logical Design of Digital Systems Lab", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/299/detail", "id": "299", "description": {"de": "Beschreibung: Im Praktikum werden praxisrelevante Systeme eingesetzt zur Entwicklung digitaler Schaltungen eingesetzt. Zum einen ein Simulationssystem, das zur Analyse von Speicher- und Busbausteinen und deren Timingverhalten eingesetzt wird. Zum anderen Hard- und Software-Tools zur Entwicklung programmierbarer Logikanordnungen. Der Test digitaler Schaltungen wird am Beispiel des Testsystems Tectronix LV 500 demonstriert. Lernziele: Das Praktikum befähigt die Studierenden digitale Schaltungen mit Hilfe praxisrelevanter Werkzeuge zu simulieren und zu analysieren und programmierbare logische Schaltungen zu entwickeln. Sie sind außerdem in der Lage die wichtigsten Arbeitsschritte beim Test digitaler Schaltungen zu benennen und dem Zusammenhang die wesentlichen Komponenten eines Testgerätes zu beschreiben und deren Funktionsweise zu erläutern. Literatur: 1. Versuchsunterlagen des Instituts 2. Literatur zur Vorlesung Vorleistung: Grundlagen Computer Engineering 1 Vorlesung und Praktikum Infolink:  Bemerkung: ", "en": "Description: Systems of high practical relevance are introduced to the students in the lab. On the one hand a simulation system, which is used to analyze memory- and bus-components, especially their timing behavior. On the other hand hard and software tools for the development of programmable logic are introduced. The test of digital circuits is demonstrated by the example of the test system Tectronix LV 500. Learning Targets: The lab enables the students to simulate and analyze digital circuits with the help of practice-relevant tools and to develop programmable circuits. In addition they are able to describe the most important components and steps of a test environment and to explain their function. Literature: 1. Versuchsunterlagen des Instituts 2. Literatur zur Vorlesung Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO15 - B-CE(SE)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/27/detail", "id": "27", "type": "StudyCourse"}}, "Mobilkommunikationstechnik": {"name": "Mobilkommunikationstechnik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/154/detail", "id": "154", "description": {"de": "Beschreibung: In der Vorlesung \"Mobilkommunikationstechnik\" werden die Grundlagen digitaler Mobilfunksysteme vermittelt. Hierzu werden in einer Einleitung gängige Mobilfunksysteme vorgestellt. Anschließend werden theoretische Grundlagen von zellularen Mobilfunknetzen behandelt. In einem weiteren Kapitel werden die Eigenschaften des Mobilfunkkanals erläutert. Schließlich wird noch auf Besonderheiten bei der Übertragung in einem zellularen Mobilfunknetz wie Diversität, Einfluss des Zellnetzes und Signalstrukturen eingegangen. Lernziele: 1. Verständnis für die Architektur zellularer Mobilfunknetze. 2. Verständnis der Anforderungen an und Architekturprinzipien von zellularen Mobilfunknetzen. 3. Verständnis der Mobilfunkübertragungstechnik, insbesondere der empfängerseitigen Signalverarbeitung von Signalen, die über zeit- und frequenzselektive Übertragungskanäle empfangen werden. Literatur: P. Jung: Analyse und Entwurf digitaler Mobilfunksysteme. Stuttgart: Teubner, 1997. A.F. Molisch: Wireless communications. New York, 2005. Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: In the lecture \"Mobile Communications\" the basics of digital mobile communication systems are treated. For this, some well known mobile communication systems are introduced. After that the lecture deals with theoretical principles of digital cellular mobile communication networks. In another chapter the properties of the mobile communication channel are explained. Finally some special properties of cellular mobile communications like diversity, influence of the cellular network and signal structures are considered. Learning Targets: 1. Understanding the architecture of cellular mobile radio networks. 2. Understanding the requirements and architecture principles of cellular mobile radio networks. 3. Understanding the principles of transmission techniques for cellular mobile radio networks, in particular the processing of signals received over the time and frequency selective mobile radio channel. Literature: P. Jung: Analyse und Entwurf digitaler Mobilfunksysteme. Stuttgart: Teubner, 1997. A.F. Molisch: Wireless communications. New York, 2005. Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Computer Networks Lab": {"name": "Computer Networks Lab", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/312/detail", "id": "312", "description": {"de": "Beschreibung: Im Praktikum \"Computer Networks Lab\" erlangen die Studierenden praktische Erfahrung zu Konzeption, Implementierung und Arbeitsweise von Computer-Netzwerken. Einführend werden Grundlagen wie Netzwerk-Topologien, Protokolle, Routing, Sockets, etc. vorgestellt und erläutert. Insbesondere wird die Arbeitsweise von Servern und Firewalls erklärt. In einer Projektarbeit ist daraufhin das Intranet einer kleinen Firma zu entwickeln, das die grundlegenden Funktionen wie File-Server und Webserver bereitstellt. Dieses Intranet ist dann über eine Firewall mit dem World Wide Web und mit einem weiteren externen Standort dieser Firma zu verbinden. Des Weiteren erlernen die Teilnehmer im Rahmen des Praktikums den Umgang mit Socket-Programmierung sowie Netzwerk-Monitorprogramme. Lernziele: Die Studierenden sollen über dieses Praktikum erfahren, wie Rechnernetze im praktischen Einsatz aufzubauen und zu betreiben sind. Anhand einer dem Berufsalltag entsprechenden Aufgabenstellung erlangen Sie Erfahrungen zu Rechnernetzen im Bereich der Implementierung und Problemlösung. Literatur: 1. A. Tanenbaum (2012). Computernetzwerke, Pearson Studium, München 2. A. Tanenbaum, D. Wetherall (2011). Computer Networks, Pearson  Vorleistung: Operating Systems and Computer Networks Infolink:  Bemerkung: alter Titel: Computer-Netzwerke-Labor", "en": "Description: With the \"Computer Networks Lab\", students gain practical experience related conception, implementation and operation of computer networks. As introduction, basic ideas and terms related to the network like network topologies, protocols, routing, sockets, etc. are introduced and explained. Especially the functioning of servers and firewalls will be discussed. Within a project, an intranet for a small company has to be developed, consists of file and web server. This intranet has to be connected to the World Wide Web by using a firewall. Additionally the intranet has to be connected to an external site of the company. Furthermore, students learn how to use socket programming and network analysis programs. Learning Targets: The students shall gain experience in the setup of computer networks, their implementation, operation and problem solving. By way of the implementation of a task which is taken from all day´s industrial practice, they get experience with implementation and problem solving. Literature: 1. A. Tanenbaum (2012). Computernetzwerke, Pearson Studium, München 2. A. Tanenbaum, D. Wetherall (2011). Computer Networks, Pearson  Pre-Qualifications: Operating Systems and Computer Networks Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Elektronische Bauelemente": {"name": "Elektronische Bauelemente", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/145/detail", "id": "145", "description": {"de": "Beschreibung: Aufbauend auf den Grundlagen der Festkörperelektronik werden zunächst MOS-Kondensatoren und Ladungsgekoppelte Bauelemente (CCD) behandelt. Im Anschluss daran werden die Grundlagen von - Feldeffekttransistoren (MOSFET, Sperrschicht-FET (MESFET, JFET) und Heterostruktur-FET (HFET)) sowie - bipolaren Bauelementen (pn-Dioden, npn- bzw. pnp-Transistoren, und spezielle Bauteile wie Tunnel- und Zenerdioden) erarbeitet und die DC-Eigenschaften dieser Bauelemente hergeleitet. Lernziele: Die Studierenden sind fähig, die grundlegenden Konzepte elektronischer Bauelemente zu verstehen und die Abhängigkeiten von technologischen Größen abschätzen zu können. Literatur: 1 F.J.Tegude, Festkörperelektronik, Skript zur Vorlesung, Universität Duisburg - Essen, 2004 2 K.-H. Rumpf, K.Pulvers, Elektronische Halbleiterbauelemente – Vom Transistor zur VLSI-Schaltung, Dr. Alfred Hüthig Verlag Heidelberg, ISBN 3-7785-1345-1, 1987 3 K.Bystron, J.Borgmeyer, Grundlagen der Technischen Elektronik, Carl Hanser Verlag, München Wien, Studienbücher, ISBN 3-446-15869-3, 1990 4 R.S. Muller, T.I.Kamins, Device Electronics for Integrated Circuits, John Wiley &amp; Sons, 1986, ISBN 0-471-88758-7 5 H.Tholl, Bauelemente der Halbleiterelektronik, B.G.Teubner, Stuttgart, 1978, II, Teil 2, ISBN 3-519-06419-7 7 M.Shur, GaAs Devices and Circuits, Plenum Press, Microdevices: Physics and Fabrication Technologies, New York 1987, ISBN 0-306-42192-5   Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Based on the solid-state electronics fundamentals MOS-capacitors and charge-coupled devices (CCD) are treated. Subsequently, the basics of - field-effect transistors (MOSFET, junction FET (MESFET, JFET) and heterostructure-FET (HFET)) and - bipolar devices (pn-diode, npn- and pnp-bipolar transistors, tunnel diodes and thyristors) are covered and the DC-characteristics of these devices are derived. Learning Targets: The students are able to understand the fundamentals of electronic devices and the influence of various technological and layout parameters on their characteristics. Literature: 1 F.J.Tegude, Festkörperelektronik, Skript zur Vorlesung, Universität Duisburg - Essen, 2004 2 K.-H. Rumpf, K.Pulvers, Elektronische Halbleiterbauelemente – Vom Transistor zur VLSI-Schaltung, Dr. Alfred Hüthig Verlag Heidelberg, ISBN 3-7785-1345-1, 1987 3 K.Bystron, J.Borgmeyer, Grundlagen der Technischen Elektronik, Carl Hanser Verlag, München Wien, Studienbücher, ISBN 3-446-15869-3, 1990 4 R.S. Muller, T.I.Kamins, Device Electronics for Integrated Circuits, John Wiley &amp; Sons, 1986, ISBN 0-471-88758-7 5 H.Tholl, Bauelemente der Halbleiterelektronik, B.G.Teubner, Stuttgart, 1978, II, Teil 2, ISBN 3-519-06419-7 7 M.Shur, GaAs Devices and Circuits, Plenum Press, Microdevices: Physics and Fabrication Technologies, New York 1987, ISBN 0-306-42192-5   Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO19 - B-CE(Com)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/265/detail", "id": "265", "type": "StudyCourse"}}, "Grundlagen der Elektronik": {"name": "Grundlagen der Elektronik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/54/detail", "id": "54", "description": {"de": "Beschreibung: Im Rahmen der Veranstaltung werden zunächst MOS-Kondensatoren und Ladungsgekoppelte Bauelemente (CCD) behandelt. Im Anschluss daran werden die Grundlagen von - Feldeffekttransistoren (MOSFET, Sperrschicht-FET (MESFET, JFET)) sowie - bipolaren Bauelementen (pn-Dioden, npn- bzw. pnp-Transistoren, und spezielle Bauteile wie Tunnel- und Zenerdioden) erarbeitet und die DC-Eigenschaften dieser Bauelemente hergeleitet. Lernziele: Die Studierenden sind fähig, die grundlegenden Konzepte elektronischer Bauelemente zu verstehen und die Abhängigkeiten von technologischen Größen abschätzen zu können. Literatur: 1 F.J.Tegude, Festkörperelektronik, Skript zur Vorlesung, Universität Duisburg - Essen, 2004 2 K.-H. Rumpf, K.Pulvers, Elektronische Halbleiterbauelemente – Vom Transistor zur VLSI-Schaltung, Dr. Alfred Hüthig Verlag Heidelberg, ISBN 3-7785-1345-1, 1987 3 K.Bystron, J.Borgmeyer, Grundlagen der Technischen Elektronik, Carl Hanser Verlag, München Wien, Studienbücher, ISBN 3-446-15869-3, 1990 4 R.S. Muller, T.I.Kamins, Device Electronics for Integrated Circuits, John Wiley &amp; Sons, 1986, ISBN 0-471-88758-7 5 H.Tholl, Bauelemente der Halbleiterelektronik, B.G.Teubner, Stuttgart, 1978, II, Teil 2, ISBN 3-519-06419-7 7 M.Shur, GaAs Devices and Circuits, Plenum Press, Microdevices: Physics and Fabrication Technologies, New York 1987, ISBN 0-306-42192-5 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Within this lecture MOS-capacitors and charge-coupled devices (CCD) are treated. Subsequently, the basics of - field-effect transistors (MOSFET, junction FET (MESFET, JFET)) and - bipolar devices (pn-diode, npn- and pnp-bipolar transistors, tunnel diodes and thyristors) are covered and the DC-characteristics of these devices are derived.  Learning Targets: The students are able to understand the fundamentals of electronic devices and the influence of various technological and layout parameters on their characteristics Literature: 1 F.J.Tegude, Festkörperelektronik, Skript zur Vorlesung, Universität Duisburg - Essen, 2004 2 K.-H. Rumpf, K.Pulvers, Elektronische Halbleiterbauelemente – Vom Transistor zur VLSI-Schaltung, Dr. Alfred Hüthig Verlag Heidelberg, ISBN 3-7785-1345-1, 1987 3 K.Bystron, J.Borgmeyer, Grundlagen der Technischen Elektronik, Carl Hanser Verlag, München Wien, Studienbücher, ISBN 3-446-15869-3, 1990 4 R.S. Muller, T.I.Kamins, Device Electronics for Integrated Circuits, John Wiley &amp; Sons, 1986, ISBN 0-471-88758-7 5 H.Tholl, Bauelemente der Halbleiterelektronik, B.G.Teubner, Stuttgart, 1978, II, Teil 2, ISBN 3-519-06419-7 7 M.Shur, GaAs Devices and Circuits, Plenum Press, Microdevices: Physics and Fabrication Technologies, New York 1987, ISBN 0-306-42192-5 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Regelungstechnik EIT Praktikum": {"name": "Regelungstechnik EIT Praktikum", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/158/detail", "id": "158", "description": {"de": "Beschreibung: Laborversuche:\r\n- RP: Reglerparameter\r\n- TC1: Für eine Temperaturregelstrecke Messung von statischen Kennlinien, Sprungantworten, Frequenzgang, dann Regelung mit industriellem PID-Regler nach empirischen Einstellregeln sowie mit Selbstparametrierung.\r\n- SC30: Reglerentwurf für eine Drehzahlregelung Lernziele: Die Studierenden sollen in der Lage sein geeignete Regler für unterschiedliche zu entwerfen und programmiertechnisch zu implementieren. Literatur: Siehe zugehörige Vorlesung \"Regelungstechnik EIT\". Vorleistung: Der Stoff der Vorlesung \"Regelungstechnik EIT\" wird vorausgesetzt. Infolink:  Bemerkung: bisheriger Titel: Einführung in die Automatisierungstechnik Praktikum", "en": "Description: Lab experiments: - RP: Control parameter\r\n- TC1: Temprature control\r\n- SC30: Controller design Learning Targets: The students are able to design and implement suitable controller for different systems. Literature: Siehe zugehörige Vorlesung \"Regelungstechnik EIT\". Pre-Qualifications: The material of the lecture \"Control Engineering EIT\" is required. Info Link:  Notice: previous Name: Introduction to Automation Lab"}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Operating Systems and Computer Networks": {"name": "Operating Systems and Computer Networks", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/169/detail", "id": "169", "description": {"de": "Beschreibung: Diese Vorlesung deckt zwei Aspekte der Computerorganisation ab: Betriebssysteme und Speicherorganisationen auf der einen Seite und die Grundlagen von Computernetzwerken auf der anderen Seite. Die Prinzipien von Betriebssystemen werden erläutert und exemplarisch anhand von UNIX und MS-DOS illustriert. Große Massenspeichersysteme bis hin zu schnellen Cache-Speichersystemen werden im Kapitel Speicherorganisation besprochen, ebenso Prinzipien wie Paging, Segmentierung und virtuelle Adressierung. Der zweite Bereich deckt verschiedene Aspekte der Rechnerkommunikation ab. Dies beinhaltet Prinzipien des Buszugriffs sowie Protokolle und Übertragungsmechanismen in Rechnernetzen. Ausgewählte Protokolle und Zugriffsmethoden werden erklärt. Auf dieser Basis werden dann Kriterien zum Entwurf von Rechnernetzen unter Berücksichtigung der Übertragungsgeschwindigkeit und der Kollisionswahrscheinlichkeit erläutert. Lernziele: Die Studierenden sind in der Lage, die wichtigsten Prinzipien und Funktionsweisen von Betriebssystemen zu erläutern sowie grundlegende Konzepte von Computernetzwerken zu benennen und deren Funktionsweise zu erklären. Literatur: 1. A. Tanenbaum (2009). Moderne Betriebssysteme, Pearson Studium, München 2. A. Tanenbaum (2015). Modern Operating Systems 4/E, Pearson 3. A. Tanenbaum (2012). Computernetzwerke, Pearson Studium, München 4. A. Tanenbaum. D. Wetherall (2011). Computer Networks, Pearson 5. W. Stallings (2014). Operating Systems – Internals and Design Principles 8/E, Prentice Hall, Pearson Vorleistung: Fach: Grundlagen der Technischen Informatik Subject: Fundamentals of Computer Engineering Infolink:  Bemerkung: Betriebssysteme und Computer-Netzwerke", "en": "Description: This course covers two aspects of computer organization: Operating systems and management of resources on the one hand and fundamentals of computer networks on the other hand. The principles of operating systems are explained and illustrated by functions of UNIX and MS-DOS. Memory management systems are discussed concerning the hierarchy from mass storage to cache memories as well as principles like paging, segmenting, and virtual addresses. The second area is dedicated to the different aspects of computer communication. This includes interfaces and principles of buss access as well as protocols and transport mechanisms in computer networks. Some common protocols and access methods are explained; on this basis, criteria for the design of networks with regard to transmission rate and error probability are discussed. Learning Targets: The students are able to describe the most important principles and functions of modern operating systems. Also they are able to explain fundamental concepts of computer networks. Literature: 1. A. Tanenbaum (2009). Moderne Betriebssysteme, Pearson Studium, München 2. A. Tanenbaum (2015). Modern Operating Systems 4/E, Pearson 3. A. Tanenbaum (2012). Computernetzwerke, Pearson Studium, München 4. A. Tanenbaum. D. Wetherall (2011). Computer Networks, Pearson 5. W. Stallings (2014). Operating Systems – Internals and Design Principles 8/E, Prentice Hall, Pearson Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Internet-Technologie und Web Engineering": {"name": "Internet-Technologie und Web Engineering", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/70/detail", "id": "70", "description": {"de": "Beschreibung: Ziel der Veranstaltung ist es, eine Einführung in grundlegende Techniken und Standards des Internet und insbesondere des World Wide Web zu geben, und die Funktionsweise wesentlicher Plattformen und Werkzeuge für Web-Anwendungen zu erläutern. Schwerpunkte liegen dabei auf dem Protokollentwurf am Beispiel verbreiteter Internetprotokolle, sowie Techniken und Standards zur Erstellung von Web-Anwendungen. In der begleitenden Übung werden insbesondere auch kleinere Entwicklungsprojekte durchgeführt.  Inhalte im Einzelnen: - Sockets - Entwurf von Internetprotokollen (am Beispiel von Telnet, FTP, Usenet, IRC) - Domain Name System (DNS) und Security Extensions (DNSSEC) - E-Mail (SMTP, MIME, POP3, IMAP) und Spam - Hypertext Transfer Protocol (HTTP), Session Management - Standards im World Wide Web (HTML, XML, CSS) - Client-seitige Techniken zur Implementierung von Web-Anwendungen (HTML5, JavaScript, AJAX) Lernziele: Die Studierenden sind vertraut mit grundlegenden Internetprotokollen, deren Funktionsweisen und Entwurfsprinzipien. Die Studierenden haben Kenntnisse der unterschiedlichen Techniken, Standards und Methoden, die zur Entwicklung von Web-Anwendungen eingesetzt werden. Sie können selbstständig Web-Anwendungen entwerfen und realisieren. Literatur: • Internet Engineering Task Force: RFC (Request for Comments) series, ISSN 2070-1721, www.rfc-editor.org • W. Richard Stevens: TCP/IP Illustrated. Volume 1–3. Addison Wesley. ISBN 978-0201633467 (Vol. 1), ISBN 978-0201633542 (Vol. 2), ISBN 978-0201634952 (Vol. 3).  Vorleistung: Kenntnisse von Rechnernetzen und Kommunikationsprotokollen auf Internet- und Transportschicht (IP, TCP, UDP) werden vorausgesetzt. Programmierkenntnisse werden vorausgesetzt. Kenntnisse in angewandter Kryptographie und Netzwerksicherheit (SSL/TLS, digitale Signatur, kryptographische Hashfunktion) sind hilfreich. Infolink:  Bemerkung: ", "en": "Description: Goal of the lecture is it to give an overview of the fundamental techniques and standards of Internet and in particular the World Wide Web, to describe the function methods of scientific platforms and tools for applications of Web. The emphasis is on protocol design, discussed exemplary with common Internet protocols, as well as techniques and standards for creation of web applications. In the accompanying exercise small development projects are accomplished.  Contents in details: - Sockets - Design of Internet protocols (at examples of Telnet, FTP, Usenet, IRC) - Domain Name System (DNS) and Security Extensions (DNSSEC) - Email (SMTP, MIME, POP3, IMAP) and spam - Hypertext Transfer Protocol (HTTP), session management - Standards in the World Wide Web (HTML, XML, CSS) - Client-side techniques for implementation of web applications (HTML5, JavaScript, AJAX) Learning Targets: The students are familiar with basic Internet protocols, their functionality and design principles. The students have knowledge of the different techniques, standards and methods, which are used for the development of web applications. They can design and realize independent Web applications. Literature: • Internet Engineering Task Force: RFC (Request for Comments) series, ISSN 2070-1721, www.rfc-editor.org • W. Richard Stevens: TCP/IP Illustrated. Volume 1–3. Addison Wesley. ISBN 978-0201633467 (Vol. 1), ISBN 978-0201633542 (Vol. 2), ISBN 978-0201634952 (Vol. 3).  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Grundlagen der künstlichen Intelligenz": {"name": "Grundlagen der künstlichen Intelligenz", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/69/detail", "id": "69", "description": {"de": "Beschreibung: Im mittlerweile 50 Jahre alten Forschungsbereich ‘Künstliche Intelligenz‘ bemühen sich Wissenschaftler aus aller Welt, Computersysteme zu realisieren, die ‘intelligente‘ Fähigkeiten besitzen. Umstritten ist nach wie vor, wie der Begriff Intelligenz genau zu definieren ist. In Computeranwendungen muss dieses Wissen in geeigneter Weise dargestellt und verarbeitet werden. Die Veranstaltung behandelt hierzu auch Anwendungsbeispiele.  Inhalte im Einzelnen: - Geschichte der künstlichen Intelligenz - Definition von Intelligenz - Agenten - Agentenarchitekturen - Eigenschaften von Umgebungen - Suche - Uninformierte Suche (BFS, DFS) - Informierte Suche (Greedy, A*) - Lokale Suche (Genetische Algorithmen) - Ungewissheit / Probabilistische Modelle - Machine Learning - Klassifikation (Naive Bayes, Decision Trees) - Clustering - Regression - Evaluierung - Anwendungen von KI (Sprachverarbeitung, Bildanalyse, etc.) Lernziele: Die Studierenden lernen verschiedene Definitionen von \"Künstlicher Intelligenz\" kennen, sowie verschiedene Ansätze zur Wissensrepräsentation im Computer. Sie erlangen ein Grundverständnis wie anhand verschiedener Einsatzgebiete dieses Wissen maschinell verarbeitet wird mit Hinblick auf die Realisierung von Systemen der künstlichen Intelligenz. Literatur: - Stuart J. Russell, Peter Norvig: Künstliche Intelligenz. Ein moderner Ansatz. Pearson Studium 2004 - Daniel Jurafsky and James H. Martin. Speech and Language Processing. An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition. Second Edition. Prentice-Hall, 2008 - Peter Flach. Machine Learning: The Art and Science of Algorithms that Make Sense of Data. First Edition. Cambridge University Press, 2012 Vorleistung:  Infolink:  Bemerkung: Im Masterstudiengang CPS ist die Veranstaltung ausschließlich für Studierende im Einstiegsschwerpunkt für Ingenieurinnen und Ingenieure wählbar.", "en": "Description: For more than 50 years, researchers have been trying to build systems that are \"intelligent\". However, the exact definition of \"intelligence\" is still highly disputed. In order to operationalize \"artificial intelligence\", the computer needs to represent knowledge in some way. In this lecture, we will learn how artificial intelligence can be achieved. For this purpose, we will examine a wide range of practical application.  Detailed Contents: - History of AI - Definition of Intelligence - Agents - Agent Architectures - Properties of Environments - Search - Uninformed Search (BFS, DFS) - Informed Search (Greedy, A*) - Local Search (Genetic Algorithms) - Uncertainty / Probabilistic Models - Machine Learning - Classification (Naive Bayes, Decision Trees) - Clustering - Regression - Evaluation - Applications of AI (Language processing, image analysis, etc.) Learning Targets: Students learn about different definitions of \"Artificial Intelligence\" as well as approaches for representing knowledge in a computer. They understand - based on several application areas - how knowledge can be automatically processed with the goal of building systems that can be considered intelligent.  Literature: - Stuart J. Russell, Peter Norvig: Künstliche Intelligenz. Ein moderner Ansatz. Pearson Studium 2004 - Daniel Jurafsky and James H. Martin. Speech and Language Processing. An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition. Second Edition. Prentice-Hall, 2008 - Peter Flach. Machine Learning: The Art and Science of Algorithms that Make Sense of Data. First Edition. Cambridge University Press, 2012 Pre-Qualifications:  Info Link:  Notice: In the CPS master's program, the course is only elective for students in the entry-level engineering concentration."}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Nachrichtentechnik": {"name": "Nachrichtentechnik", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/153/detail", "id": "153", "description": {"de": "Beschreibung: Die Veranstaltung vermittelt die Grundlagen nachrichtentechnischer Übertragungssysteme. Im ersten Kapitel werden klassische analoge Übertragungsverfahren behandelt, wie z.B. die Ein- und zweiseitige Amplitudenmodulation (AM) mit und ohne Trägersignal, die Restseitenbandmodulation und schließlich die Phasenmodulation incl. der Frequenzmodulation. Gegenstand des zweiten Kapitels sind konsequenterweise die wesentlichen digitalen Modulationsverfahren, d.h. Amplitudenumtastung, Phasenumtastung, Frequenzumtastung, Quadratur-AM, Kontinuierliche Phasenumtastung, etc. Lernziele: Die Studenten sind fähig, die wichtigsten Zusammenhänge und Prinzipien (analoge und digitale Modulationsarten) zu erklären, anzuwenden und die zugehörigen Konzepte kritisch zu hinterfragen. Literatur: J. G. Proakis: Digital Communications, McGraw Hill, New York 1995,Third Edition K. D. Kammeyer: Nachrichtenübertragung, Vieweg+Teubner, Wiesbaden 2008, 4. Auflage J. G. Proakis, M. Salehi: Grundlagen der Kommunikationstechnik, Pearson Studium, München 2004, 2. Auflage   Vorleistung:  Infolink:  Bemerkung: alter Titel: Signalübertragung und Modulation", "en": "Description: The course explains the fundamental principles of classical analog communication systems such as single and double sideband AM with and without carrier, vestigial sideband modulation and phase modulation including frequency modulation. Conseqeuntly, in the second chapter the essential digital modulation schemes such as amplitude, phase, and freqeuncy keying, quadrature AM and phase continous keying are covered. Learning Targets: The students are able to explain, apply and critically examine the essential relations and corresponding principles (concerning analog and digital modulation schemes). Literature: J. G. Proakis: Digital Communications, McGraw Hill, New York 1995,Third Edition K. D. Kammeyer: Nachrichtenübertragung, Vieweg+Teubner, Wiesbaden 2008, 4. Auflage J. G. Proakis, M. Salehi: Grundlagen der Kommunikationstechnik, Pearson Studium, München 2004, 2. Auflage   Pre-Qualifications:  Info Link:  Notice: old Name: Transmission and Modulation"}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Theorie linearer Systeme Praktikum": {"name": "Theorie linearer Systeme Praktikum", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/152/detail", "id": "152", "description": {"de": "Beschreibung: Im Rahmen des Praktikums „Theorie linearer Systeme“ führen die Studierenden Experimente zu einigen Themengebieten der Systemtheorie durch und werten diese mit wissenschaftlichen Methoden aus. Die Experimente umfassen Teilgebiete der Vorlesung: Messung von Übertragungsfunktionen von linearen zeitinvarianten Systemen, Entwurf von digitalen Filtern usw. Lernziele: Durch den praktischen Umgang mit der Thematik soll den Studierenden das Verständnis erleichtert werden und die Arbeitsmethoden vermittelt werden. Die Studierenden sind in der Lage, Messaufbauten zu erstellen und Versuche durchzuführen. Sie beurteilen und analysieren die Ergebnisse der Versuche. Literatur: Praktikumsunterlagen Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Within the practical excercises, the students perform experiments in several topics related to system theory. They evaluate the measurement data using scientific methods. The experiments include important topics of the lecture like measuring transfer functions, the design of digital filters etc. Learning Targets: The experiments help the students to deepen their insights in system theory and introduce them to some scientific experimental methods. The students are capable of building up test arrangements and carrying out experiments. They evaluate and analyse the measurement results. Literature: Praktikumsunterlagen Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Theorie linearer Systeme": {"name": "Theorie linearer Systeme", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/151/detail", "id": "151", "description": {"de": "Beschreibung: Es werden Grundbegriffe und Methoden der Theorie linearer Systeme besprochen. Nach der Diskussion von Testsignalen, insbesondere der Diracschen Delta-Funktion wird die Beschreibung linearer zeitkontinuierlicher Systeme im Zeitbereich durch deren Impulsantwort behandelt. Die Berechnung des Ausgangssignals mit Hilfe des Faltungsintegrals wird ausführlich diskutiert. Die Fourier- und Laplace-Transformation als Beschreibungsmöglichkeiten im Frequenzbereich werden abgeleitet und deren wichtigste Rechenregeln sowie der Zusammenhang dieser Transformationen erläutert. Es folgt die Hilbert-Transformation, die unter bestimmten Bedingungen den Zusammenhang zwischen Real- und Imaginärteil sowie zwischen Dämpfungs- und Phasenfunktion einer Fourier-Transformierten darstellt. Abschließend werden das Abtasttheorem sowie lineare zeitdiskrete Systeme und deren Beschreibung mit Hilfe der z-Transformation behandelt. Lernziele: Absolventen sind in der Lage, lineare Systeme im Zeit- und Frequenzbereich umfassend zu beschreiben. Besonders durch den großen Übungsanteil werden die Fähigkeiten zum praktischen Einsatz der erlernten Methoden gestärkt. Diese Methoden sind essentiell für den Bereich der Ingenieurwissenschaften und der Physik und universell einsetzbar. Literatur: R. Unbehauen: Systemtheorie, Oldenbourg-Verlag, 5. Aufl. 1990  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Fundamental notions and methods concerning the theory of linear systems will be discussed. After having discussed test signals and in particular Dirac delta-functions, the description of linear time-continuous systems in the time domain through their impulse response will be handled. The computation of the output signal with the help of the convolution integral will be discussed in detail. The Fourier and Laplace transforms, being the adequate description method in the frequency domain, will be deduced and the most important rules applying to them as well as the relationship between all these transforms will be elucidated.  This is followed by the Hilbert transform, which - under certain specific conditions - describes the relationship between real and imaginary parts, as well as that between damping and phase functions in a Fourier transform. In conclusion, the sampling theorem as well as linear time discrete systems and their description with the help of the Z- transform, will be discussed. Learning Targets: Students who have completed this course should be able to extensively describe linear systems in time and frequency domains. Particularly by the large percentage occupied by exercise sessions, the abilities of practical application of these methods will be intensified. These methods and tools used to describe linear systems are essential in the domains of engineering and physics and can be applied universally. Literature: R. Unbehauen: Systemtheorie, Oldenbourg-Verlag, 5. Aufl. 1990  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Communications), PO15 - B-CE(Com)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/29/detail", "id": "29", "type": "StudyCourse"}}, "Fundamentals of Programming Lab": {"name": "Fundamentals of Programming Lab", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/297/detail", "id": "297", "description": {"de": "Beschreibung: Im Praktikum werden jeweils zum Stoff der gleichnamigen Vorlesung passend kleinere Aufgaben gestellt, die selbständig gelöst und lauffähig in C implementiert werden müssen. Die Aufgabenblöcke beinhalten als Schwerpunkte: - Ein- und Ausgabe von Zahlen und einzelnen Zeichen in einem Hauptprogramm, in dem kleine Formeln berechnet oder einfache Quizaufgaben umgesetzt werden. - Schleifen: for-, do-, while-Schleife. - (nicht rekursive) Funktionen und Funktionsaufrufe: einfache Formeln, einfache Reihen. - Felder zur Vektor- und Matrixrechnung: Ein- und Ausgabe, einfache Vektor- und Matrixoperationen. - Strukturen: Ein- und Ausgabe, Komponentenzugriffe, als Parameter und Rückgabewerte. - Zeiger auf und Adressen von: atomaren Werten, Feldern, Zeichenketten und Strukturen, als Parameter und Rückgabewerte. - dynamische Speicherverwaltung: Liste, Kellerstapel oder Warteschlange. Lernziele: Die Studierenden sammeln erste eigene Programmiererfahrung an kleinen Programmierbeispielen. Sie setzen das in der zugehörigen Vorlesung vermittelte Programmierwissen zeitnah zur Vorlesung um und können die grundlegenden prozeduralen Programmierkonzepte in C anwenden. Literatur: - K. N. King. C Programming: a modern approach. W. W. Norton &amp; Company, Inc. New York. 2nd edition. 2008. ISBN 978-0-393-97950-3. - Brian W. Kernighan, Dennis M. Ritchie. The C Programming Language. Prentice Hall International. 2nd edition. 1988. ISBN: 978-0-131-10362-7. - R. Sedgewick. Algorithms in C. Prentice Hall. 2009. ISBN 978-0-768-68233-5. - ISO/IEC 9899:2011. Information technology -- Programming languages -- C. Committee Draft — April 12, 2011. http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf  Vorleistung: Paralleler (oder vorheriger) Besuch der Veranstaltung \"Grundlagen der Programmierung 1/Fundamentals of Programming 1\" Infolink:  Bemerkung: Die Veranstaltung „Fundamentals of Programming (FoP)“ wird mit der Veranstaltung „Procedural Programming (PP)\" fusioniert.\r\nPP hat den Veranstaltungstermin von FoP für die Vorlesung übernommen und den Übungstermin von FoP belassen.", "en": "Description: In the practical fitting to the topics in the related lecture small tasks have to be solved on their own and implemented and running in C. The task blocks focus on: - input and output of numbers and single characters in the main function calculating small formulas or implementing simple quizzes. - loops: for, do, while loop. - (non recursive) functions and functions calls: simple formulas, simple series. - arrays for vector and matrix calculations: input and output, simple vector and matrix operations. - Structures: input and output, access to components, as parameters and as return values. - pointers to and addresses from: atomar data, arrays, strings, as parameters and as return values. - dynamic memory management: storage handling: list, stack or queue to be implemented. Learning Targets: The students get first own programming experience based on smaller programming tasks. Introduced programming knowledge they realise soon in time to lecture and learn to use basic procedural programming concepts in C. Literature: - K. N. King. C Programming: a modern approach. W. W. Norton &amp; Company, Inc. New York. 2nd edition. 2008. ISBN 978-0-393-97950-3. - Brian W. Kernighan, Dennis M. Ritchie. The C Programming Language. Prentice Hall International. 2nd edition. 1988. ISBN: 978-0-131-10362-7. - R. Sedgewick. Algorithms in C. Prentice Hall. 2009. ISBN 978-0-768-68233-5. - ISO/IEC 9899:2011. Information technology -- Programming languages -- C. Committee Draft — April 12, 2011. http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf  Pre-Qualifications:  Info Link:  Notice: The lecture \"Fundamentals of Programming (FoP) will be merged with the lecture \"Procedural Programming (PP)\".\r\nPP takes over the schedule date from FoP for the lecture, whereas the schedule date for the lab is the same as FoP."}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO15 - B-CE(SE)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/27/detail", "id": "27", "type": "StudyCourse"}}, "Fundamentals of Programming": {"name": "Fundamentals of Programming", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/296/detail", "id": "296", "description": {"de": "Beschreibung: Die Programmiersprache C ist weit verbreitet insbesondere für technische, technisch-wissenschaftliche, schnelle industrielle und eingebettete Anwendungen sowie bus- und netzwerkbasierte Kommunikationslösungen. In der Vorlesung wird die algorithmische Methodik eingeführt und deren prozedurale Umsetzung in die Programmiersprache C vorgestellt. Die Technik des modularen und strukturierten Programmaufbaus wird an ausgewählten Beispielen demonstriert. Inhaltsübersicht: - Einführung; - Algorithmen, Top-Down- und Bottom-Up-Entwurf; - Vom Algorithmus zum Programm, Aufgabe von Präprozessor, Übersetzer und Binder; - Atomare Datentypen und deren Ein- und formatierte Ausgabe, Literale; - Ausdrücke und Anweisungen; - Felder; - Funktionen; - Einfache Such- und Sortierverfahren; - Strukturen; - Zeiger und Adressen; - Dynamische Speicherreservierung und Speicher-Management-Funktionen; - Einfache dynamische Datenstrukturen: Listen, Kellerstapel, Warteschlangen. Lernziele: Die Studierenden kennen und verstehen die grundlegenden Konzepte der prozeduralen Programmierung. Sie können kleinere Problemstellungen und Beispiele algorithmisch aufarbeiten und in der Programmiersprache C selbständig implementieren. Sie sind in der Lage, sich selbständig in andere prozedurale Programmiersprachen einzuarbeiten. Literatur: - K. N. King. C Programming: a modern approach. W. W. Norton &amp; Company, Inc. New York. 2nd edition. 2008. ISBN 978-0-393-97950-3. - P. Deitel, H. Deitel, A. Deitel. C for Programmers. Prentice Hall. 2013. ISBN-13: 978-0133462067. - Brian W. Kernighan, Dennis M. Ritchie. The C Programming Language. Prentice Hall International. 2nd edition. 1988. ISBN: 978-0-131-10362-7. - R. Sedgewick. Algorithms in C. Prentice Hall. 2009. ISBN 978-0-768-68233-5. - Jürgen Wolf. C von A bis Z: Das umfassende Handbuch: Das umfassende Handbuch für Linux, Unix und Windows. Galileo Computing. 3. Auflage. 2009. - http://www.open-std.org/jtc1/sc22/wg14/ Vorleistung:  Infolink:  Bemerkung: Die Veranstaltung „Fundamentals of Programming (FoP)“ wird mit der Veranstaltung „Procedural Programming (PP)\" fusioniert.\r\nPP hat den Veranstaltungstermin von FoP für die Vorlesung übernommen und den Übungstermin von FoP belassen.", "en": "Description: A widely used programming language is C, especially for technical, scientific, fast industrial applications, embedded solutions as well as for network and communication applications. The lecture introduces the algorithmic method and their procedural implementation in the programming language C. The techniques of a modular and structured programs are shown given practical examples. Topics: - introduction; - algorithms, top-down- and bottom-up-design; - from algorithm to program, task of preprocessor, compiler and linker; - atomic data types and their input and formatted output, literals; - expressions and statements; - arrays; - functions; - simple searching and sorting methods; - structures; - pointers and addresses; - dynamic memory allocation and memory management functions; - simple dynamic data structures: lists, stacks, queues. Learning Targets: The students know and understand the basic concepts of procedural programming. Small problems and examples they can algorithmically analyse and implement in C on their own. They are able to teach themselves different other procedural programming languages. Literature: - K. N. King. C Programming: a modern approach. W. W. Norton &amp; Company, Inc. New York. 2nd edition. 2008. ISBN 978-0-393-97950-3. - P. Deitel, H. Deitel, A. Deitel. C for Programmers. Prentice Hall. 2013. ISBN-13: 978-0133462067. - Brian W. Kernighan, Dennis M. Ritchie. The C Programming Language. Prentice Hall International. 2nd edition. 1988. ISBN: 978-0-131-10362-7. - R. Sedgewick. Algorithms in C. Prentice Hall. 2009. ISBN 978-0-768-68233-5. - Jürgen Wolf. C von A bis Z: Das umfassende Handbuch: Das umfassende Handbuch für Linux, Unix und Windows. Galileo Computing. 3. Auflage. 2009. - http://www.open-std.org/jtc1/sc22/wg14/ Pre-Qualifications:  Info Link:  Notice: The lecture \"Fundamentals of Programming (FoP) will be merged with the lecture \"Procedural Programming (PP)\".\r\nPP takes over the schedule date from FoP for the lecture, whereas the schedule date for the lab is the same as FoP."}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO15 - B-CE(SE)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/27/detail", "id": "27", "type": "StudyCourse"}}, "Nicht-technischer Katalog BA 1": {"name": "Nicht-technischer Katalog BA 1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/307/detail", "id": "307", "description": {"de": "Beschreibung: Mit diesem Modul soll den Studierenden die Möglichkeit gegeben werden, im Rahmen des Studiums neben den rein technischen Veranstaltungen auch so genannte „nicht-technische Fächer“ nachweislich zu belegen. Die Veranstaltungen können aus dem gesamten Angebot der Universität Duisburg-Essen gewählt werden, wobei das „Institut für Optionale Studien“ (IOS) einen Katalog mit Veranstaltungen aus dem so genannten Ergänzungsbereich vorhält. Lernziele: Ziel des Moduls ist die Vertiefung der Allgemeinbildung der Studierenden und ggf. die Verstärkung der sprachlichen Kompetenz sowie eine Stärkung der Berufsbefähigung durch das Erlernen von Teamfähigkeit und Präsentationstechniken. Literatur: Spezifisch für das gewählte Thema Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This module offers the students the opportunity to, besides the pure technical courses they take, attend some so called “non-technical subjects” and latter provide an attest for them. These courses can be chosen from the overall offers of the Duisburg-Essen university, whereby the “Institut für Optionale Studien“(IOS) proposes a catalog containing courses which fall under the named supplementary area. Learning Targets: The module aims at deepening the general knowledge of the students and resp. at improving their language skills as well as strengthening their professional qualifications through the learning of teamwork and expose techniques. Literature: Spezifisch für das gewählte Thema Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO15 - B-CE(SE)-15", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/27/detail", "id": "27", "type": "StudyCourse"}}, "Bachelor-Abschlussarbeit (ISE)": {"name": "Bachelor-Abschlussarbeit (ISE)", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/310/detail", "id": "310", "description": {"de": "Beschreibung: Die Bachelor-Arbeit ist eine Prüfungsarbeit, die die wissenschaftliche Ausbildung eines jeden Bachelor-Studiengangs des Studienprogramms „ISE“ abschließt. Sie soll zeigen, dass die oder der Studierende in der Lage ist, innerhalb einer vorgegebenen Frist ein Problem aus dem jeweiligen Bereich der Ingenieurwissenschaften selbstständig mit wissenschaftlichen Methoden zu bearbeiten und verständlich darzustellen. Lernziele: Die Bachelor-Arbeit soll zeigen, dass die oder der Studierende in der Lage ist, innerhalb einer vorgegebenen Frist ein Problem aus dem jeweiligen Bereich der Ingenieurwissenschaften selbstständig mit wissenschaftlichen Methoden zu bearbeiten und verständlich darzustellen. Literatur: Spezifisch für das gewählte Thema Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The bachelor thesis is an examination paper which concludes the scientific education in every bachelor degree course within the academic program “ISE”. It is used to show that a student is capable of processing a problem from the corresponding field of engineering sciences autonomously and with scientific methods and presenting it comprehensibly, within a given period of time. Learning Targets: The bachelor thesis is used to show that a student is capable of processing a problem from the corresponding field of engineering sciences autonomously and with scientific methods and presenting it comprehensibly, within a given period of time. Literature: Spezifisch für das gewählte Thema Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Industrial Internship": {"name": "Industrial Internship", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/309/detail", "id": "309", "description": {"de": "Beschreibung: Studierende eines Bachelor-Studiengangs des Studienprogramms ISE haben eine berufspraktische Tätigkeit (Industriepraktikum) im Umfang von insgesamt mindestens 13 Wochen spätestens bei der Anmeldung zur Bachelor-Arbeit nachzuweisen. Die Praktikantin oder der Praktikant hat im Praktikum die Möglichkeit, einzelne Bereiche eines Industrieunternehmens kennen zu lernen und dabei das im Studium erworbene Wissen umzusetzen. Ein weiterer wesentlicher Aspekt liegt im Erfassen der soziologischen Seite des unternehmerischen Geschehens. Die Praktikantin oder der Praktikant muss den Betrieb auch als Sozialstruktur verstehen und das Verhältnis Führungskräfte - Mitarbeiter kennen lernen, um so ihre oder seine künftige Stellung und Wirkungsmöglichkeit richtig einzuordnen. Lernziele: Im Studienverlauf soll das Praktikum das Studium ergänzen und erworbene theoretische Kenntnisse in ihrem Praxisbezug vertiefen. Die berufspraktische Tätigkeit in Industriebetrieben ist förderlich zum Verständnis der Vorlesungen und zur Mitarbeit in den Übungen zum Studium der ISE-Studiengänge. Als wichtige Voraussetzung für ein erfolgreiches Studium im Hinblick auf die spätere berufliche Tätigkeit ist sie wesentlicher Bestandteil des Studienganges. Literatur:  Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Students enrolled in a bachelor degree course of the ISE study program must attest an industrial internship totaling at least 13 weeks, latest before the registration date of their Bachelor Thesis. The intern has during his internship the possibility to become acquainted with different departments of an Industry and in so doing being able to implement the knowledge acquired during the studies. Another important aspect is the apprehension of the social side of the company. The intern should as well apprehend a company as a social structure; he/she should come to understand the relationship senior staff-employee in order to properly estimate his or her future position and its influence in a company. Learning Targets: The internship is scheduled for several reasons: It should complement the studies and deepen the acquired theoretical knowledge while putting them in practice. The practice-oriented training in the industry is advantageous for the understanding of the lectures and for the co-working during the exercises sessions from the different study fields of the ISE program. Being a capital requirement for a successful study with regard to the future professional life, the internship is and remains an essential part of a course of studies. Literature:  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Regelungstechnik EIT": {"name": "Regelungstechnik EIT", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/157/detail", "id": "157", "description": {"de": "Beschreibung: Die Lehrveranstaltung besteht aus den folgenden Kapiteln: 1. Einführung 2. Modellbildung dynamischer Systeme 3. Stabilitätsuntersuchung 4. Synthese von Regelkreisen 5. Verfahren zum Reglerentwurf 6. Synthese durch Veränderung der Regelungsstruktur Im ersten Teil wird die klassische Regelungstechnik fortgesetzt. Für den Reglerentwurf werden empirische Einstellregeln, Gütekriterien im Zeitbereich und Methoden im Frequenzbereich (Polkompensation, Betragsoptimum, symmetrisches Optimum) behandelt. Dann werden in der Praxis häufig verwendete strukturelle Varianten des Regelkreises, wie z.B. Split-Range-Regelung, Verhältnisregelung, Regler mit zwei Freiheitsgraden (Vorfilter und Vorwärtssteuerung), Störgrößenaufschaltung, Kaskadenregelung, Smith-Prädiktorregler für Totzeitstrecken u.a. betrachtet. Lernziele: Die Studierenden sollen Grundfunktionen automatisierungstechnischer Systeme analysieren können. Sie sollen das Verhalten von linearen zeitinvarianten dynamischen Systemen und Regelkreisen im Zeit- und Frequenzbereich beschreiben und analysieren können und deren Stabilität untersuchen können. Ferner sollen sie in der Lage sein, einfache Regler zu konzipieren und applizieren. Literatur: [1] S. X. Ding, Vorlesungsskript \"Einführung in die Automatisierungstechnik\" (wird jährlich aktualisiert, per Download verfügbar). [2] H. Unbehauen, Regelungstechnik 1. Vieweg, Braunschweig u.a., 13. Aufl. 2005. [3] G.F. Franklin und J. D. Powell et al..: Feedback Control of Dynamic Systems. Pearson Prentice Hall, Upper Saddle River, 5th ed. 2006. [4] J. Lunze, Regelungstechnik 1, 2. Auflage, Springer-Verlage, 1999. Vorleistung: Inhaltliche Voraussetzungen: Mathematik 1-3 (vor allem lineare Differentialgleichungen und Laplace-Transformation). Besonders nützlich ist auch die Vorlesung \"Theorie linearer Systeme\".  Infolink:  Bemerkung: bisheriger Titel: Einführung in die Automatisierungstechnik", "en": "Description: The lecture consists of the following chapters. 1: Introduction 2. Modelling of dynamic systems 3. Stability study 4. Synthesis of feedback control systems 5. Design methods 6. Variations of control structures Learning Targets: The students should be able to analyze basic components in automatic control systems. They should be able to describe and analyze linear time-invariant dynamic systems and closed control loops and to check the stability. They should further be able to design simple controllers and parameterized them. Literature: [1] S. X. Ding, Vorlesungsskript \"Einführung in die Automatisierungstechnik\" (wird jährlich aktualisiert, per Download verfügbar). [2] H. Unbehauen, Regelungstechnik 1. Vieweg, Braunschweig u.a., 13. Aufl. 2005. [3] G.F. Franklin und J. D. Powell et al..: Feedback Control of Dynamic Systems. Pearson Prentice Hall, Upper Saddle River, 5th ed. 2006. [4] J. Lunze, Regelungstechnik 1, 2. Auflage, Springer-Verlage, 1999. Pre-Qualifications:  Info Link:  Notice: previous Name: Introduction to Automation"}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Computer Based Engineering Mathematics Lab Project": {"name": "Computer Based Engineering Mathematics Lab Project", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/304/detail", "id": "304", "description": {"de": "Beschreibung: Praktikum zur Vorlesung Computer Based Engineering Mathematics. Umsetzen und Vertiefen der in der Vorlesung erarbeiteten Inhalte. Lernziele: Die Studierenden sind in Lage, die in der zugehörigen Vorlesung vermittelten Inhalte in den Projekten und gestellten Übungsaufgaben umzusetzen. Literatur: .1 Skript der Vorlesung .2 Gramlich, G; Werner, W.: Numerische Mathematik mit MATLAB, dpunkt.verlag, Heidelberg, ISBN 3-932588-55-X Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: These labs/projects are the part of the lecture Computer Based Engineering Mathematics. Its purpose is to implement and deepen the knowledge acquired during lecture.  Learning Targets: The students are able to apply the methods learned during the lectures through projects. Literature: .1 Skript der Vorlesung .2 Gramlich, G; Werner, W.: Numerische Mathematik mit MATLAB, dpunkt.verlag, Heidelberg, ISBN 3-932588-55-X Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Computer Based Engineering Mathematics": {"name": "Computer Based Engineering Mathematics", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/303/detail", "id": "303", "description": {"de": "Beschreibung: Darstellung computergerechter numerischer Verfahren der Ingenieur-Mathematik unter Anwendung problemspezifischer Software wie MATLAB. Insbesondere werden folgende Probleme behandelt: (i) Lineare Gleichungssystem: LU-Zerlegung, Cholesky-Faktorisierung, Normen, Fehler und Konditionszahlen, iterative Lösungsmethoden (Gauss-Seidel, Jacobi), lineare Ausgleichsrechnung (ii) Nichtlineare Gleichungen und Gleichungssysteme - Taylorentwicklung, Linearisierung, Iterationsverfahren, Newtonverfahren, Jacobimatrix, Fixpunkte und Verzweigungen, Singularitäten, Genauigkeit der Lösung, Parameterabhängige Gleichungssysteme, Kurvenverfolgung, nichtlineare Ausgleichsrechnung (iii) Partielle Differentialgleichungen - AWP-RWP, Diskretisierungsverfahren, Anwendung auf die Schwingungs- und Wärmeleitungsgleichung Lernziele: Die Studierenden können eigenständig ingenieurtechnische Probleme mit Hilfe spezifischer Software formulieren und lösen. Sie können ferner: - exakte und numerische Lösungen vergleichen - berechnete Resultate interpretieren und validieren - Ergebnisse durch grafische Visualisierung darstellen. Literatur: .1 Skript der Vorlesung (in deutscher und englischer Sprache) .2 Gramlich, G; Werner, W.: Numerische Mathematik mit MATLAB, dpunkt.verlag, Heidelberg, ISBN 3-932588-55-X Vorleistung: Mathematics I, II Infolink:  Bemerkung: ", "en": "Description: Computer Based Engineering Mathematics is designed to solve the problems in Engineering Mathematics using application softwares e.g. MATLAB. In particular, the following problems will be investigated. (i) Linear system of equations: LU decomposition, Cholesky factorization, norms, accuracy of solutions and condition numbers, iterative solution methods (Gauss-Seidel, Jacobi), linear curve fitting (ii) Non-linear equations and equation systems - Taylor expansion, linearization, iteration methods, Newton methods, Jacobian, fixpoints and bifurcations, singularities, accuracy of the solution, parameter depending equation systems, curve pursuit, non-linear curve fitting (iii) Partial Differential Equations - IVP-BVP, discretization, applications to the vibration equation and the heat transfer equation Learning Targets: The students are able to formulate and solve engineering problems using specific software without any assistance. Furthermore, they sare able to - compare exact and numerical solutions - interpret and validate calculated results - present results by graphical visualization. Literature: .1 Skript der Vorlesung (in deutscher und englischer Sprache) .2 Gramlich, G; Werner, W.: Numerische Mathematik mit MATLAB, dpunkt.verlag, Heidelberg, ISBN 3-932588-55-X Pre-Qualifications: Mathematics I, II,  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Mathematics I2": {"name": "Mathematics I2", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/287/detail", "id": "287", "description": {"de": "Beschreibung: Vertiefung der in der Veranstaltung Mathematik I1 erworbenen Kenntnisse. Insbesondere soll ein Verständnis für mehrdimensionale Probleme geschaffen werden. Inhalte: Kurven im IR(n), Funktionen mehrerer Veränderliche, Grenzwert und Stetigkeit, Partielle Ableitungen, Lokale Extremwerte, Vektorfelder, Kurvenintegrale, Mehrfach-Integrale, Einführung in die gewöhnlichen Differentialgleichungen, Laplace Transformation, Fourier-Reihen, Einführung in die partiellen Differentialgleichungen, Fourier-Transformation. Lernziele: Die Studierenden erweitern die Fähigkeit, mathematische Aufgabenstellungen zu lösen und ingenieurtechnische Probleme mathematisch zu modellieren. Sie sind ferner in der Lage, Probleme der mehrdimensionalen Analysis zu lösen. Literatur: ·1 Forster, Otto: Analysis 2, Differentialrechnung im IR(n), Gewöhnliche Differentialgleichungen, Vieweg &amp; Sohn, ISBN 3-499-27031-5 ·2 Swokowski, Earl. W: Calculus with Analytic Geometry, Second Edition, Prindle, Weber &amp; Schmidt, Boston, Massachusetts 1979, ISBN 0-87150-268-2 ·3 Ash, Carol; Ash, Robert B.: The Calculus Tutoring Book, IEEE Press, University of Illinois at Urbana-Champaign, ISBN 0-87942-183-5 ·4 Livesley, R. K.: Mathematical Methods for Engineers, Ellis Horwood Limited, Chichester, West Sussex, England 1989, ISBN 0-7458-0714-3 .5 Kreyszig, Erwin: Advanced engineering mathematics, 7th ed. John Wiley &amp; Sons, Inc., New York Chichester Brisbane Toronto Singapore 1993 ·6 Jordan, D. W.; Smith, P.: Mathematical Techniques, Second Edition, Oxford University Press, New York 1997, ISBN 0 19 856461 9 ·7 Papula, Lothar: Mathematik für Ingenieure und Naturwissenschaftler, Band 1 und Band 2, 10. Auflage, Vieweg &amp; Sohn, Braunschweig/Wiesbaden 2001, ISBN 3-528-94237-1 ·8 Apostol, T.M.: Calculus I, II, Xerox College Publishing: Lexton-Mass., Toronto 1967 .9 Skript der Vorlesung (in englischer Sprache)  Vorleistung: Mathematics I Infolink:  Bemerkung: ", "en": "Description: The aim of this course is to deepen the knowledge acquired in the lecture Mathematics I1. In particular, an understanding of multidimensional problems will be developed. Topics: Vector-valued functions (Curves in IR(n)), Functions of several variables, Limits and Continuity, Partial Derivatives, Local extrema, Vectorfields, Line Integrals, Multiple integrals, Introduction to ODE, Laplace transforms, Fourier series, Introduction to PDE, Fourier transform. Learning Targets: The students expand the skill of solving mathematical task formulations and modelling engineering problems mathematically. They are also in a position to solve multidimensional analysis problems. Literature: ·1 Forster, Otto: Analysis 2, Differentialrechnung im IR(n), Gewöhnliche Differentialgleichungen, Vieweg &amp; Sohn, ISBN 3-499-27031-5 ·2 Swokowski, Earl. W: Calculus with Analytic Geometry, Second Edition, Prindle, Weber &amp; Schmidt, Boston, Massachusetts 1979, ISBN 0-87150-268-2 ·3 Ash, Carol; Ash, Robert B.: The Calculus Tutoring Book, IEEE Press, University of Illinois at Urbana-Champaign, ISBN 0-87942-183-5 ·4 Livesley, R. K.: Mathematical Methods for Engineers, Ellis Horwood Limited, Chichester, West Sussex, England 1989, ISBN 0-7458-0714-3 .5 Kreyszig, Erwin: Advanced engineering mathematics, 7th ed. John Wiley &amp; Sons, Inc., New York Chichester Brisbane Toronto Singapore 1993 ·6 Jordan, D. W.; Smith, P.: Mathematical Techniques, Second Edition, Oxford University Press, New York 1997, ISBN 0 19 856461 9 ·7 Papula, Lothar: Mathematik für Ingenieure und Naturwissenschaftler, Band 1 und Band 2, 10. Auflage, Vieweg &amp; Sohn, Braunschweig/Wiesbaden 2001, ISBN 3-528-94237-1 ·8 Apostol, T.M.: Calculus I, II, Xerox College Publishing: Lexton-Mass., Toronto 1967 .9 Skript der Vorlesung (in englischer Sprache)  Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Logical Design of Digital Systems": {"name": "Logical Design of Digital Systems", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/298/detail", "id": "298", "description": {"de": "Beschreibung: Diese Veranstaltung vertieft die Prinzipien des Entwurfs digitaler Systeme auf logischer Ebene. Vorausgesetzt werden Kenntnisse der Schaltalgebra, Karnaugh-Veitch Diagramme, sowie Grundkenntnisse der elementaren kombinatorischen und sequentiellen Schaltungen. Darauf aufbauend werden algorithmische Methoden zur Minimierung kombinatorischer und sequentieller Schaltungen vorgestellt, im Einzelnen der Algorithmus von Quien/McCluskey sowie der Moore-Algorithmus. Darüber hinaus werden grundlegende Schaltungen zum Aufbau von Rechnersystemen werden vorgestellt, wie z.B. Speicherstrukturen und Bussysteme sowie programmierbare Logikanordnungen. Abschließend werden Methoden zum Testen digitaler Schaltungen vorgestellt. Lernziele: Die Studierenden sind in der Lage, die für den Entwurf digitaler Schaltungen erforderlichen theoretischen Konzepte und Methoden anzuwenden. Literatur: 1. Bolton, M.: Digital systems design with programmable logic. Addison-Wesley, 1990. [43-YGQ 2458] 2. Almaini, A.E.A.: Kombinatorische und sequentielle Schaltsysteme. Prentice Hall, 1986. [43-YGQ 3030] 3. Ercegovac, M; Lang, T.; Moreno, J.: Introduction to digital Systems Wiley &amp; Sons, 1999 [45-YGQ 4133] 4. Roth, C.H.: Fundamentals of Logic Design PWS Publishing Company, 1995 [45-YGQ 4426] 5. Mano, M.M.; Kime, C.R.: Logic and Computer Design Fundamentals Pearson Prentice Hall, 2008 [45-YGQ 4264] 6. Tocci R.J.; Widmer N.S.: Digital Systems, Prentice Hall, 2001 [45-YGQ 1436] Vorleistung: Fundamentals of Computer Engineering 1 Infolink:  Bemerkung: Logischer Entwurf Digitaler Systeme", "en": "Description: This lecture deepens the principles of digital circuit design on logical level. Based upon the fundamentals of switching algebra, Karnaugh Veitch of diagrams, as well as basic combinatorial and sequential circuits, algorithmic approaches for their minimization are introduced, like the Quine/Mc Cluskey approach and the Moore‘s Algorithm. Further more, standard circuits of computer systems are presented, like e.g. memory structures and bus systems as well as programmable logig devices. Finally, methods for testing of digital ciruits are presented. Learning Targets: The students are able to use the theoretical concepts and methods necessary for digital circuits design. Literature: 1. Bolton, M.: Digital systems design with programmable logic. Addison-Wesley, 1990. [43-YGQ 2458] 2. Almaini, A.E.A.: Kombinatorische und sequentielle Schaltsysteme. Prentice Hall, 1986. [43-YGQ 3030] 3. Ercegovac, M; Lang, T.; Moreno, J.: Introduction to digital Systems Wiley &amp; Sons, 1999 [45-YGQ 4133] 4. Roth, C.H.: Fundamentals of Logic Design PWS Publishing Company, 1995 [45-YGQ 4426] 5. Mano, M.M.; Kime, C.R.: Logic and Computer Design Fundamentals Pearson Prentice Hall, 2008 [45-YGQ 4264] 6. Tocci R.J.; Widmer N.S.: Digital Systems, Prentice Hall, 2001 [45-YGQ 1436] Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Network Analysis": {"name": "Network Analysis", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/292/detail", "id": "292", "description": {"de": "Beschreibung: Dieser Kurs behandelt die Analyse linearer elektrischer Netzwerke. Ausgehend von der Modellvorstellung konzentrierter Bauelemente werden lineare passive und aktive Bauelemente (Quellen) definiert. Grundlegende Gesetzmäßigkeiten in elektrischen Netzwerken werden vermittelt und Methoden zur Analyse elektrischer Netzwerke werden erarbeitet. Ein Schwerpunkt bildet das Arbeiten mit Ersatzschaltungen, die komplexere Teile eines Netzwerks durch einfachere aber elektrisch äquivalente Teile ersetzen und Äquivalenztransformationen (Stern-Dreieck-Transformation, Quellentransformation, komplexe Serien-/ Parallel-Transformation). Die Beschreibung stationärer harmonischer Vorgänge wird über reelle Größen eingeführt und durch die Verwendung komplexer Zahlen formalisiert. Die elektrische Leistung wird sowohl für Gleich- als auch Wechselstromkreise eingeführt und in Verbindung mit Anpassungsbedinungen diskutiert.  Die Methode der Netzwerkanalyse wird abschließend auch auf magnetische Kreise und thermische Kreise erweitert. Lernziele: Die Studenten sind in der Lage: - Die Terminologie zur Beschreibung elektrischer Netzwerke korrekt zu verwenden - elementaren linearen passiven und aktiven Bauelementen den richtigen funktionalen Strom-Spannungs- Zusammenhang zuzuordnen. - Die Strom- und Spannungsverhältnisse in gegebenen elektrischen Netzwerken in mathematische Gleichungssysteme zu überführen und anschließend zu analysieren. - Teile eines Netzwerks durch Äquivalenzdarstellungen zu ersetzen - Einfache lineare elektrische Netzwerke bezüglich vorgegebener Anforderungen zu optimieren. - Stationäre harmonische Vorgänge sowohl durch eine reell-wertige, wie auch eine komplex-wertige Beschreibung zu erfassen - Die Eigenschaften linearer realer Bauelemente durch Ersatzschaltbilder idealer Bauelemente auszudrücken Literatur: - Ingo Wolf: Grundlagen der Elektrotechnik 2 - S.E. Schwarz, W. G. Oldham: Electrical Engineering: An Introduction ISBN-10: 0195105850 - Giorgio Rizzoni: Principles and Applications of Electrical Engineering; ISBN 0-256-17770-8  Vorleistung: Es gibt keine formalen Voraussetzungen, benötigt werden aber Kenntnisse über das Lösen linearer Gleichungen und das Rechnen mit komplexen Zahlen. Infolink:  Bemerkung: ", "en": "Description: This lecture course considers the analysis of linear electric networks. In the frame work of the lumped element model fundamental linear passive and active elements (sources) are defined. Fundamental laws in electric networks are introduced and methods for the analysis of electric networks are derived. A speccial focus is placed on equivalent circuits, replacing more complex parts of a network by simpler, but electrically equivalent parts and equivalent transformations (delta-Y-transformation, source transformation, complex serial-/ parallel transformation). Stationary harmonic processes are considered and described by real as well as complex quantities. Electric power is introduced for DC and AC circuits and power matching conditions are derived. Finally, the concept of network analysis is extended to magnetic circuits and thermal circuits. Learning Targets: The students are able: - to use the correct terminology in order to describe electric networks - to assign fundamental linear passive and active elements to their correct functional current-voltage-relation - to express the current-voltage relations of a given electric network by mathematical equations and to analyze the network subsequently - to substitute parts of a network by equivalent circuits - to optimize simple linear electric networks with respect to given parameters - to describe stationary harmonic processes by real and complex numbers - to express the properties of real linear components by equivalent circuits of ideal element Literature: - Ingo Wolf: Grundlagen der Elektrotechnik 2 - S.E. Schwarz, W. G. Oldham: Electrical Engineering: An Introduction ISBN-10: 0195105850 - Giorgio Rizzoni: Principles and Applications of Electrical Engineering; ISBN 0-256-17770-8  Pre-Qualifications: There are no formal requirements, but knowledge about solving linear equations and calculating complex numbers is needed. Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Mechanics I1": {"name": "Mechanics I1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/291/detail", "id": "291", "description": {"de": "Beschreibung: Inhalte der Lehrveranstaltung: - Einführung - Vektorbegriff - Kinematik von Punktmassen (Geometrie von Bewegungen) - Dynamik von Punktmassen (Wechselwirkung von Bewegungen und Kräften) - Kinematik und Dynamik von Systemen von Punktmassen (Schwerpunkt, Reaktionskräfte, Freiheitsgrad) - Drehbewegungen auf einer Ebene Lernziele: Die Studierenden sind in der Lage, die wichtigsten Theorien der Kinematik und Kinetik zu erklären und zur Lösung einer interdisziplinären Fragestellung beizutragen. Literatur: Gross, Hauger, Schnell: Technische Mechanik, Springer Hibbeler: Engineering Mechanics, Pearson Beer: Vector Mechanics for Engineers, McGraw-Hill Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Content of the course: - Introduction - Vector notation - Kinematics of point masses (geometry of motion) - Dynamics of point masses (interaction between forces and motion) - Kinematics and dynamics of multi-particle systems (centre of mass, constraint forces, degrees of freedom) - Rotational motion (planar) Learning Targets: Students are able to explain the main theories of kinematics and kinetics and contribute to the solution of interdisciplinary problems. Literature: Gross, Hauger, Schnell: Technische Mechanik, Springer Hibbeler: Engineering Mechanics, Pearson Beer: Vector Mechanics for Engineers, McGraw-Hill Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Measurement Technology": {"name": "Measurement Technology", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/288/detail", "id": "288", "description": {"de": "Beschreibung: Das Modul „Messtechnik“ vermittelt die Grundbegriffe der Metrologie und Messtechnik, es erarbeitet die elementaren Methoden der Unsicherheitsschätzung und Messdatenauswertung. Dabei wird auf den „Guide to the expression of uncertainty in measurement (GUM)“ zurückgegriffen. Weiterhin führt es die grundlegenden Methoden des Messens elektrischer Größen im Gleichspannungs- und niederfrequenten Wechselspannungsbereich ein und zeigt an vielen praktischen Beispielen deren Umsetzung. Es wird weiterhin die Umsetzung analoger in digitale Messsignale betrachtet und auf Unsicherheiten bzw. Mehrdeutigkeiten bei dieser Umsetzung eingegangen. Schließlich wird durch eine Einführung in die Sensorik auch das Messen nichtelektrischer Größen durch elektrische Messgeräte beispielhaft erarbeitet. Lernziele: Die Studenten sind in der Lage: • Messtechnische Aufgaben und Fragestellung in der richtigen Terminologie zu beschreiben • Zusammenhänge zwischen Messmethoden und methodenbedingten Messabweichungen zu erkennen • Eine Unsicherheitsabschätzung nach GUM durchzuführen • Im Bereich der Messung von Gleichspannungs- oder niederfrequenten Wechselspannungssignalen einfache Messeinrichtungen selbst zu dimensionieren oder geeignete Messgeräte auszuwählen • Selbständig Messungen zu planen, durchzuführen und auszuwerten Literatur: • Alan S. Morris: Measurement and Instrumentation Principles Vorleistung: Es gibt keine formalen Voraussetzungen zu Teilnahme, es werden aber Grundkenntnisse aus dem Bereich der Analyse elektrischer Netzwerke benötigt. Infolink:  Bemerkung: ", "en": "Description: The module introduces the basic terminology of the metrology and measurement technology and works out the basic methods for uncertainty- approximation and data analysis. It follows the “Guide to the expression of uncertainty in measurement (GUM)”. Further, it introduces elementary methods for the measurement of electric quantities in the DC and AC range and demonstrates their practical realization by examples. Further, the conversion of analog to digital data is considered with respect to uncertainties and ambiguity. Finally, the basics of sensoric are considered and used in order to introduce techniques for the measurement of non-electric quantities by electric devices. Learning Targets: The student are able: • to describe measurement problems and tasks by the correct terminology • to correlate the applied measurement method with expected measurement deviations • to estimate uncertainties according GUM • to develop simple measurements setups or to select adequate electric devices for the measure of electric quantities in the DC or AC range. • to arrange, perform and analyze measurements Literature: • Alan S. Morris: Measurement and Instrumentation Principles Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Mathematics I1": {"name": "Mathematics I1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/286/detail", "id": "286", "description": {"de": "Beschreibung: Aussagen- und Prädikatenlogik, Reelle Zahlen, Vollständige Induktion, Komplexe Zahlen, Folgen und Reihen reeller Zahlen, Exponential- und Logarithmusfunktion, Grenzwert einer Funktion, Stetigkeit, Trigonometrische Funktionen, Hyperbolische Funktionen, Differentiation, Differentiationsregeln, Höhere Ableitungen, Stammfunktionen, Integrationsregeln, Bestimmte Integrale, Eigenschaften bestimmter Integrale, Integrationsregeln, Uneigentliche Integrale, Extremwerte, Konvexe und konkave Funktionen, Extremwertaufgaben, L‘Hôpital Regel, Rotationskörper, Schwerpunkt einer Fläche, Gleichmäßige Konvergenz, Potenzreihen, Taylor Reihen, Vektorräume, Matrizen, Determinanten und ihre Eigenschaften, Lineare Gleichungssysteme, Eigenwerte, Eigenvektoren. Lernziele: Die Studierenden sind in der Lage, Methoden der Differential- und Integralrechnung einer reellen Variablen und der linearen Algebra anzuwenden. Literatur: ·1 Forster, Otto: Analysis 1, Differential- und Integralrechnung, 4. Auflage, Vieweg &amp; Sohn, Braunschweig 1983, ISBN 3-528-37224-9 ·2 Haußmann, Werner; Jetter, Kurt; Mohn, Karl-Heinz: Mathematik für Ingenieure, Teil I, Duisburg 1998 ·3 Cronin-Scanlon, Jane: Advanced Calculus, A Start in Analysis, D. C. Heath and Company, Lexington, Massachusetts 1969 ·4 Swokowski, Earl. W: Calculus with Analytic Geometry, Second Edition, Prindle, Weber &amp; Schmidt, Boston, Massachusetts 1979, ISBN 0-87150-268-2 ·5 Ash, Carol; Ash, Robert B.: The Calculus Tutoring Book, IEEE Press, University of Illinois at Urbana-Champaign, ISBN 0-87942-183-5 ·6 Livesley, R. K.: Mathematical Methods for Engineers, Ellis Horwood Limited, Chichester, West Sussex, England 1989, ISBN 0-7458-0714-3 ·7 Jordan, D. W.; Smith, P.: Mathematical Techniques, Second Edition, Oxford University Press, New York 1997, ISBN 0 19 856461 9 ·8 Papula, Lothar: Mathematik für Ingenieure und Naturwissenschaftler, Band 1 und Band 2, 10. Auflage, Vieweg &amp; Sohn, Braunschweig/Wiesbaden 2001, ISBN 3-528-94237-1 ·9 Apostol, T.M.: Calculus I, II, Xerox College Publishing: Lexton-Mass., Toronto 1967 10 Skript der Vorlesung (in englischer Sprache) Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: Propositional calculus, Predicate calculus, Real numbers, Mathematical Induction, Complex numbers, Sequences of real numbers, Series of real numbers, Complex exponential function, Logarithm and general exponential functions, Limits and continuity of functions, Trigonometric functions, Hyperbolic functions, Techniques of differentiation, Tangent lines and rates of change, Rules for finding derivatives, Higher order derivatives, Antiderivatives, Rules for finding antiderivatives, Definite integrals, Properties of definite Integrals, Techniques of indefinite integration, The first derivative test, The second derivative test, Convexity and Concavity, Applications of extrema, L‘Hôpital‘s Rule, Solids of revolution, Centroids of plane regions, Uniform convergence, Power series, Taylor series, Vector space, Matrices, Determinats and their properties, System of linear equations, Eigenvalues, Eigenvectors. Learning Targets: The students are able to apply required mathematical methods of calculus of one real variable and of linear algebra. Literature: ·1 Forster, Otto: Analysis 1, Differential- und Integralrechnung, 4. Auflage, Vieweg &amp; Sohn, Braunschweig 1983, ISBN 3-528-37224-9 ·2 Haußmann, Werner; Jetter, Kurt; Mohn, Karl-Heinz: Mathematik für Ingenieure, Teil I, Duisburg 1998 ·3 Cronin-Scanlon, Jane: Advanced Calculus, A Start in Analysis, D. C. Heath and Company, Lexington, Massachusetts 1969 ·4 Swokowski, Earl. W: Calculus with Analytic Geometry, Second Edition, Prindle, Weber &amp; Schmidt, Boston, Massachusetts 1979, ISBN 0-87150-268-2 ·5 Ash, Carol; Ash, Robert B.: The Calculus Tutoring Book, IEEE Press, University of Illinois at Urbana-Champaign, ISBN 0-87942-183-5 ·6 Livesley, R. K.: Mathematical Methods for Engineers, Ellis Horwood Limited, Chichester, West Sussex, England 1989, ISBN 0-7458-0714-3 ·7 Jordan, D. W.; Smith, P.: Mathematical Techniques, Second Edition, Oxford University Press, New York 1997, ISBN 0 19 856461 9 ·8 Papula, Lothar: Mathematik für Ingenieure und Naturwissenschaftler, Band 1 und Band 2, 10. Auflage, Vieweg &amp; Sohn, Braunschweig/Wiesbaden 2001, ISBN 3-528-94237-1 ·9 Apostol, T.M.: Calculus I, II, Xerox College Publishing: Lexton-Mass., Toronto 1967 10 Skript der Vorlesung (in englischer Sprache) Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Fundamentals of Computer Engineering 1 Lab": {"name": "Fundamentals of Computer Engineering 1 Lab", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/295/detail", "id": "295", "description": {"de": "Beschreibung: Die Laborübungen geben eine allgemeine Einführung in Möglichkeiten der computergestützten Entwicklung digitaler Schaltungen. Eingesetzt wird hierbei das Simulationssystem OrCAD. Hiermit erfolgen die Simulation und die Analyse von Grundbausteinen der Digitaltechnik sowie einfacher kombinatorischer und sequentieller Grundschaltungen. Lernziele: Die Studierenden sind in der Lage professionelle Entwurfssysteme zur Analyse und Simulation einfacher Bausteine und Schaltungen der Digitaltechnik anzuwenden. Literatur: (1) Versuchsunterlagen des Instituts (2) Datenblätter (http://www.ti.com) (3) Literatur zur Veranstaltung Grundlagen der Technischen Informatik Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: The lab introduces computer-aided design of digital circuits. Professional simulation tools are used to simulate and analyze basic components and circuits of simple combinatorial and sequential digital circuits. Learning Targets: The students are able to use professional computer aided design systems to analyze and simulate basic digital circuits. Literature: (1) Versuchsunterlagen des Instituts (2) Datenblätter (http://www.ti.com) (3) Literatur zur Veranstaltung Grundlagen der Technischen Informatik Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}, "Fundamentals of Computer Engineering 1": {"name": "Fundamentals of Computer Engineering 1", "url": "https://www.uni-due.de/vdb/en_EN/pruefung/294/detail", "id": "294", "description": {"de": "Beschreibung: Diese Vorlesung deckt die Grundlagen der technischen Informatik ab, wie sie für den Entwurf und die Analyse der Hardware nötig sind. Die Themen umfassen: Boolesche Algebra, grundlegende Methoden der Minimierung, arithmetische und logische Operationen mit Binärcodes, Entwurf digitaler Schaltkreise (Kombinatorische und sequentielle) sowie Grundlagen der Automatentheorie und der Mikroprogrammierung. Mit Hilfe der Wahrheitstabellen und der booleschen Algebra- werden die Komponenten digitaler Schaltkreise erklärt. Die vorgestellten Komponenten realisieren komplexere Funktionen wie sie grundsätzlich zum Aufbau von Rechnern benötigt werden. Lernziele: Die Studierenden lernen durch diese Veranstaltung die grundlegenden Denkweisen der Booleschen Algebra und Codierung kennen. Sie werden in den Stand versetzt, derartige Vorgehensweisen auf einfache Schaltungen der Rechnertechnik, aber auch auf andere Aufgabenstellungen anzuwenden. Literatur: 1 Roth, Charles: Fundamentals of Logic Design, PWS Publ., 2001 Boston, 45YGQ4426 2 Green, Derek C: Digital Electronics,Longman, 2002 Harlow, 45YGQ4434 3 Milos Ercegovac, Tomas Lang, Jaime H. Moreno: Introduction to Digital Systems, John Wiley &amp; Sons Inc, 1999 New York, 45YGQ1436 4 Ronald J. Tocci: Digital Systems: Principles and Applications, Prentice Hall, 1977 New Jersey, 43YGQ1436 5 John Crisp: Introduction to Digital Systems, Newnes, 2000 Oxford, 45YGQ4141 6 Judith L. Gersting: Mathematical Structures for Computer Science, W.H. Freeman and Company, 1982, New York, San Francisco, 01TVA1033 , 07TVA1033 , 45TVA1033 7 Frederick J. Hill, Gerald R. Peterson: Introduction to Switching Theory and Logical Design, John Wiley &amp; Sons Inc., 1974 Canada, 43YGQ175 Vorleistung:  Infolink:  Bemerkung: ", "en": "Description: This course covers the fundamentals of computer engineering necessary for design and analysis of hardware. The topics include Boolean algebra, basic minimization methods, coding of information, arithmetic and logic functions with binary codes, design of digital circuits (combinational and sequential) as well as basics of automata and microprogramming. Based on Boolean algebra and information coding, the functions of gates and similar components of digital circuits are explained. These components are used to design more complex functions up to the modules required for the setup of a basic microcomputer. Learning Targets: Students learn the way of thinking in the world of Boolean algebra and coding. They are able to use their knowledge for the design of simple digital circuits as well as to apply it to other fields of application. Literature: 1 Roth, Charles: Fundamentals of Logic Design, PWS Publ., 2001 Boston, 45YGQ4426 2 Green, Derek C: Digital Electronics,Longman, 2002 Harlow, 45YGQ4434 3 Milos Ercegovac, Tomas Lang, Jaime H. Moreno: Introduction to Digital Systems, John Wiley &amp; Sons Inc, 1999 New York, 45YGQ1436 4 Ronald J. Tocci: Digital Systems: Principles and Applications, Prentice Hall, 1977 New Jersey, 43YGQ1436 5 John Crisp: Introduction to Digital Systems, Newnes, 2000 Oxford, 45YGQ4141 6 Judith L. Gersting: Mathematical Structures for Computer Science, W.H. Freeman and Company, 1982, New York, San Francisco, 01TVA1033 , 07TVA1033 , 45TVA1033 7 Frederick J. Hill, Gerald R. Peterson: Introduction to Switching Theory and Logical Design, John Wiley &amp; Sons Inc., 1974 Canada, 43YGQ175 Pre-Qualifications:  Info Link:  Notice: "}, "type": "Lecture", "parent_course": {"name": "B.Sc. Computer Engineering (Software Engineering), PO19 - B-CE(SE)-19", "url": "https://www.uni-due.de/vdb/en_EN/studiengang/261/detail", "id": "261", "type": "StudyCourse"}}}